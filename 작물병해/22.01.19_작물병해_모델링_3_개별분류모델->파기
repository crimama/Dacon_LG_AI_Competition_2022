{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"22.01.19_작물병해_모델링_3_개별분류모델->파기","provenance":[{"file_id":"1mjqy_yjiz2XSJicMZQLbMChd2zw9S7gD","timestamp":1642554321310},{"file_id":"1KBT5XggBtCsFvtbg6CSLhXUJUg5DUgsa","timestamp":1642550823120}],"toc_visible":true,"collapsed_sections":["e2knImhRgc6n","3Xy9dlZ1DcvS","s0w8c3HxbfM0","HsBEaYBKbgXh","O5yDWXZ4fnJ4","QtglgRP4BR-8","QtXMgEe9ukvw","rQxyu64JhEdt","OVJ2JIu-0_5q","ehmuZonAuqTA","H_NgozXjcscv","xHkY6znP7_LC","p51LzvsRYIn0","xgoPAMwfbueB","WtxFAkAVb6gS","5yjVMfNWcpTe","S1y3SFFwdpV5","von-9jBqlVBV","O9EHZV3gl6Kg","FsRzfvkhmcxX","9Bm7f9rcpcPA","nCHqhTPErpzY","FJWIxMoIrmcE","OW7GzqX1CwzM","QGDlv5upDwDM","So2gO7F1D0wk","rGTxesHQD2pj","Y-47QIvPD2pj","lmnshJT8FY6l","jAb3pBOmHg5r","hHurg4n5Bk8_","svgJvJGeBnDd","JQv08PrPYJEQ"],"machine_shape":"hm","mount_file_id":"1mjqy_yjiz2XSJicMZQLbMChd2zw9S7gD","authorship_tag":"ABX9TyOilJWRZxMQS9rDXbvQ4hIG"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"brxPoGgFaw-k"},"outputs":[],"source":[""]},{"cell_type":"markdown","metadata":{"id":"Ab8zJIYh-fgL"},"source":["#데이터 호출 "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":150932,"status":"ok","timestamp":1642551753726,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"fJThLClH-hr9","outputId":"3dcf3f6c-7fc0-4f88-df39-40d30d99594d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  /content/drive/MyDrive/DataSet/작물병해/data.zip\n","  inflating: sample_submission.csv   \n","  inflating: test.zip                \n","  inflating: train.csv               \n","  inflating: train.zip               \n"]}],"source":["!unzip /content/drive/MyDrive/DataSet/작물병해/data.zip"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1-0ubyia_1Nu"},"outputs":[],"source":["!unzip train.zip"]},{"cell_type":"markdown","metadata":{"id":"Zo0y4tau_V4E"},"source":["# 모듈 임포트"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dRznw7f2_XCs"},"outputs":[],"source":["import pandas as pd \n","import numpy as np \n","import matplotlib.pyplot as plt \n","import os\n","import cv2 \n","from glob import glob\n","from tqdm import tqdm\n","import json"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"820F_6HCb9-1"},"outputs":[],"source":["from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import BatchNormalization\n","from tensorflow.keras.layers import Conv2D\n","from tensorflow.keras.layers import MaxPooling2D\n","from tensorflow.keras.layers import Activation\n","from tensorflow.keras.layers import Dropout\n","from tensorflow.keras.layers import Dense\n","from tensorflow.keras.layers import Flatten\n","from tensorflow.keras.layers import Input\n","from tensorflow.keras import Model\n","from tensorflow.keras.layers import concatenate\n","from tensorflow.keras.applications import resnet50, efficientnet\n","from tensorflow.keras.applications import ResNet50, EfficientNetB0\n","from tensorflow.keras.layers import Bidirectional, LSTM, GRU"]},{"cell_type":"markdown","metadata":{"id":"MM2kasZcgPEq"},"source":["# 데이터 호출"]},{"cell_type":"markdown","metadata":{"id":"1fg7KDK2gRuo"},"source":["## 디렉토리 로드"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lfYFmBZyHZEh"},"outputs":[],"source":["train_csv = sorted(glob('train/*/*.csv'))\n","train_jpg = sorted(glob('train/*/*.jpg'))\n","train_json = sorted(glob('train/*/*.json'))"]},{"cell_type":"markdown","metadata":{"id":"28xaif_JgT0P"},"source":["## json 파일 로드"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hQmRd8iLH6GH"},"outputs":[],"source":["crops = []\n","diseases = []\n","risks = []\n","labels = []\n","\n","for i in range(len(train_json)):\n","    with open(train_json[i], 'r') as f:\n","        sample = json.load(f)\n","        crop = sample['annotations']['crop']\n","        disease = sample['annotations']['disease']\n","        risk = sample['annotations']['risk']\n","        label=f\"{crop}_{disease}_{risk}\"\n","    \n","        crops.append(crop)\n","        diseases.append(disease)\n","        risks.append(risk)\n","        labels.append(label)\n","        \n","label_unique = sorted(np.unique(labels))\n","label_unique = {key:value for key,value in zip(label_unique, range(len(label_unique)))}\n","\n","labels = [label_unique[k] for k in labels]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oXNUZ_xjH8MP"},"outputs":[],"source":["json = pd.DataFrame([crops,diseases,risks,labels]).T\n","json.columns = ['crop','disease','risk','label']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":273,"status":"ok","timestamp":1642551790116,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"S4_4u0BiBQu9","outputId":"6913a296-e8d9-4f51-c3b6-4500acdea500"},"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-e83f4667-baeb-449e-ab26-021c09ce6d9f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>crop</th>\n","      <th>disease</th>\n","      <th>risk</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>b7</td>\n","      <td>1</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>00</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>00</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>00</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>00</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e83f4667-baeb-449e-ab26-021c09ce6d9f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e83f4667-baeb-449e-ab26-021c09ce6d9f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e83f4667-baeb-449e-ab26-021c09ce6d9f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["  crop disease risk label\n","0    3      b7    1     9\n","1    3      00    0     3\n","2    3      00    0     3\n","3    3      00    0     3\n","4    3      00    0     3"]},"metadata":{},"execution_count":8}],"source":["json.head()"]},{"cell_type":"markdown","metadata":{"id":"sJnoGUK71mEU"},"source":["### diseases 정제"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"f1DjKun91np-"},"outputs":[],"source":["disease_unique = sorted(np.unique(diseases))\n","disease_unique = {key:value for key,value in zip(disease_unique, range(len(disease_unique)))}"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LBgIFy3V1y0h"},"outputs":[],"source":["diseases = [disease_unique[k] for k in diseases]\n","diseases = np.array(diseases)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"executionInfo":{"elapsed":308,"status":"ok","timestamp":1642553047612,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"Cjko20bx2AeL","outputId":"3be15fa6-b889-4db7-8acd-fd503a73e35b"},"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}],"source":["plt.hist(diseases)\n","plt.show()"]},{"cell_type":"markdown","source":["0-1 분류"],"metadata":{"id":"aFlnKCDEuAMc"}},{"cell_type":"code","source":["temp = pd.DataFrame(diseases)\n","temp.loc[temp[0]!=0,0]=1"],"metadata":{"id":"dzfzLYMFuBqq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["one_diseases = np.array(temp[0])"],"metadata":{"id":"NBby12_6ukQ3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.hist(one_diseases)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"fdTq86D-usOm","executionInfo":{"status":"ok","timestamp":1642552028634,"user_tz":-540,"elapsed":541,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"82a184aa-3417-440d-a825-94cf76fa21eb"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"eGOgnlkaYWQC"},"source":["### risk 정제 "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"executionInfo":{"elapsed":297,"status":"ok","timestamp":1642552069615,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"QOLl1EJ9YXbT","outputId":"468ec0d1-dcbe-460e-df81-4ccd09be6843"},"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}],"source":["plt.hist(risks)\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"e2knImhRgc6n"},"source":["## 이미지 로드 "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":36256,"status":"ok","timestamp":1642552109422,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"JWCW1qcEgdyK","outputId":"140013ee-e284-4ee1-c6f2-17d0e583dae0"},"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 5767/5767 [00:36<00:00, 159.09it/s]\n"]}],"source":["def img_load(path):\n","    img = cv2.imread(path)[:,:,::-1]\n","    img = cv2.resize(img, (224, 224))\n","    return img\n","\n","imgs = [img_load(k) for k in tqdm(train_jpg)]"]},{"cell_type":"markdown","metadata":{"id":"3Xy9dlZ1DcvS"},"source":["## csv 로드 \n","- csv 파일들을 모두 불러올 방법 \n","- 특정 컬럼만 추출 \n","- 10분 단위로 두개 씩 있는데 이걸 하나로 합칠 방법 \n","- 우선은 CO2를 제외한 나머지 만을 이용 해 LSTM 모델 진행\n","  - 현재는 전체 데이터, 특정 컬럼만 모으는데 집중 "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7M_T1iIqqRsq"},"outputs":[],"source":["# csv_features = ['측정시각','내부 온도 1 평균', '내부 온도 1 최고', '내부 온도 1 최저', '내부 습도 1 평균', '내부 습도 1 최고', \n","#                 '내부 습도 1 최저', '내부 이슬점 평균', '내부 이슬점 최고', '내부 이슬점 최저','내부 CO2 평균', '내부 CO2 최저','내부 CO2 최고']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"155mYE2Rs0hq"},"outputs":[],"source":["csv_features = ['내부 온도 1 평균', '내부 온도 1 최고', '내부 온도 1 최저', '내부 습도 1 평균', '내부 습도 1 최고', \n","                '내부 습도 1 최저', '내부 이슬점 평균', '내부 이슬점 최고', '내부 이슬점 최저']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mYKt9__jtFDC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1642552253372,"user_tz":-540,"elapsed":38502,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"3a92703a-db4f-40f8-b87d-deeb83a6943b"},"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 5767/5767 [00:38<00:00, 150.34it/s]\n"]}],"source":["def csv_load(path):\n","    temp = pd.read_csv(path)\n","    temp = np.array(temp[csv_features])\n","    try:\n","      temp = temp.astype(float)\n","    except:\n","      temp[temp=='-']=0.\n","      temp = temp.astype(float)\n","    temp = cv2.resize(temp, dsize = (9,294))\n","    return temp\n","\n","csvs = [csv_load(k) for k in tqdm(train_csv)]\n","csvs = np.array(csvs)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Eqmd1Ko0twjO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1642552255672,"user_tz":-540,"elapsed":259,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"faf0ae0b-ba87-4641-d0a7-da062b79a55d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5767, 294, 9)"]},"metadata":{},"execution_count":34}],"source":["csvs.shape"]},{"cell_type":"markdown","metadata":{"id":"xnyaO2aVB5o7"},"source":["# 전처리 "]},{"cell_type":"markdown","metadata":{"id":"s0w8c3HxbfM0"},"source":["### 넘파이 변형"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Wt-BIkLIlN-f"},"outputs":[],"source":["labels = np.array(labels)\n","imgs = np.array(imgs)\n","crops = np.array(crops)\n","one_diseases = np.array(one_diseases)\n","risks = np.array(risks)"]},{"cell_type":"markdown","metadata":{"id":"HsBEaYBKbgXh"},"source":["### crop range 변경 "]},{"cell_type":"code","source":["set(crops)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nol5dhQ55eri","executionInfo":{"status":"ok","timestamp":1642552273581,"user_tz":-540,"elapsed":258,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"ab048e33-64f5-450a-b99e-9945d691f72d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{1, 2, 3, 4, 5, 6}"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kkPWg2XZbenY"},"outputs":[],"source":["crops[crops==1]=0\n","crops[crops==2]=1\n","crops[crops==3]=2\n","crops[crops==4]=3\n","crops[crops==5]=4\n","crops[crops==6]=5"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1642552275911,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"VXoE20Khh-wD","outputId":"a2cb19ba-4316-4dd5-f85d-75fceaf02d3c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{0, 1, 2, 3, 4, 5}"]},"metadata":{},"execution_count":39}],"source":["set(crops)"]},{"cell_type":"markdown","metadata":{"id":"5dMsaSpof0S_"},"source":["# Phase 0 - 데이터 train - test 분할"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QXLU1iqCf4lb"},"outputs":[],"source":["index = int(5767*0.8)\n","train_imgs = imgs[:index,:]\n","test_imgs = imgs[index:,:]\n","\n","train_crops = crops[:index]\n","test_crops = crops[index:]\n","\n","train_diseases = one_diseases[:index]\n","test_diseases = one_diseases[index:]\n","\n","train_envs = csvs[:index,:,:]\n","test_envs = csvs[index:,:,:]\n","\n","train_risks = risks[:index]\n","test_risks = risks[index:]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":366,"status":"ok","timestamp":1642552298528,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"VBFqDce5f4lb","outputId":"c2152ffb-6ac7-4862-b95c-ca028d43335b"},"outputs":[{"output_type":"stream","name":"stdout","text":["(4613, 224, 224, 3) (4613,) (4613,) (4613, 294, 9) (4613,)\n"]}],"source":["print(train_imgs.shape,train_crops.shape,train_diseases.shape,train_envs.shape,train_risks.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X37B66Jaf4lc"},"outputs":[],"source":["train_imgs = efficientnet.preprocess_input(train_imgs)\n","test_imgs = efficientnet.preprocess_input(test_imgs)"]},{"cell_type":"markdown","metadata":{"id":"qnYffruzggkZ"},"source":["# Phase 1 \n","- 이미지만을 이용 해 crop classfication \n","- resnet, efficient net만 이용 해서 image classification "]},{"cell_type":"markdown","metadata":{"id":"O5yDWXZ4fnJ4"},"source":["## 데이터 확인"]},{"cell_type":"markdown","metadata":{"id":"tdLSIJQGfocJ"},"source":["이미지"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":414,"status":"ok","timestamp":1642488027966,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"NAqBBbu4fpoE","outputId":"51940e6e-d467-45da-ef91-d702448bd00b"},"outputs":[{"output_type":"stream","name":"stdout","text":["(4613, 224, 224, 3) (1154, 224, 224, 3)\n"]}],"source":["print(train_imgs.shape,test_imgs.shape)"]},{"cell_type":"markdown","metadata":{"id":"dW2-UDcUfqDJ"},"source":["crops"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":400,"status":"ok","timestamp":1642488030263,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"I6EQaAbBfrpR","outputId":"3e756c9e-7a54-4cc3-d390-ad68ef4b757e"},"outputs":[{"output_type":"stream","name":"stdout","text":["(4613,)\n"]}],"source":["print(train_crops.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"executionInfo":{"elapsed":613,"status":"ok","timestamp":1642488032261,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"YjpNd9TpfsL5","outputId":"5adccc52-f00e-4b78-cc4e-2e806126a8ab"},"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}],"source":["plt.hist(train_crops)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1642488033873,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"rsgnsa3sgESa","outputId":"6c684ebf-5c7b-458d-9055-f17b1ff01bbd"},"outputs":[{"output_type":"stream","name":"stdout","text":["{0, 1, 2, 3, 4, 5}\n"]}],"source":["print(set(train_crops))"]},{"cell_type":"markdown","metadata":{"id":"QtglgRP4BR-8"},"source":["## 콜백\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"b51PdANbHFxX"},"outputs":[],"source":["# copy from https://gist.github.com/stared/dfb4dfaf6d9a8501cd1cc8b8cb806d2e\n","# loss 실시간 출력 \n","from IPython.display import clear_output\n","from tensorflow.keras.callbacks import Callback\n","\n","class PlotLosses(Callback):\n","\n","  def on_train_begin(self, logs={}):\n","    self.epochs = []\n","    self.losses = []\n","    self.val_losses = []\n","    self.logs = []\n","    self.fig = plt.figure()\n","\n","\n","  def on_epoch_end(self, epoch, logs={}):\n","\n","    self.epochs.append(epoch)\n","    self.losses.append(logs.get('loss'))\n","    self.val_losses.append(logs.get('val_loss'))\n","\n","    clear_output(wait=True)\n","    plt.plot(self.epochs, self.losses, label=\"loss\")\n","    plt.plot(self.epochs, self.val_losses, label=\"val_loss\")\n","    plt.legend()\n","    plt.show();\n","    print(\"loss = \", self.losses[-1], \", val_loss = \", self.val_losses[-1])\n","\n","#call backs 선언\n","plot_losses = PlotLosses()\n","\n","from tensorflow.keras.callbacks import EarlyStopping\n","early_stopping = EarlyStopping(\n","    monitor='val_loss',  # 모니터링 대상, 이걸 기준으로 멈춤 \n","    verbose=1,\n","    patience=5)         # 중지까지의 여유분\n","\n","\n","callbacks = [plot_losses,early_stopping]"]},{"cell_type":"markdown","metadata":{"id":"QtXMgEe9ukvw"},"source":["## 모델"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JnF9fS1Sgczu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1642552392022,"user_tz":-540,"elapsed":4387,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"7f931d36-6bf3-4a97-c59b-f41d4481de50"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/keras-applications/efficientnetb0_notop.h5\n","16711680/16705208 [==============================] - 0s 0us/step\n","16719872/16705208 [==============================] - 0s 0us/step\n"]}],"source":["# conv_layers = EfficientNetB0(weights='imagenet', include_top=False, input_shape=(224, 224, 3))\n","# conv_layers.trainable = False\n","\n","conv_layers = EfficientNetB0(weights='imagenet', include_top=False, input_shape=(224, 224, 3))\n","conv_layers.trainable = False"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KrjNlkxSbEkq"},"outputs":[],"source":["image_input = Input((224,224,3))\n","x = conv_layers(image_input)\n","x = Flatten()(x)\n","x = Dense(32, activation = 'relu')(x)\n","x = BatchNormalization()(x)\n","x = Dense(32, activation = 'relu')(x)\n","output = Dense(6,activation = 'softmax')(x)\n","phase1_model = Model(image_input,output)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":661},"executionInfo":{"elapsed":831,"status":"ok","timestamp":1642552395879,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"aiemPMNBgtUv","outputId":"17adddbe-725b-41c7-ad2a-95b459bffad6"},"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":47}],"source":["#모델 설계 구조 \n","import tensorflow \n","tensorflow.keras.utils.plot_model(phase1_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":273,"status":"ok","timestamp":1642552399576,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"mKyv-E4zbNDq","outputId":"ccaab54e-6921-4201-9e33-1bd85efd1038"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_2 (InputLayer)        [(None, 224, 224, 3)]     0         \n","                                                                 \n"," efficientnetb0 (Functional)  (None, 7, 7, 1280)       4049571   \n","                                                                 \n"," flatten (Flatten)           (None, 62720)             0         \n","                                                                 \n"," dense (Dense)               (None, 32)                2007072   \n","                                                                 \n"," batch_normalization (BatchN  (None, 32)               128       \n"," ormalization)                                                   \n","                                                                 \n"," dense_1 (Dense)             (None, 32)                1056      \n","                                                                 \n"," dense_2 (Dense)             (None, 6)                 198       \n","                                                                 \n","=================================================================\n","Total params: 6,058,025\n","Trainable params: 2,008,390\n","Non-trainable params: 4,049,635\n","_________________________________________________________________\n"]}],"source":["#학습 방식은 동일 \n","phase1_model.compile(optimizer=\"adam\", loss=\"sparse_categorical_crossentropy\",metrics = ['accuracy'])\n","phase1_model.summary()"]},{"cell_type":"markdown","metadata":{"id":"voMXuI21ZPj9"},"source":["efficient net preprocess input 적용 "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":317},"executionInfo":{"elapsed":114396,"status":"ok","timestamp":1642552521094,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"VQpkYUtCZPJz","outputId":"9e4d468e-8a03-4be7-a460-466a358792f9"},"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["loss =  0.0017812508158385754 , val_loss =  0.03887838497757912\n","\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r15/15 [==============================] - 4s 303ms/step - loss: 0.0018 - accuracy: 1.0000 - val_loss: 0.0389 - val_accuracy: 0.9913\n","Epoch 00022: early stopping\n"]}],"source":["history = phase1_model.fit(train_imgs,train_crops, epochs=50, verbose=1, batch_size=256, validation_split=0.2,callbacks=callbacks)"]},{"cell_type":"markdown","metadata":{"id":"rQxyu64JhEdt"},"source":["## 예측"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3020,"status":"ok","timestamp":1642552561658,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"9nPn0IFwdrga","outputId":"a8abaa7c-fcb4-4de9-fe7c-6fe44ba12983"},"outputs":[{"output_type":"stream","name":"stdout","text":["0.9844020797227037\n"]}],"source":["y_ = phase1_model.predict(test_imgs)\n","predicted = np.argmax(y_,axis=1)\n","error = test_crops - predicted\n","print(len(error[error==0])/len(error))"]},{"cell_type":"markdown","metadata":{"id":"iE_DsdCluhgg"},"source":["# Phase 2 "]},{"cell_type":"markdown","metadata":{"id":"OVJ2JIu-0_5q"},"source":["##데이터 확인"]},{"cell_type":"markdown","metadata":{"id":"n4Uh8_Y71BJR"},"source":["이미지"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":434,"status":"ok","timestamp":1642488254144,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"GmemtdcV1EqR","outputId":"9b4a80a2-51e2-4d9a-a318-e7c2f89976d6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5767, 224, 224, 3)"]},"metadata":{},"execution_count":34}],"source":["imgs.shape"]},{"cell_type":"markdown","metadata":{"id":"51Jv64Up1QHo"},"source":["Env "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1642488255719,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"Ht-5Hmwz1Q9-","outputId":"b22f6bee-4495-4848-f020-16af77dfc9dd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5767, 294, 9)"]},"metadata":{},"execution_count":35}],"source":["csvs.shape"]},{"cell_type":"markdown","metadata":{"id":"zwbtqwJN1VHO"},"source":["Crop"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1642481387401,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"bS9jQbmL1WAh","outputId":"80e014f1-284c-43f7-bc4d-dbad7b7cbc7d"},"outputs":[{"data":{"text/plain":["(5767,)"]},"execution_count":243,"metadata":{},"output_type":"execute_result"}],"source":["crops.shape"]},{"cell_type":"markdown","metadata":{"id":"IZ9JwSzK1c4m"},"source":["disease"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":430,"status":"ok","timestamp":1642488260467,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"wB0oRjy31drP","outputId":"9d5f6ee9-44b6-4867-bce7-a1ed684575a6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5767,)"]},"metadata":{},"execution_count":36}],"source":["diseases.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":251,"status":"ok","timestamp":1642552574659,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"dOJ8Q4zHhR9_","outputId":"99e166e6-150b-48a1-e6de-cf498915594e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{0, 1}"]},"metadata":{},"execution_count":51}],"source":["set(train_diseases)"]},{"cell_type":"markdown","metadata":{"id":"ehmuZonAuqTA"},"source":["## 모델"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ilJgcyaFujsl"},"outputs":[],"source":["conv_layers = EfficientNetB0(weights='imagenet', include_top=False, input_shape=(224, 224, 3))\n","conv_layers.trainable = False"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iQP07PP2yRha"},"outputs":[],"source":["#Env 데이터 파트 \n","Env_input = Input((294,9)) #<---- shape \n","x = Bidirectional(LSTM(128))(Env_input) #bidirec\n","x = Flatten()(x)\n","x = BatchNormalization()(x)\n","x = Dense(32, activation ='relu')(x)\n","Env_output = Dense(10 ,activation='linear')(x)\n","\n","#iamge 데이터 파트 \n","image_input = Input((224,224,3))\n","x = conv_layers(image_input)\n","x = Flatten()(x)\n","x = BatchNormalization()(x)\n","x = Dense(32, activation='relu')(x)\n","image_output = Dense(10, activation='linear')(x)\n","\n","#crop 데이터 파트 \n","crop_input = Input(1) #<---- \n","x = Dense(32, activation = 'relu')(crop_input)\n","x = BatchNormalization()(x)\n","x = Dense(32, activation = 'relu')(x)\n","crop_output = Dense(10, activation = 'linear')(x) #<-- linear \n","\n","#헤드 결합 \n","combined_input = concatenate([Env_output,image_output,crop_output])\n","x= Dense(32, activation = 'relu')(combined_input) #<--- Dense \n","x = BatchNormalization()(x)\n","output = Dense(2,activation = 'softmax')(x)\n","\n","phase2_model = Model([Env_input,image_input,crop_input],output)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":897},"executionInfo":{"elapsed":379,"status":"ok","timestamp":1642552602951,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"IgnM0-CHyQRG","outputId":"dd08937d-0ba9-4e16-932d-cdab7b6ee34c"},"outputs":[{"output_type":"execute_result","data":{"image/png":"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AIDlSEIBAAAAAADAciShAAAAAAAAYDmSUAAAAAAAALAcSSjo1KlTuvvuuxUdHa3g4GBdeeWVatWqlWw2m1566SVPh1dvM2fOVGJiooKCghQSEqLExEQ99NBDKigosLzuJUuWKC4uTjabrcq/jh07SpKefvrpRtXuABqnxj5nnOnkyZNKTEzUtGnTLK+LOQNAY3bbbbepefPmstlsWr9+vafDqZeysjLNnj1bycnJVS5TXFysJ554QgkJCQoICFB4eLi6d++uHTt2WBpbVXNJQECAWrVqpf79+2vWrFk6fPiwpXEAVSEJBT3zzDN6//33tXnzZs2ZM0fjx4/XqlWrPB2Wy3z22We6/fbbtWvXLu3fv1+PPfaYZs6cqdTUVMvrTklJ0fbt2xUfH6+wsDAZY2SMUUlJiQoLC7V//34FBwdLku69995G1e4AGqfGPmecaerUqdqyZYtb6mLOANCYvfLKK3r55Zc9HUa9bd26VZdddpkmT56swsLCKpdLT0/XX//6V/39739XYWGhvv/+e8XHx+vYsWOWxlfZXFJWVqYDBw4oOztbnTp1UmZmprp166avvvrK0liAypCEgpYuXapevXopPDxcd9xxR52TMydOnDjrbEBlZe4WEBCg3/72t4qKilKzZs2UlpamwYMH66OPPtLevXs9EpOvr6+CgoLUqlUrnXPOOfXalre2O4DGqbHPGadbtWqVvvvuO0+HwZwBAF7im2++0f33368JEyaoR48eVS63aNEiLV26VDk5Obr44ovl5+enNm3aaNmyZerevbsbI/6VzWZTeHi4+vfvrwULFig7O1v79+/XDTfcoPz8fLfHg6aNJBSUm5srf3//em/n1Vdf1YEDB2osc7e33npLdru9Qlm7du0kyfIzEbWxdOnSeq3vre0OoHFq7HNGuRMnTui+++7TnDlzPB1KBcwZABoym83m6RDq5fzzz9eSJUs0cuRIBQYGVrnciy++qJ49eyopKcmN0dVeamqqxowZowMHDvCTbrgdSagm7KOPPlJCQoL27t2r119/XTabTc2aNaty+c8++0xdu3ZVWFiY7Ha7kpKS9MEHH0iSJk2apClTpmjbtm2y2WxKSEiotEySSktL9fDDDysmJkZBQUE677zzlJWVJUmaN2+eQkJCFBwcrGXLlum6665TaGio2rdvr4ULF7rsvW/dulXh4eGK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pmrVqik0NFSHDh3S+PHj1aBBA91///0KDg6Wj4+Prr76atWpU0d+fn4KDg5W27Zt1blzZzVs2FCBgYGKiIgo0Uk/3/NYmo0bN6pRo0ZyOBx6/vnnJZ1+vcr6DfO///3vi3q9ShunvM+VK899VfHtt99Kkm644YZiyz2lTmbMmKE//OEPevnll/XRRx+d9/9CPVAPrmKfQY14Uo3k5ubq888/t+WcM+XFPoN68OZ9hsR+gzqpHHUye/ZsPfjggxW2vYvFPoNasLsWzgQql6SkJOPC6sYYY2666SbTuHFj89NPP5m8vDyzbds2c/3115vAwEDzww8/FK2XkpJiHnvsMXP06FFz5MgR065dO1OzZs2i+/v162eio6OLbXvu3LlGkpk1a5Y5cuSIOXr0qPnnP/9pBg8ebIwxZtq0aUaSWbt2rTl27Jg5evSoue2220xAQIDJzs526f9x7vYyMjLMoUOHTOfOnU1wcLDJzc0tWm/69OnG39/fLF682Bw7dsx8++23pm3btqZWrVrm4MGDJbb34IMPmueee8707dvXfPfdd+bRRx81ksymTZtMdna2+e2330yPHj2MJPPee++Zw4cPm+zsbPPAAw8YSWbLli3lfh537dplJJkFCxYULdu/f7+RZJ577rmidaZMmVL0HP3666+mevXqpkOHDqagoOCiX69zx7mY5+pCz315PfnkkyYyMtJEREQYPz8/c/nll5s777zTfPHFFy5vyxhjYmJiTExMjMuPi46ONuHh4UX/PnHihFm9erWJiooyt9xyi8nKyiq2vt11Eh0dbX766SdjjDGfffaZ8fHxMZdffnlRztWrV5s777yz2GOoB8+uB0kmKSnJpcdYuX32GdRIWeNczHNVETXy008/GUmmTZs2pmvXrqZu3bomICDANG3a1Dz//POmsLDQpe0Zc3HHU8awz6Ae7K+Hiz3esXL77Deok7LGuZjnqqLea5wrLS3NNGvWrOj/56qLOV5jn0Et2F0L5zneSba8CdW6detiy7799lsjyUyYMKHMx82cOdNIMocOHTLGlHxyc3NzTUREhOnWrVuxx+Xn55t58+YZY/73BObk5BTd/9prrxlJZtu2bS79P8ra3vz5840k8+OPPxpjThd3SEiIiYuLK/bYL774wkgyTzzxxHm3Z4wpKobjx48XLXv11VeNJLN169YS21y2bFmZ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2LFjGj9+vN2xAAAAgCrniy++0G233aYWLVpo1apVCg8PtzsS4FVoQgEeYvLkyQoKCtLYsWN1+PBhzZ492+5IAAAAQJWxdu1a9enTR127dlVSUpKCgoLsjgR4HZpQgAd54IEHFBERob/85S/KysrSs88+Kx8ffjULAAAAXIq33npLAwcOVP/+/bVo0SL5+fnZHQnwSjShAA8zZMgQhYWFKS4uThkZGUpMTJTTSakCAAAAF2PBggUaM2aMRo8erXnz5vEhL2Ajqg/wQHfddZdWrFihFStWqF+/fjp58qTdkQAAAIBKZ86cORo1apQmTpzIrwwAD0AFAh7qtttu05o1a/Tpp5/qtttu0/Hjx+2OBAAAAFQKxhhNmDBB06ZN04svvsj5VgEPQRMK8GCdO3fWxx9/rG3btummm27SkSNH7I4EAAAAeLSCggINGzZMzz33nF5//XWNGDHC7kgA/osmFODh2rZtq/Xr1+vgwYPq0qWLDhw4YHckAAAAwCOdOnVKAwYMUFJSklatWqXY2Fi7IwE4C00ooBJo2rSpNmzYoPz8fHXq1Em7d++2OxIAAADgUbKysnT77bdr3bp1+vDDD9WjRw+7IwE4B00ooJKIiorS+vXrFR4ers6dO2vr1q12RwIAAAA8Qnp6urp06aLt27frk08+UYcOHeyOBKAUNKGASqROnTpat26dGjdurK5du2rTpk12RwIAAABstXfvXnXp0kXHjh3Thg0b1KpVK7sjASgDTSigkomIiNCHH36oa6+9VjfffLPWrl1rdyQAAADAFt999506deokf39/bdy4UdHR0XZHAnAeNKGASqhatWp6++231aNHD/Xq1UsrV660OxIAAADgVl9++aW6dOmixo0ba+PGjapfv77dkQBcAE0ooJLy9/fXsmXLFB8fr/79++vVV1+1OxIAAADgFuvWrdNNN92kdu3aac2aNQoPD7c7EoBycNodAMDF8/X11UsvvaSIiAjde++9OnXqlO677z67YwEAAACWWblypQYOHKh+/fopMTFRfn5+dkcCUE40oYBKzuFwKCEhQbVr19bIkSN17NgxTZo0ye5YAAAAQIX717/+peHDh2vEiBF69tln5ePDj3uAyoQmFFBFTJ48WSEhIXrggQd09OhRzZ492+5IAAAAQIWZM2eOpk6dqkmTJnGsC1RSNKGAKmT06NEKDw/X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\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":54}],"source":["#모델 설계 구조 \n","import tensorflow \n","tensorflow.keras.utils.plot_model(phase2_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6-8KdQhS3Lk0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1642552606600,"user_tz":-540,"elapsed":321,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"41b56293-c01e-48e3-f488-529c7e4469aa"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_2\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," input_6 (InputLayer)           [(None, 294, 9)]     0           []                               \n","                                                                                                  \n"," input_7 (InputLayer)           [(None, 224, 224, 3  0           []                               \n","                                )]                                                                \n","                                                                                                  \n"," bidirectional_1 (Bidirectional  (None, 256)         141312      ['input_6[0][0]']                \n"," )                                                                                                \n","                                                                                                  \n"," efficientnetb0 (Functional)    (None, 7, 7, 1280)   4049571     ['input_7[0][0]']                \n","                                                                                                  \n"," input_8 (InputLayer)           [(None, 1)]          0           []                               \n","                                                                                                  \n"," flatten_3 (Flatten)            (None, 256)          0           ['bidirectional_1[0][0]']        \n","                                                                                                  \n"," flatten_4 (Flatten)            (None, 62720)        0           ['efficientnetb0[2][0]']         \n","                                                                                                  \n"," dense_16 (Dense)               (None, 32)           64          ['input_8[0][0]']                \n","                                                                                                  \n"," batch_normalization_5 (BatchNo  (None, 256)         1024        ['flatten_3[0][0]']              \n"," rmalization)                                                                                     \n","                                                                                                  \n"," batch_normalization_6 (BatchNo  (None, 62720)       250880      ['flatten_4[0][0]']              \n"," rmalization)                                                                                     \n","                                                                                                  \n"," batch_normalization_7 (BatchNo  (None, 32)          128         ['dense_16[0][0]']               \n"," rmalization)                                                                                     \n","                                                                                                  \n"," dense_12 (Dense)               (None, 32)           8224        ['batch_normalization_5[0][0]']  \n","                                                                                                  \n"," dense_14 (Dense)               (None, 32)           2007072     ['batch_normalization_6[0][0]']  \n","                                                                                                  \n"," dense_17 (Dense)               (None, 32)           1056        ['batch_normalization_7[0][0]']  \n","                                                                                                  \n"," dense_13 (Dense)               (None, 10)           330         ['dense_12[0][0]']               \n","                                                                                                  \n"," dense_15 (Dense)               (None, 10)           330         ['dense_14[0][0]']               \n","                                                                                                  \n"," dense_18 (Dense)               (None, 10)           330         ['dense_17[0][0]']               \n","                                                                                                  \n"," concatenate_1 (Concatenate)    (None, 30)           0           ['dense_13[0][0]',               \n","                                                                  'dense_15[0][0]',               \n","                                                                  'dense_18[0][0]']               \n","                                                                                                  \n"," dense_19 (Dense)               (None, 32)           992         ['concatenate_1[0][0]']          \n","                                                                                                  \n"," batch_normalization_8 (BatchNo  (None, 32)          128         ['dense_19[0][0]']               \n"," rmalization)                                                                                     \n","                                                                                                  \n"," dense_20 (Dense)               (None, 2)            66          ['batch_normalization_8[0][0]']  \n","                                                                                                  \n","==================================================================================================\n","Total params: 6,461,507\n","Trainable params: 2,285,856\n","Non-trainable params: 4,175,651\n","__________________________________________________________________________________________________\n"]}],"source":["#학습 방식은 동일 \n","phase2_model.compile(optimizer=\"adam\", loss=\"sparse_categorical_crossentropy\",metrics = ['accuracy'])\n","phase2_model.summary() #optimizer tuning"]},{"cell_type":"markdown","metadata":{"id":"H_NgozXjcscv"},"source":["## 학습"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":317},"executionInfo":{"elapsed":151883,"status":"ok","timestamp":1642552763175,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"VGBLwf8a4NdV","outputId":"8796022b-d618-4d91-9b12-6ab674867745"},"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["loss =  0.000911615090444684 , val_loss =  0.0539000928401947\n","\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r15/15 [==============================] - 5s 364ms/step - loss: 9.1162e-04 - accuracy: 1.0000 - val_loss: 0.0539 - val_accuracy: 0.9794\n","Epoch 00026: early stopping\n"]}],"source":["history = phase2_model.fit([train_envs,train_imgs,train_crops],train_diseases, epochs=50, verbose=1, batch_size=256, validation_split=0.2,callbacks=callbacks)"]},{"cell_type":"markdown","metadata":{"id":"xHkY6znP7_LC"},"source":["## 예측"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3794,"status":"ok","timestamp":1642552784348,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"6UQ8te1K7zOv","outputId":"293bd969-2d44-4859-ae23-f124157ac8c5"},"outputs":[{"output_type":"stream","name":"stdout","text":["0.9852686308492201\n"]}],"source":["y_ = phase2_model.predict([test_envs,test_imgs,test_crops])\n","predicted = np.argmax(y_,axis=1)\n","error = test_diseases - predicted\n","print(len(error[error==0])/len(error))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":266},"executionInfo":{"elapsed":365,"status":"ok","timestamp":1642552789199,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"XlfV0nZj8BZG","outputId":"34514928-95e8-40e5-a53d-04c3abe2020f"},"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"needs_background":"light"}}],"source":["plt.subplot(1,2,1)\n","plt.hist(predicted)\n","\n","plt.subplot(1,2,2)\n","plt.hist(test_diseases)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":306,"status":"ok","timestamp":1642552794372,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"ZIEHvxH08Pjv","outputId":"aa20e0cb-ca20-4f27-d73b-d508ccbcedea"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[767   6]\n"," [ 11 370]]\n"]}],"source":["from sklearn.metrics import classification_report\n","from sklearn.metrics import confusion_matrix\n","\n","cm = confusion_matrix(test_diseases, predicted)\n","print(cm)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":263,"status":"ok","timestamp":1642552801153,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"7h11w_bS8nLK","outputId":"4d48b02b-c012-4323-ec2a-0051e7a37d88"},"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.99      0.99      0.99       773\n","           1       0.98      0.97      0.98       381\n","\n","    accuracy                           0.99      1154\n","   macro avg       0.98      0.98      0.98      1154\n","weighted avg       0.99      0.99      0.99      1154\n","\n"]}],"source":["print(classification_report(test_diseases, predicted, target_names=['0','1']))"]},{"cell_type":"markdown","source":["# Phase 2-1"],"metadata":{"id":"dsnfShMWxtZK"}},{"cell_type":"markdown","source":["## 데이터 확인\n"],"metadata":{"id":"RMa3UYQ2xvI9"}},{"cell_type":"code","source":["diseases_one_to_multi =pd.DataFrame([diseases,one_diseases]).T\n","diseases_one_to_multi.columns = ['multi','one']"],"metadata":{"id":"2yQwxmTSx2II"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["diseases_one_to_multi.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"umyfHeteyJwq","executionInfo":{"status":"ok","timestamp":1642553055530,"user_tz":-540,"elapsed":4,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"3a85f0cd-952c-44c8-8a1a-e79503ca4b4e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-0fe3142d-7615-4e5d-ab8f-bb050f220ba1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>multi</th>\n","      <th>one</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0fe3142d-7615-4e5d-ab8f-bb050f220ba1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0fe3142d-7615-4e5d-ab8f-bb050f220ba1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0fe3142d-7615-4e5d-ab8f-bb050f220ba1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   multi  one\n","0     10    1\n","1      0    0\n","2      0    0\n","3      0    0\n","4      0    0"]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["plt.hist(diseases_one_to_multi[diseases_one_to_multi['one']==1]['multi'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":317},"id":"_MTsHdLcyOdx","executionInfo":{"status":"ok","timestamp":1642553057381,"user_tz":-540,"elapsed":543,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"91050895-71e6-4def-ae99-8b338bd50f67"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([ 52.,  42., 189.,  99., 307., 166.,  32.,  21., 290., 625.]),\n"," array([ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11.]),\n"," <a list of 10 Patch objects>)"]},"metadata":{},"execution_count":83},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["set(diseases_one_to_multi[diseases_one_to_multi['one']==1]['multi'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fzyHdKr1zlM_","executionInfo":{"status":"ok","timestamp":1642553304656,"user_tz":-540,"elapsed":271,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"2d06ca60-cbe0-44ad-a44c-41eef5e139b4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}"]},"metadata":{},"execution_count":90}]},{"cell_type":"markdown","source":["## 데이저 정제"],"metadata":{"id":"65iZGi0Ey4dd"}},{"cell_type":"markdown","source":["diseases"],"metadata":{"id":"3pbiH0Kdz43s"}},{"cell_type":"code","source":["phase2_diseases_multi = np.array(diseases_one_to_multi[diseases_one_to_multi['one']==1]['multi'])"],"metadata":{"id":"FYLeu2Why8mm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["phase2_diseases_one = np.array(diseases_one_to_multi[diseases_one_to_multi['one']==1]['one'])"],"metadata":{"id":"awEZk5d1zR7w"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["image"],"metadata":{"id":"wvAPeUdPz5-W"}},{"cell_type":"code","source":["phase2_imgs = imgs[diseases_one_to_multi['one']==1]"],"metadata":{"id":"8BB1n-Rxz6bs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["phase2_crops = crops[diseases_one_to_multi['one']==1]"],"metadata":{"id":"OkxYzEMy0E9p"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["phase2_csvs = csvs[diseases_one_to_multi['one']==1]"],"metadata":{"id":"N9drHcgo2Ufq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(phase2_imgs.shape,phase2_crops.shape,phase2_diseases_multi.shape,phase2_csvs.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N29g_5M40Ovd","executionInfo":{"status":"ok","timestamp":1642554048735,"user_tz":-540,"elapsed":262,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"75e3df76-9cab-4248-9530-2bc0bd0d57bf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(1823, 224, 224, 3) (1823,) (1823,) (1823, 294, 9)\n"]}]},{"cell_type":"markdown","source":["## 모델"],"metadata":{"id":"U1GlPSJvzWAn"}},{"cell_type":"code","source":["conv_layers = EfficientNetB0(weights='imagenet', include_top=False, input_shape=(224, 224, 3))\n","conv_layers.trainable = False"],"metadata":{"id":"wPMFrKNkzZez"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Env 데이터 파트 \n","Env_input = Input((294,9)) #<---- shape \n","x = Bidirectional(LSTM(128))(Env_input) #bidirec\n","x = Flatten()(x)\n","x = BatchNormalization()(x)\n","x = Dense(32, activation ='relu')(x)\n","Env_output = Dense(10 ,activation='linear')(x)\n","\n","#iamge 데이터 파트 \n","image_input = Input((224,224,3))\n","x = conv_layers(image_input)\n","x = Flatten()(x)\n","x = BatchNormalization()(x)\n","x = Dense(32, activation='relu')(x)\n","image_output = Dense(10, activation='linear')(x)\n","\n","#crop 데이터 파트 \n","crop_input = Input(1) #<---- \n","x = Dense(32, activation = 'relu')(crop_input)\n","x = BatchNormalization()(x)\n","x = Dense(32, activation = 'relu')(x)\n","crop_output = Dense(10, activation = 'linear')(x) #<-- linear \n","\n","#헤드 결합 \n","combined_input = concatenate([Env_output,image_output,crop_output])\n","x= Dense(32, activation = 'relu')(combined_input) #<--- Dense \n","x = BatchNormalization()(x)\n","output = Dense(11,activation = 'softmax')(x)\n","\n","phase2_1_model = Model([Env_input,image_input,crop_input],output)"],"metadata":{"id":"woZ4rB7XzWmm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#학습 방식은 동일 \n","phase2_1_model.compile(optimizer=\"adam\", loss=\"sparse_categorical_crossentropy\",metrics = ['accuracy'])\n","phase2_1_model.summary() "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O9BPZfFCzdzg","executionInfo":{"status":"ok","timestamp":1642554275432,"user_tz":-540,"elapsed":263,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"9b67bbc4-0590-4b44-98e6-8652fe096652"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_7\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," input_22 (InputLayer)          [(None, 294, 9)]     0           []                               \n","                                                                                                  \n"," input_23 (InputLayer)          [(None, 224, 224, 3  0           []                               \n","                                )]                                                                \n","                                                                                                  \n"," bidirectional_6 (Bidirectional  (None, 256)         141312      ['input_22[0][0]']               \n"," )                                                                                                \n","                                                                                                  \n"," efficientnetb0 (Functional)    (None, 7, 7, 1280)   4049571     ['input_23[0][0]']               \n","                                                                                                  \n"," input_24 (InputLayer)          [(None, 1)]          0           []                               \n","                                                                                                  \n"," flatten_13 (Flatten)           (None, 256)          0           ['bidirectional_6[0][0]']        \n","                                                                                                  \n"," flatten_14 (Flatten)           (None, 62720)        0           ['efficientnetb0[7][0]']         \n","                                                                                                  \n"," dense_64 (Dense)               (None, 32)           64          ['input_24[0][0]']               \n","                                                                                                  \n"," batch_normalization_26 (BatchN  (None, 256)         1024        ['flatten_13[0][0]']             \n"," ormalization)                                                                                    \n","                                                                                                  \n"," batch_normalization_27 (BatchN  (None, 62720)       250880      ['flatten_14[0][0]']             \n"," ormalization)                                                                                    \n","                                                                                                  \n"," batch_normalization_28 (BatchN  (None, 32)          128         ['dense_64[0][0]']               \n"," ormalization)                                                                                    \n","                                                                                                  \n"," dense_60 (Dense)               (None, 32)           8224        ['batch_normalization_26[0][0]'] \n","                                                                                                  \n"," dense_62 (Dense)               (None, 32)           2007072     ['batch_normalization_27[0][0]'] \n","                                                                                                  \n"," dense_65 (Dense)               (None, 32)           1056        ['batch_normalization_28[0][0]'] \n","                                                                                                  \n"," dense_61 (Dense)               (None, 10)           330         ['dense_60[0][0]']               \n","                                                                                                  \n"," dense_63 (Dense)               (None, 10)           330         ['dense_62[0][0]']               \n","                                                                                                  \n"," dense_66 (Dense)               (None, 10)           330         ['dense_65[0][0]']               \n","                                                                                                  \n"," concatenate_6 (Concatenate)    (None, 30)           0           ['dense_61[0][0]',               \n","                                                                  'dense_63[0][0]',               \n","                                                                  'dense_66[0][0]']               \n","                                                                                                  \n"," dense_67 (Dense)               (None, 32)           992         ['concatenate_6[0][0]']          \n","                                                                                                  \n"," batch_normalization_29 (BatchN  (None, 32)          128         ['dense_67[0][0]']               \n"," ormalization)                                                                                    \n","                                                                                                  \n"," dense_68 (Dense)               (None, 11)           363         ['batch_normalization_29[0][0]'] \n","                                                                                                  \n","==================================================================================================\n","Total params: 6,461,804\n","Trainable params: 2,286,153\n","Non-trainable params: 4,175,651\n","__________________________________________________________________________________________________\n"]}]},{"cell_type":"code","source":["history = phase2_1_model.fit([phase2_csvs,phase2_imgs,phase2_crops],phase2_diseases_multi, epochs=50, verbose=1, batch_size=256, validation_split=0.2,callbacks=callbacks)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":646},"id":"KVT97nwTzfnr","executionInfo":{"status":"error","timestamp":1642554297388,"user_tz":-540,"elapsed":18919,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"3cfa07a9-a0ca-4201-e2c3-4e77d265af8d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["loss =  nan , val_loss =  nan\n","\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r6/6 [==============================] - 2s 389ms/step - loss: nan - accuracy: 0.0000e+00 - val_loss: nan - val_accuracy: 0.0000e+00\n","Epoch 4/50\n","3/6 [==============>...............] - ETA: 0s - loss: nan - accuracy: 0.0000e+00"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-122-af63da493cae>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mhistory\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mphase2_1_model\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mphase2_csvs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mphase2_imgs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mphase2_crops\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mphase2_diseases_multi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m50\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m256\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalidation_split\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcallbacks\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcallbacks\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     63\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 64\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1214\u001b[0m                 _r=1):\n\u001b[1;32m   1215\u001b[0m               \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_train_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1216\u001b[0;31m               \u001b[0mtmp_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1217\u001b[0m               \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1218\u001b[0m                 \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    148\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 150\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    151\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    152\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    908\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    909\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mOptionalXlaContext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jit_compile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 910\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    911\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    912\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    940\u001b[0m       \u001b[0;31m# In this case we have created variables on the first call, so we run the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    941\u001b[0m       \u001b[0;31m# defunned version which is guaranteed to never create variables.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 942\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateless_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# pylint: disable=not-callable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    943\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateful_fn\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    944\u001b[0m       \u001b[0;31m# Release the lock early so that multiple threads can perform the call\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   3129\u001b[0m        filtered_flat_args) = self._maybe_define_function(args, kwargs)\n\u001b[1;32m   3130\u001b[0m     return graph_function._call_flat(\n\u001b[0;32m-> 3131\u001b[0;31m         filtered_flat_args, captured_inputs=graph_function.captured_inputs)  # pylint: disable=protected-access\n\u001b[0m\u001b[1;32m   3132\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3133\u001b[0m   \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, args, captured_inputs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1958\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1959\u001b[0m       return self._build_call_outputs(self._inference_function.call(\n\u001b[0;32m-> 1960\u001b[0;31m           ctx, args, cancellation_manager=cancellation_manager))\n\u001b[0m\u001b[1;32m   1961\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n\u001b[1;32m   1962\u001b[0m         \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36mcall\u001b[0;34m(self, ctx, args, cancellation_manager)\u001b[0m\n\u001b[1;32m    601\u001b[0m               \u001b[0minputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    602\u001b[0m               \u001b[0mattrs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mattrs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 603\u001b[0;31m               ctx=ctx)\n\u001b[0m\u001b[1;32m    604\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    605\u001b[0m           outputs = execute.execute_with_cancellation(\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     57\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     58\u001b[0m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0;32m---> 59\u001b[0;31m                                         inputs, attrs, num_outputs)\n\u001b[0m\u001b[1;32m     60\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     61\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mname\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"markdown","metadata":{"id":"uME8seezYH7V"},"source":["#Phase 3 "]},{"cell_type":"markdown","metadata":{"id":"p51LzvsRYIn0"},"source":["## 데이터 확인 "]},{"cell_type":"markdown","metadata":{"id":"k7ZDRY6CYSmF"},"source":["이미지"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":414,"status":"ok","timestamp":1642472651079,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"UEkxfZcXYSmG","outputId":"1fb96101-1154-4a1e-d407-09b1a8487e04"},"outputs":[{"data":{"text/plain":["(5767, 224, 224, 3)"]},"execution_count":74,"metadata":{},"output_type":"execute_result"}],"source":["imgs.shape"]},{"cell_type":"markdown","metadata":{"id":"rz8g3F_-YSmG"},"source":["Env "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1642472652618,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"Qyp1e0SzYSmG","outputId":"7d205b88-9316-4028-9e1c-3ac810fb9207"},"outputs":[{"data":{"text/plain":["(5767, 588, 9)"]},"execution_count":75,"metadata":{},"output_type":"execute_result"}],"source":["csvs.shape"]},{"cell_type":"markdown","metadata":{"id":"77xsLmZnYSmG"},"source":["Crop"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1642472653151,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"VnQYgie9YSmG","outputId":"2d09f4cf-2b58-4d51-e5f4-9e0459930309"},"outputs":[{"data":{"text/plain":["(5767,)"]},"execution_count":76,"metadata":{},"output_type":"execute_result"}],"source":["crops.shape"]},{"cell_type":"markdown","metadata":{"id":"Wj13PEcvYSmG"},"source":["disease"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1642472653568,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"AiprLaX0YSmG","outputId":"b4f49cf1-c8b8-4b90-f080-41ef20ec83db"},"outputs":[{"data":{"text/plain":["(5767,)"]},"execution_count":77,"metadata":{},"output_type":"execute_result"}],"source":["diseases.shape"]},{"cell_type":"markdown","metadata":{"id":"bBUj6c4QYT_N"},"source":["risk"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":508,"status":"ok","timestamp":1642479922930,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"Do3Z7xnOYUsB","outputId":"7766c1f5-909e-4130-e7da-330fcbe9cfc0"},"outputs":[{"data":{"text/plain":["(5767,)"]},"execution_count":190,"metadata":{},"output_type":"execute_result"}],"source":["risks.shape"]},{"cell_type":"markdown","metadata":{"id":"xgoPAMwfbueB"},"source":["## 데이터 분할"]},{"cell_type":"markdown","metadata":{"id":"WtxFAkAVb6gS"},"source":["## 모델"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RkD7YNU6b7Xr"},"outputs":[],"source":["conv_layers = EfficientNetB0(weights='imagenet', include_top=False, input_shape=(224, 224, 3))\n","conv_layers.trainable = False"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gbA0ueiAcC1R"},"outputs":[],"source":["#Env 데이터 파트 \n","Env_input = Input((294,9)) #<---- shape \n","x = Bidirectional(LSTM(128))(Env_input) #bidirec\n","x = Flatten()(x)\n","x = BatchNormalization()(x)\n","x = Dense(32, activation ='relu')(x)\n","Env_output = Dense(10 ,activation='linear')(x) #<--- Dense 갯수 \n","\n","#iamge 데이터 파트 \n","image_input = Input((224,224,3))\n","x = conv_layers(image_input)\n","x = Flatten()(x)\n","x = BatchNormalization()(x)\n","x = Dense(32, activation='relu')(x)\n","image_output = Dense(10, activation='linear')(x)\n","\n","#crop 데이터 파트 \n","crop_input = Input(1) #<---- \n","x = Dense(32, activation = 'relu')(crop_input)\n","x = BatchNormalization()(x)\n","x = Dense(32, activation = 'relu')(x)\n","crop_output = Dense(10, activation = 'linear')(x) #<-- linear \n","\n","#disease 데이터 파트 \n","disease_input = Input(1)\n","x = Dense(32, activation = 'relu')(disease_input)\n","x = BatchNormalization()(x)\n","x = Dense(32, activation = 'relu')(x)\n","disease_output = Dense(10, activation = 'linear')(x) #<-- linear \n","\n","#헤드 결합 \n","combined_input = concatenate([Env_output,image_output,crop_output,disease_output])\n","x= Dense(32, activation = 'relu')(combined_input) #<--- Dense \n","x = BatchNormalization()(x)\n","output = Dense(4,activation = 'softmax')(x)\n","\n","phase3_model = Model([Env_input,image_input,crop_input,disease_input],output)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":664},"executionInfo":{"elapsed":924,"status":"ok","timestamp":1642488653162,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"XM9brCSLcSnK","outputId":"c719de72-2cc8-4e6e-f735-69ed8bc3d071"},"outputs":[{"output_type":"execute_result","data":{"image/png":"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dPi3S45WXl6uqKgoX4fUoGBt8/DwcEmHH4ciSeedd56OO+44Pf/88zLGSJKWLFmiUaNGuQpXmzdvVllZmU488UTXeqKiopSUlBQw+wXAO4K1bwtGwdrW5BEAAAAAQDCjWAKXyMhI16dBA0nNs9dLS0vdppeVlengwYNKTk72R1he4c82f+ONNzR48GAlJCQoMjJSt956q9vrlmVp0qRJ+v777/Xee+9Jkv785z/r97//vWue/fv3S5JmzJjheja9ZVn68ccfVVZW5rudARBQAjWftEXkEQAAAAAAvINiCSQd/vTqnj17lJKS4u9QaunRo4diYmL0448/uk3/9ttvJUknnXSSP8JqMV+3+Ycffqi5c+dKkrZt26YRI0YoKSlJ69atU0lJiWbPnl1rmfHjx8vhcOjZZ5/V5s2bFRsbq27durleT0hIkCTNnTtXxhi3vzVr1vhkvwAElkDOJ20NeQQAAAAAAO8J83cACAyrVq2SMUYDBw50TQsLC2v0ESC+EBYWposuukgffvihqqurFRJyuMb35ptvyrIsDR8+3M8RNo+v2/xf//qXoqOjJUlffvmlKioqdN1116lnz56SDn8C+Gjt27dXbm6ulixZopiYGF1zzTVur3ft2lUOh0Pr169vlZgBBJ9AzidtDXkEAAAAAADv4ZslNlVdXa3du3ersrJSGzZs0NSpU5Wamqrx48e75klPT9euXbu0YsUKVVRUaOfOnbW+3SFJHTp00C+//KKtW7dq7969rTJIc9ddd2nHjh265557tH//fq1Zs0Zz5szR+PHjdfzxx3t9e63BX21eUVGhHTt2aNWqVa5BrtTUVEnS3//+dx08eFBbtmzRunXr6lx+8uTJOnTokF5//XVdcsklbq85HA5NmDBBr7zyihYuXKjS0lJVVVWpsLBQv/76a1ObCEAQCrZ8EszIIwAAAAAAtCKDgCDJ5OXleTTv/PnzTVJSkpFknE6nGT58uHnyySeN0+k0ksyxxx5rvvvuO7No0SITGxtrJJlu3bqZb775xhhjzMSJE014eLjp0qWLCQsLM7Gxseayyy4z3333ndt2iouLzbnnnmscDofp0aOH+d///V9zyy23GEkmPT3dbNu2zRhjzL///W/TrVs3ExUVZc466yyzfft2j/d7zZo15swzzzTJyclGkpFkkpKSTGZmplm9erXbvKtXrzan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Qe3atVNOTo4uu+wyvfvuu64PYNoJeQW+5rViSXh4uLdW5dFARWt67rnnVFRU5NcYvO31119XaGio27SOHTtKkls1+9tvv9Vdd92le++9Vw6Ho9nb81cberqfkjRz5kytX79e8+bN81l8dal5VEpzvwXA+eI5bx3fxcXFKikp0a5du9ymR0REuH01+JVXXvHo090TJ07U//zP/7hNu+666yRJTz31VJ3LPP7445o2bVq96wyU4xv+V1hYWGeOrm96IGnN/qW+dTfWJpWVlXrjjTd0zjnnuPW/w4YNkzFGK1eu9HqszVFfodUXgikvAGjbWtIf9e3bV8uWLdOYMWMUGRlZ73xNuf+wA3IAgLbMF3ll+fLltcYraj4o6YtHPAYa8gp8zWvFkm+//VYZGRmKjo5WVFSUBg0apI8//tj1+scff6zU1FRZlqUFCxa4phtjNGfOHB1//PGKjIxUXFycbrnlFrd117XsI488IqfTqZiYGBUVFWnatGnq0qWLNm/erKqqKt19991KTU1VVFSUTjrppFqPOHrppZfUv39/ORwORUdHq3v37po1a5amTp2qadOm6bvvvpNlWUpPT28w9scff1y9evVSZGSk2rdvr8suu8ztU6ULFy5UdHS0nE6nVq5cqWHDhik2NlYpKSl65ZVX3GL66KOP1Lt3b8XFxcnhcKhPnz56++23W/7m1OPnn39WVFSUevTo4Zr2xBNPyBij4cOHN7r86tWrddppp8npdCo2NlZ9+vRRaWlpnW04b948RUdHKyQkRKeeeqoSExMVHh6u6OhonXLKKRo0aJC6du0qh8Oh+Ph43Xrrra26n9Lhb3acc845mjdvnl+/1rlhwwZJ0jnnnOOaxvnSOudLU47vhgwYMED79+/Xeeedp08++aRF66rPeeedp169eumDDz7Q5s2b3V775JNPVFZW5vpqbF0C5fhG62ro/H333XeVnp6uX3/9VS+++KIsy1K7du3qnV7fuSvV3wfUt0xDcXl6ntfVvzSlj2gohrrWXaOx65nvv/9e+/btU2pqqtv2ah6fV9OnB4opU6YoIiJCSUlJrmnXX3+9oqOjZVmWfvvtN0lN63+ltpMXAHhXXee7p+fxE088IYfDoU6dOmnSpElKTk6Ww+FQZmam1q1b55rP036tob6+tdV3/+Erwd7mDfXnV199tes59Wlpafr8888lSRMmTJDT6VRcXJxeffVVSQ1fCzR0fwQgcJBXDtuyZYvi4+PVrVs3n23zSMHe5uQVNIk5Sl5enqljcoOGDBlievbsaX744QdTUVFh/vOf/5jTTz/dOBwO880337jm++mnn4wkM3/+fNe0O++801iWZR577DGze/duU1ZWZp588kkjyXz++eeNLivJ3HjjjWb+/Pnm8ssvN19//bW5+eabTWRkpFm6dKnZvXu3ueOOO0xISIj57LPPjDHGzJ0710gyDz30kCkuLja7du0yf/rTn8yYMWOMMcZkZWWZtLQ0t32sa/t33323iYiIMC+99JLZs2eP2bBhgznllFNMx44dzfbt22vF+d5775mSkhJTVFRkBg0aZKKjo015eblrvoKCAjNz5kyza9cuU1xcbAYOHGiOOeYY1+tbtmwxksxTTz3VpPenLvv37zcxMTFmypQpbtN79uxpevfuXWv+o7e9b98+Exsba2bPnm0OHDhgtm/fbi6//HKzc+dOY0zdbXjPPfcYSWbdunVm//795rfffjMXXnihkWTeeOMNs3PnTrN//34zZcoUI8msX7++1fazxu23317rWPOEJJOXl9ekZdLS0kxcXJzr/7KyMvPmm2+abt26maFDh5p9+/a5zc/54v3zpb7ju673pyFlZWWmf//+RpKRZHr37m1mz55tiouLG1zu119/NZLMpZde2uB8aWlp5ocffjB//OMfjSQzdepUt9dHjBhhFi9ebPbu3WskmSFDhtS5Hl8e32i55uTfxs5fY4xJTEw0V111Va1l65pe17nbWB9Q1zKNxeXpeV5X/+Lpso3FUNe6PbmeWb16tZFk5syZU6tNo6Ki6j0fG5KdnW2ys7ObvFxd/dZ7771XK7YxY8aYxMREt2lz5swxklx52xjP27Yt5QVPNPf9AdqC5hz/DV2HNnYeT5w40URHR5uvvvrKHDx40GzcuNEMGDDAxMTEmG3btrnm87Rfq6s/ao7TTz/d9O3b16N5G7v/aEhz+5vf/e53RpLZvXu3a1qgtXlTrrUb68+zsrJMaGio+fnnn92WGz16tHn11Vdd/3t6PXL0/ZEnuF4Gmq+p549d80p5ebkpLCw08+fPN5GRkeall15q1raa01+RVw7zZV5pzngAWkW+175ZEhMTo+7duyssLEwnnHCCnnnmGR08eFCLFi2qd5kDBw5o7ty5Ov/883XTTTcpPj5eUVFR6tChQ5O2/fDDD+uGG27QsmXL1L17dy1cuFAjRoxQVlaW4uPjNWPGDIWHh2vx4sWqqKjQvffeq3PPPVe33XabOnTooPbt2+v3v/+9BgwY4PE2Dxw4oMcff1yXX365xo4dq7i4OPXp00dPP/20fvvttzr3OzMzU7GxsUpISNCoUaO0f/9+bdu2zfV6drRIGW4AACAASURBVHa27rnnHrVv314dOnTQ8OHDVVxcrJ07dzapPTzx4IMPKjk5Wffff79r2v79+/XDDz+4Ph3bkK1bt6q0tFQnnHCCHA6HEhMTtWzZMtdXzhvSu3dvOZ1OHXPMMbriiiskSampqerYsaOcTqfGjh0rSV557ntd+3mkY489VtLhH+z2hZKSElfF2ul0uqrxY8aMafTRL5wvLTtfmnJ8NyYqKkqffvqp/vjHPyojI0NfffWVpk+frl69emn16tUtXn+Nq666StHR0XrxxRd14MABSYc/1f7ZZ59p9OjRjS7v6+MbvnXw4MEGz19vaE4f0JS4GjvPG9LQsi1pm8auZw4dOiRJtR65Ih1+hFfNueorR+YVy7I0ZMiQFq+zobZtS3kBgO950u+HhYW5vnHWu3dvLVy4UHv37vVabmttjd1/+Fowtnlj/fnkyZNVVVXlFl9paak+++wzXXTRRZKadi1w5P1RRkaG73YUQIsFYx/nqa5duyolJUUzZ87UI488otzcXH+HJCk425y8gqbwWrHkaH369FFcXFyDj6P49ttvVVZW5pUb+xqbN29WWVmZTjzxRNe0qKgoJSUladOmTdqwYYP27Nmj3/3ud27LhYaG6sYbb/R4Oxs3btS+ffvUv39/t+kDBgxQRESE29fL6hIRESHp8KBDfWoGz6uqqjyOyxPLly9Xfn6+3n77bbcfuC4qKpIxxqPfWOjZs6c6deqksWPHaubMmdq6dWuzYqlphyN/hLpmvxtqG0/Ut59HqtnXHTt2tGhbnoqLi5MxRsYYVVRUqLCwUH/4wx80ZcoUnXTSSa6vGtaF86Vl50tTjm9PhIeHa8qUKfr666+1du1aXXbZZSoqKlJOTo52797tlW3ExcVp9OjR2r17t5YsWSJJmjt3rq677jpXmzTE18c3fKux89cbmtMHNDcuT85zT5f1ZtscfT1T8/zgI/NWjfLyckVFRTU5/pY4Mq8YY/TBBx94df1Ht21bygsA/MvTfr9///5yOp1ey22tyZP7D38K1jY/uj8/77zzdNxxx+n55593PW52yZIlGjVqlOvDDL64TgIQWIK1j6vPTz/9pKKiIv31r3/Viy++qJNPPjngfrsjWNucvIKGtFqxRDp88DV0whQWFkqSEhISvLbN/fv3S5JmzJjh9knLH3/8UWVlZSotLZUkxcfHt2g7NT/G3a5du1qvxcfHa+/evU1e5xtvvKHBgwcrISFBkZGRXv3djhpLlizRww8/rFWrVrl+WLzGwYMHJanBH5qqERUVpffff19nnXWWHnjgAfXs2VOjRo3y+Sdq69PQfh6pZlCrZt99KSwsTF26dNGECRP06KOPavPmzXrooYfqnZ/zxV1Tz5emHN9Ndfrpp+v//b//p8mTJ2vnzp1eHays+aH3p59+Wnv27FFBQYEmTZrk0bL+PL7R+ho7f72hOX2AL+LydQxHXs/UPFe3pm1qlJWV6eDBg0pOTm5h9C0zePBg3Xzzza22/raUFwAEj8jIyID/lpin9x/Bwp9t3lh/blmWJk2apO+//17vvfeeJOnPf/6zfv/737vmCYTrEQCBKxjySnh4uBISEjR06FAtWbJEGzdu1IMPPujvsJqNvIJg0WrFksrKSu3atavWD6AeqebTmTWPtPCGmoHkuXPnun3S0hijNWvWqHPnzpLU4Cf4PVEzSFDXzfyePXuUkpLSpPVt27ZNI0aMUFJSktatW6eSkhLNnj27RTEebf78+Xr55Zf1/vvvu9rhSDUDq55+AvOEE07Qa6+9pl9++UXTp09XXl6eHn30Ua/G3ByN7eeRysvLJcnnnwQ+Wp8+fSRJX331Vb3zcL78n+acL009vo/04Ycfau7cua7/s7Ky6vxU+ZVXXilJXk2U/fr108CBA/WPf/xDEydOVE5Ojtq3b+/RsoFyfKN1NHb+ekNz+gBfxOXLGI6+nunRo4diYmL0448/us337bffSpJOOukkL+xB4GpLeQFAcKioqGhWv+BLTbn/CAa+bvMjr7U97c/Hjx8vh8OhZ599Vps3b1ZsbKzbDx8HwvUIgMAUDHnlaOnp6QoNDdXGjRv9HUqzkFcQTFqtWPLBBx+ourpap5xySr3znHjiiQoJCfHqM/67du0qh8Oh9evX1/l69+7d1aFDB73zzjst2s6JJ56odu3a6Z///Kfb9HXr1qm8vFynnnpqk9b35ZdfqqKiQtddd5169uwph8Mhy7JaFGMNY4ymT5+uL7/8UitWrKjzU5yS1KlTJ1mWpZKSkkbX+csvv7gG9hMSEvTQQw/plFNOaXCwv7V5up9HqtnXxMTE1g6vQf/6178kSccff3y983C+/J/mnC9NOb6P9q9//UvR0dGu/w8dOlTnsb5582ZJ3h8srfl2ydKlS/WHP/zB4+UC5fhG62js/PWG5vQBvojLlzEcfT0TFhamiy66SB9++KGqq6td87355puyLEvDhw9v8Ta9LSwsrMWPtqzRlvICgOCwatUqGWM0cOBA1zRv9mst0Zz7j2Dg6zY/8lrb0/68ffv2ys3N1YoVK/Too4/qmmuucXs9EK5HAASmQM4rxcXFdf4+6ZYtW1RVVaWuXbv6IaqWI68gmHitWFJeXq6SkhJVVlbq3//+t6ZMmaJu3bpp/Pjx9S6TkJCgrKwsLV26VM8995xKS0u1YcOGBn8UvjEOh0MTJkzQK6+8ooULF6q0tFRVVVUqLCzUr7/+qsjISN1xxx368MMPNWXKFP3888+qrq7W3r17XYOfHTp00C+//KKtW7dq7969dZ68DodD06ZN0/Lly/Xyyy+rtLRUX375pSZPnqzk5GRNnDixSXHXfGL173//uw4ePKgtW7Y0+rxuT3311Vd65JFH9Mwzzyg8PNzt62KWZbm+DeJ0OtWzZ0/X454a8ssvv2jSpEnatGmTysvL9fnnn+vHH390dXyetKG3ebqfR6rZ15pvdvjCgQMHVF1dLWOMfvnlFy1evFgzZsxQx44dGxwI53z5P805X5pyfNeoqKjQjh07tGrVKrdiiSSNGDFC+fn52rNnj0pKSrRy5UrddtttuvTSS71eLBk5cqQ6duyoESNGqGfPnh4v54/jG77T2PnrDZ70Aa0ZV3NziScx1LduT65n7rrrLu3YsUP33HOP9u/frzVr1mjOnDkaP358g0Vvf0lPT9euXbu0YsUKVVRUaOfOnbW+GeOptpQXAASm6upq7d69W5WVldqwYYOmTp2q1NRUt37Y036tte9JmnP/EYj81eZ1XWs3pT+fPHmyDh06pNdff12XXHKJ22u+uE4CEByCKa9ER0frnXfe0fvvv6/S0lJVVFTo888/11VXXaXo6GjddNNNXt1eayGvIKiZo+Tl5Zk6Jjdo8eLF5txzzzWdOnUyYWFh5phjjjFXXHGF+fHHH13zzJ8/3yQlJRlJxul0muHDhxtjjNm7d6+5+uqrzTHHHGPatWtnzjrrLHP33XcbSSYlJcV88cUXdS47e/ZsExUVZSSZrl27mpdeesm1rUOHDpnp06eb1NRUExYWZhISEkxWVpbZuHGja54FCxaYPn36GIfDYRwOhzn55JPNk08+aYwx5t///rfp1q2biYqKMmeddZaZMWNGnbFXV1ebOXPmmGOPPdaEh4eb9u3bmxEjRpjNmze7tvPkk08ap9NpJJljjz3WfPfdd2bRokUmNjbWSDLdunUz33zzjTHGmOnTp5sOHTqY+Ph4k5OTYxYsWGAkmbS0NDN16lSTmJhoJJno6Ghz+eWXe/z+fPnll0ZSvX9z5sxxzTtlyhQTHh5uysrKXNMee+yxWtveunWryczMNO3btzehoaGmc+fO5s477zSVlZV1tuHtt9/uaofu3bubjz76yDz88MMmLi7OSDKJiYnmL3/5i1myZIlrW+3btzevvPJKq+xnjYsvvth06dLFVFdXe7wdY4yRZPLy8jyad/ny5SYtLa3OmCIjI82xxx5rrrvuOrNt2zbXMpwvrXO+1HV8N/T+HPm3fPly1zLvvPOOyc3NNWlpaSYyMtJERESY448/3sycOdMcPHiw1jFQWlpqzj77bNOhQwcjyYSEhJj09HTzwAMP1HusdOzY0dxwww2u12699Vbz6aefuv4/sp1DQkJM7969zUcffeS2Pl8c3/Ce5uTfhs7frVu3mpNPPtlIMmFhYeaUU04xS5curXd6ff2OMfX3AfUt01BcTTnPj+5f7r77bo+XbaxvO3rd27dv9+h6psbq1avNaaedZiIjI01ycrK55ZZb6jz/PZGdnW2ys7M9nv+TTz4xxx13nKt/SkpKMkOGDKl3/uLiYnPuuecah8NhevToYf73f//X3HLLLUaSSU9PN9u2bWvS+2JM28kLrfH+AG1JU4//uvJCU87jiRMnmvDwcNOlSxcTFhZmYmNjzWWXXWa+++47t+140q8ZU3df76k1a9aYM8880yQnJ7v1t5mZmWb16tXGmObdfzSkqe29du1ac8IJJ5iQkBBXfA888EBAtflTTz3V5GvthvrzI++ZjDHm5JNPNrfffnud7dPQtUBD90ee4HoZaL6mnD92yyvGGDN8+HDTo0cP065dOxMZGWnS0tLMqFGjzJdffunxto7UlPYmr/gvrzRnPACtIt8yxhgdIT8/X7m5uTpqMmzi22+/Va9evbR48WKNHTvW3+G0quLiYqWkpOj+++/XtGnTmrSsZVnKy8vTyJEjWyk6tAaOb89wfPsH+de+cnJyJEkFBQV+jgR14f2Bnfn6+J80aZIKCgpUXFzsk+0FGn/0N8He5hdffLEWLFigHj16+HS7XC8DzefL8yfY+zhv8HV/Fext7q+8wnhAwChotd8sQXBKT0/Xfffdp/vuu0/79u3zdzitaubMmerXr5+mTJni71DgIxzfAAAAga2qqsrfIdhOMLX5kY9f2bBhgxwOh88HtAAEl2Dq49qKYGpz8gqORrEkSG3atKnWM3Hr+hs1alST13377bcrJydHo0aNataPYXtTa+3n448/rvXr1+tvf/ubwsPDWyl6BKJAOr5bC8c3AACAu9a8f4LvTJ8+XVu2bNE333yjCRMmaNasWf4OCYBNkVfaBvIKjkaxJEhlZGTIGNPo35IlS5q1/gceeEBTpkzRQw895OXIm6Y19nPlypU6dOiQVq1apfbt27di9AhUgXJ8twaObwAAEIzuuOMOLV68WCUlJerRo4eWLl3q1fW39v1TMGrtNm8NTqdTGRkZOv/88zVz5kz17t3b3yEBCFDkFd8jr6AtCPN3AAhcQ4cO1dChQ/0dhtddeumluvTSS/0dBvyM4xsAACBwPPjgg3rwwQf9HYatBGOb33///br//vv9HQaAIBCMfVywC8Y2J6/gaHyzBAAAAAAAAAAA2BrFEgAAAAAAAAAAYGsUSwAAAAAAAAAAgK1RLAEAAAAAAAAAALZGsQQAAAAAAAAAANgaxRIAAAAAAAAAAGBrFEsAAAAAAAAAAICtUSwBAAAAAAAAAAC2RrEEAAAAAAAAAADYGsUSAAAAAAAAAABgaxRLAAAAAAAAAACArVEsAQAAAAAAAAAAtkaxBAAAAAAAAAAA2FpYfS/k5+f7Mg4g6KxZs8bfIQBog8i/9lNYWCiJ9z5QFRYWKiUlxd9hAH5TWFhI/+Qj5AMAdsF4im/R3oGP9yhwWMYYc+SE/Px85ebm+iseAEAAyMvL08iRI/0dhq2Qf4HAlZ2drYKCAn+HAfhcTk6Oli5d6u8wgIDE9TLQPJZl+TsEIGAdNUwP3yuoVSwB7K7mgpdPdAEAmsuyLAZRAABeU/OhCm7fAQDewvgXUEsBv1kCAAAAAAAAAABsjWIJAAAAAAAAAACwNYolAAAAAAAAAADA1iiWAAAAAAAAAAAAW6NYAgAAAAAAAAAAbI1iCQAAAAAAAAAAsDWKJQAAAAAAAAAAwNYolgAAAAAAAAAAAFujWAIAAAAAAAAAAGyNYgkAAAAAAAAAALA1iiUAAAAAAAAAAMDWKJYAAAAAAAAAAABbo1gCAAAAAAAAAABsjWIJAAAAAAAAAACwNYolAAAAAAAAAADA1iiWAAAAAAAAAAAAW6NYAgAAAAAAAAAAbI1iCQAAAAAAAAAAsDWKJQAAAAAAAAAAwNYolgAAAAAAAAAAAFujWAIAAAAAAAAAAGyNYgkAAAAAAAAAALA1iiUAAAAAAAAAAMDWKJYAAAAAAAAAAABbo1gCAAAAAAAAAABsjWIJAAAAAAAAAACwNYolAAAAAAAAAADA1iiWAAAAAAAAAAAAW6NYAgAAAAAAAAAAbI1iCQAAAAAAAAAAsDWKJQAAAAAAAAAAwNYolgAAAAAAAAAAAFujWAIAAAAAAAAAAGwtzN8BAP60evVqrV271m3apk2bJEmzZ892mz5w4ECdc845PosNABAcFi1apN27d9eavnLlSv3www9u08aPH6/ExERfhQYACEI7duzQCy+84DZtw4YNkmrfo7Rv317XXnutr0IDAAQpxr8Az1jGGOPvIAB/effddzV06FCFh4crJKTuL1pVV1eroqJC77zzji644AIfRwgACHQTJ07UokWLFBkZ6ZpmjJFlWa7/KysrFRcXp+3btys8PNwfYQIAgkRlZaUSExNVUlKisLD/+3zj0bnl0KFDuuaaa7Ro0SJ/hAkACCKMfwEeKaBYAlurqqpSYmKiiouLG5yvffv2KioqcrtZAQBAklatWqVzzz23wXnCw8N17bXXasGCBT6KCgAQzK6//no988wzqqioaHC+Dz74QIMHD/ZNUACAoMX4F+CRAn6zBLYWGhqqMWPGKCIiot55IiIidOWVV5IoAAB1Ovvss9WpU6cG56moqNAVV1zho4gAAMHuiiuuaLRQkpCQoEGDBvkoIgBAMGP8C/AMxRLY3hVXXKHy8vJ6Xy8vL2eACwBQr5CQEI0dO7bBG4/k5GRlZmb6MCoAQDA788wz1blz53pfj4iI0Lhx4xQaGurDqAAAwYzxL6BxFEtgewMHDlRqamq9r6ekpOj000/3YUQAgGDT0I1HeHi4xo0b5/aceQAAGmJZlsaOHVvv71wxoAUAaCrGv4DGUSwBpHpvRCIiInTVVVcxwAUAaFD//v3Vo0ePOl/jEVwAgOZo6FFc3bp106mnnurjiAAAwY7xL6BhFEsAHU4Wdd2IlJeXa9SoUX6ICAAQbMaNG1fnjUfPnj3Vt29fP0QEAAhm/fr107HHHltrekREhMaPH+/7gAAAQY/xL6BhFEsASb169VKvXr1qTc/IyNCJJ57oh4gAAMGmrhuP8PBwTZgwwU8RAQCCXV2F+PLycuXm5vopIgBAMGP8C2gYxRLgv46+EQkPD9dVV13lx4gAAMEkPT1dffr0cfvqekVFBQNaAIBmu+KKK1RZWen637IsnXTSSXUOdAEA4AnGv4D6USwB/mv06NFuNyKVlZV8BREA0CTjxo1TaGiopMMDWieffHKdj1ABAMATaWlp6tevn0JCDt+6h4WFady4cX6OCgAQzBj/AupHsQT4r9TUVPXv318hISGyLEsDBgxQ9+7d/R0WACCIjB49WlVVVZKk0NBQPqEFAGixcePGuYollZWVfGMRANAijH8B9aNYAhyh5kYkNDRUV155pb/DAQAEmc6dOyszM1OWZam6ulo5OTn+DgkAEORyc3NVXV0tSTrjjDOUkpLi54gAAMGO8S+gbhRLgCPk5ubKGCNjDANcAIBmufLKK2WM0dlnn63OnTv7OxwAQJBLTk7WoEGDJIlvLAIAvILxL6BuljHG+DsIeEdOTo6WLl3q7zAAl+zsbBUUFPg7DABNcOSPkwOBIC8vTyNHjvR3GACaKT8/n8dGIeAwDAIEN8a/EGgY/2ozCsL8HQG8a+DAgfrDH/7g7zCC2urVq2VZls4+++xar61Zs0bz5s1TXl6eHyILLnPnzvV3CACaaerUqTrjjDP8HUZQe+yxxzRx4kS1a9eu1ms1/SP5unEMsAJtB9fPLbN//34tWrSoSbmDfFNbzf0cgODH+FfLNTT+VZ/c3FzuF4/C+FfbQrGkjUlJSeHTly104YUXSpJiY2PrfH3evHm0sQeoqAPB64wzzqCfa6HMzMx6nylf0z/Sxo2jWAK0HfR5LXfBBRc06fdKyDd1o1gCtA2Mf7VcY+NfdcnNzeV+8SiMf7UtFEuAozQlSQAAUBd+fBcA4G3kFgCANzH+BdTGD7wDAAAAAAAAAABbo1gCAAAAAAAAAABsjWIJAAAAAAAAAACwNYolAAAAAAAAAADA1iiWAAAAAAAAAAAAW6NYAgAAAAAAAAAAbI1iCQAAAAAAAAAAsDWKJQAAAAAAAAAAwNYolgAAAAAAAAAAAFujWAIAAAAAAAAAAGyNYgkAAAAAAAAAALA1iiUAAAAAAAAAAMDWKJYAAAAAAAAAAABbo1gCHTp0SDfeeKOSkpLkdDp1/vnnq1OnTrIsS08//bS/w2ux+++/X5Zl1fo78cQTW33by5YtU8+ePevcfs1f9+7dJUmPPvpom2p3APbR1vOIJFVUVOjBBx9Uenq6IiIiFB8frxNPPFFbt25t9W2TSwDY3dVXX62YmBhZlqX169f7O5xmue+++9S7d2/FxsYqMjJS6enpuvXWW7Vv3z63+QLx3iUiIkKdOnXS4MGDNWfOHO3evbvVYwGA1man3CJJf/3rXzVgwADFxMSoW7dumjBhgrZv396q8ZFXEIwolkCPPfaY3nrrLW3atEnz5s3TpEmT9Omnn/o7rDYhKytL33//vdLS0hQXFydjjIwxqqysVFlZmXbs2CGn0ylJuvnmm2l3AEHJDnkkNzdXf/7zn/WXv/xFZWVl+vrrr5WWllbnjYi3kUsA2N2zzz6rZ555xt9htMj777+vG264QVu3btVvv/2mBx98UPPmzVNOTo6/Q3OpK99UV1erqKhI+fn56tGjh6ZPn64TTjhB//znP/0dLgC0iJ1yS15ensaMGaOcnBwVFhZq5cqV+vDDDzVs2DBVVla2WnzkFQQjiiXQihUr1L9/f8XHx+vaa69VdnZ2s9Zz4MABZWZmNjrNH1566SXX4FLN33/+8x+/xRMaGqqoqCh16tRJxx13XIvWFcjtDsAe2noeWbJkiVasWKGCggKdfvrpCgsLU3JyslauXOmTT/rWh1wCAMGjXbt2mjhxojp06KCYmBiNHDlSI0aM0FtvvaWffvrJbd5AunexLEvx8fEaPHiwFi9erPz8fO3YsUMXX3yxSkpK/BITAOAwT3PLn/70J3Xu3Fm33HKL4uLi1K9fP910001av3691q1b59OYySsIdBRLoMLCQoWHh7d4Pc8995yKiooanQZ3K1asaNHytDsAf2vreeSpp57SKaecoj59+vg1joaQSwC0dZZl+TuEFnn99dcVGhrqNq1jx46SpLKyMn+E1CzZ2dkaP368ioqKeNwjgKBnl9zy008/KTk52W1/u3btKkn68ccffRBp/cgrCDQUS2zs3XffVXp6un799Ve9+OKLsixL7dq1q3f+jz76SL1791ZcXJwcDof69Omjt99+W5I0depUTZs2Td99950sy1J6enqd0ySpqqpKd999t1JTUxUVFaWTTjpJeXl5kqSFCxcqOjpaTqdTK1eu1LBhwxQbG6uUlBS98sorrd8oAYh2BxCo7JBHysvLtXbtWvXr168ZLRQ4grHtAdiXMUZz5szR8ccfr8jISMXFxemWW26pNZ+3+qTVq1frtNNOk9PpVGxsrPr06aPS0tJGt9FSP//8s6KiotSjRw+vrM9Xxo8fL0l68803XdOC/b0A0PbZObf07Nmz1oegan6vpGfPnl7ZbkuQVxBQDNqM7Oxsk52d3eTlEhMTzVVXXeU2bcuWLUaSeeqpp1zTCgoKzMyZM82uXbtMcXGxGThwoDnmmGNcr2dlZZm0tDS39dQ17eabbzaRkZFm6dKlZvfu3eaOO+4wISEh5rPPPjPGGHPnnXcaSea9994zJSUlpqioyAwaNMhER0eb8vLyJu/frFmzTEpKiomPjzfh4eGme/fu5tJLLzX/+Mc/mryuvLw805zTJi0tzcTFxblNe++998ycOXPcprWldm/u8QjAvySZvLy8Ji3TlvPIDz/8YCSZfv36mcGDB5ukpCQTGRlpMjIyzIIFC0x1dXWT1mdM8/tHO+aS5hyPAAJLc66f77zzTmNZlnnsscfM7t27TVlZmXnyySeNJPP555+75vNGn7Rv3z4TGxtrZs+ebQ4cOGC2b99uLr/8crNz506PttFc+/fvNzExMWbKlClu07157+LNfHOk0tJSI8l07drVNS1Y3ovm3s8BCCzN6d/snFtWrVplwv8/e/cdH1WZ9n/8O+m90JFgqJqlWFDprPAgHUUgEETWH674CCwLiGhYK4IigSiwgCLoYkElAREUBBFQlCUg2Aig0qT3EkIJpN2/P3yIhBTSZs5M5vN+veYPzpw595UzXPd15lxzznh7m3//+98mNTXVbN261fzlL38xnTp1KvYYJTk+L891xRjOf5UziRwllCP2bpZca8KECUaSOX78uDGmaCda0tLSTEBAgOnXr1/OsosXLxpfX18zdOhQY8yfE15aWlrOOlcK2K5du4r99+3fv9/88MMP5ty5c+by5csmKSnJ3H777cbf399s3bq1WNsqTbNEUp5HUU5wXctV9jvFAnBN9myWXMsV5rPk5GQjyXTo0MH897//NadOnTIpKSlmzJgxRpKZN29esbZnTOlOXrlbLaFZAri+4h4/X7x40QQEBJgOHTrkWv7RRx/lOqFVVnPS1q1bjSSzdOnSPLEUZYySeuaZZ8xNN91kUlNTcy0vy88u9mqWGGOMzWYzYWFhxhjXei9olgDlQ3HnN3evLcYY8+yzz+b6DBEREWEOHDhQ7DHs0SwxxnXrijGc/ypnErkNF0rsyv3ps7Kyivya3377TRcvXsz1g7j+/v6q1t+hCwAAIABJREFUVq2afv311wJf5+PjI0nKyMgodpw1a9bU7bffrqCgIPn4+Kh58+aaO3eu0tLSNHPmzGJvr6RCQ0Nz/UjjV199VaLtuMp+B4DrcYX5zNfXV5LUsGFDtWzZUhUqVFBoaKhefPFFhYaGavbs2cXaXmlRSwCUd7t27dLFixfVvn37QtcrqzmpTp06qlKligYMGKCxY8dq7969pR7jehYtWqTExER98cUXCg4OzvWcs3x2KcyFCxdkjFFISIgk134vALgHd68tzzzzjGbPnq3Vq1fr/Pnz2rNnj1q2bKkWLVrk+iF4q1BX4ExolqDIli1bprZt26py5cry9fXVU089VextXLhwQZL07LPPymaz5Tz27dvn0B82bNy4sTw9PbVjxw6HjXmttm3bavTo0dddrzztdwDuzRXns+rVq0uSTp48mWu5j4+PIiMjtXv37jIfszioJQDKm4MHD0qSKleuXOh6ZTUn+fv7a82aNWrdurVefvll1alTR/369VNaWppd5r358+dr4sSJ+vrrr1WrVq0ivcYZPrtc7UocUVFRklz3vQDgPty5thw5ckRxcXH63//9X/3P//yPAgMDVbt2bc2ZM0eHDx/W5MmTSzRmWaKuwJnQLEGR7N+/Xz179lS1atW0ceNGnT17VnFxccXezpXCNGXKlFzfjDXGKCkpqazDLlB2drays7NzvjHsrMrbfgfgvlx1PgsKClL9+vW1ffv2PM9lZmYqNDS0zMcsa6667wG4Jz8/P0nS5cuXC12vLOekhg0b6rPPPtPhw4cVGxurhIQExcfHl/m8N336dM2bN09r1qzRDTfcUOTXOdtnlxUrVkiSunTpIsk13wsA7sWda8vOnTuVlZWV57mQkBBVqFBB27ZtK/aYZY26AmdCswRFkpycrIyMDA0dOlR16tSRn5+fbDZbsbdTs2ZN+fn56aeffrJDlPnr1KlTnmWbNm2SMUYtWrRwWBwl4cr7HQCu5srzWUxMjH788Uft2bMnZ9nFixe1b98+NW7c2GFxlJQr73sA7qdRo0by8PDQ2rVrC12vrOakw4cP5zTEK1eurFdeeUVNmjTR9u3by2wMY4xiY2OVnJysxYsXKygoqMB1nf2zy9GjRzVlyhRFRETo73//uyTXei8AuCd3ri0RERGS/rjC5Grnzp3T6dOnVbNmzVLFUVrUFTgbmiUokhtvvFGStGrVKl26dEk7d+7Uxo0bc61ToUIFHT58WHv37tW5c+eUkZGRZ5mnp6cefvhhffTRR3r99deVmpqqrKwsHTx4MM/EXVYOHTqk+fPnKyUlRRkZGUpKStKgQYN04403asiQIXYZs6y48n4HgKu58nw2atQoRUZGauDAgdq/f79OnTql2NhYpaWlacyYMXYZsyy58r4H4H4qV66s3r17a+HChXr77beVmpqqLVu25PmNKD8/vzKZkw4fPqzBgwfr119/VXp6un788Uft27dPzZs3L7Mxtm/frkmTJmnOnDny9vbOdbsPm82m+Pj4nHWd5bOLMUbnz59Xdna2jDE6ceKEEhIS1KpVK3l6emrx4sU595Z3pfcCgHty59pSu3ZttWvXTnPmzNE333yjtLQ0HThwQI899pgk6ZFHHinymKVBXYHLKP2PxMNZREdHm+jo6CKvv3fvXnP77bcbScbLy8s0adLELFy40Lz66qumatWqRpIJDAw0vXr1MsYYExsbaypUqGDCwsJMnz59zIwZM4wkU7duXbN//37zww8/mMjISOPv729at25tjh49mu+yy5cvm9jYWHPjjTcaLy8vU7lyZdO7d2+zbds2M3PmTBMQEGAkmfr165vdu3eb2bNnm5CQECPJREZGmh07dhRrvzzxxBOmbt26JjAw0Hh5eZmIiAjz6KOPmsOHDxdrO8YYk5CQYIqTNv/973/NTTfdZCQZSaZatWqmffv2+a5b3vZ7cf8/AnAOkkxCQkKR1nWXOmKMMQcOHDAPPPCACQ8PN76+vqZp06Zm+fLlxd6OMcWfH925lhTn/yMA51Tc42djjDl37pwZNGiQqVixogkKCjKtW7c2zz//vJFkIiIizM8//2yMMWUyJ+3du9e0bNnShIeHG09PT3PDDTeYZ555xmRmZl53jKJKTk7OmcPze0yePDln3bL87FLcevPpp5+aW265xQQEBBgfHx/j4eFhJBmbzWbCwsJM06ZNzbhx48ypU6fyvNZV3ouS/H8E4HxKcr7BnWvLyZMnzciRI029evWMr6+vCQoKMq1atTKffPJJsfahMcU7PneHumIM57/KmUSbMcaUZfMF1unTp48kacGCBRZHUn4lJiYqJiZGpM318f8RcE02m00JCQnq27ev1aGUW8yPRcf/R8D1cfxsHepNXvx/BMoH5jfrcHyeF/8fy5UF3IYLAAAAAAAAAAC4NZolcDm//vprnnsx5vfo16+f1aECAJwQdQQAUFrUEgBAWaO2ANbzsjoAoLiioqK4bBoAUGLUEQBAaVFLAABljdoCWI8rSwAAAAAAAAAAgFujWQIAAAAAAAAAANwazRIAAAAAAAAAAODWaJYAAAAAAAAAAAC3RrMEAAAAAAAAAAC4NZolAAAAAAAAAADArdEsAQAAAAAAAAAAbo1mCQAAAAAAAAAAcGs0SwAAAAAAAAAAgFujWQIAAAAAAAAAANwazRIAAAAAAAAAAODWaJYAAAAAAAAAAAC3RrMEAAAAAAAAAAC4NZolAAAAAAAAAADArXlZHQDK1sKFC2Wz2awOo9xjHxdNdHS01SEAKIGYmBjFxMRYHUa5Ry0B4E6Y86zDvgdQHnH+yzp8XsyL81/lh80YY6wOAmUjKSlJBw4csDoMlzdlyhRJ0uOPP25xJK6vZs2aatGihdVhACiGxMREq0MoF2JiYjRy5EjmwDLQsmVLRUREWB0GgBI6ePCg1q9fb3UYLi8pKUlTp05VQkKC1aGUC3379rU6BAClwPmvssH5r7LD+a9yYwHNEuAaVw6cOWEIACgpm82mhIQETsYAAMpEYmKiYmJixMd3AEBZ4fwXkMcCfrMEAAAAAAAAAAC4NZolAAAAAAAAAADArdEsAQAAAAAAAAAAbo1mCQAAAAAAAAAAcGs0SwAAAAAAAAAAgFujWQIAAAAAAAAAANwazRIAAAAAAAAAAODWaJYAAAAAAAAAAAC3RrMEAAAAAAAAAAC4NZolAAAAAAAAAADArdEsAQAAAAAAAAAAbo1mCQAAAAAAAAAAcGs0SwAAAAAAAAAAgFujWQIAAAAAAAAAANwazRIAAAAAAAAAAODWaJYAAAAAAAAAAAC3RrMEAAAAAAAAAAC4NZolAAAAAAAAAADArdEsAQAAAAAAAAAAbo1mCQAAAAAAAAAAcGs0SwAAAAAAAAAAgFujWQIAAAAAAAAAANwazRIAAAAAAAAAAODWaJYAAAAAAAAAAAC3RrMEAAAAAAAAAAC4NZolAAAAAAAAAADArdEsAQAAAAAAAAAAbo1mCQAAAAAAAAAAcGs0SwAAAAAAAAAAgFujWQIAAAAAAAAAANwazRIAAAAAAAAAAODWaJYAAAAAAAAAAAC35mV1AICVTp48qdTU1FzLLly4IEnas2dPruUhISGqVKmSw2IDALiGffv2KSsrK8/yY8eO5akl1atXl7+/v6NCAwC4oLS0NB05ciTXsmPHjknK+xnF09NTkZGRDosNAOCaOP8FFI3NGGOsDgKwyttvv61BgwYVad233npLjzzyiJ0jAgC4mi5dumjFihXXXc/Ly0tHjx5VxYoVHRAVAMBVnTp1StWqVVNmZuZ11+3cubOWL1/ugKgAAK6M819AkSzgNlxwa7169ZK3t/d11/P29lavXr0cEBEAwNX069dPNput0HU8PDzUoUMHGiUAgOuqWLGiOnToIA+Pwj+u22w29evXz0FRAQBcGee/gKKhWQK3Fh4ers6dO8vLq+A70nl5ealLly4KDw93YGQAAFdR1A8ef/vb3xwQDQCgPBgwYICudxMILy8v3X///Q6KCADgyjj/BRQNzRK4vQEDBuR7r/krsrKyNGDAAAdGBABwJcHBwerevXuhDRNvb2/de++9DowKAODKevToIV9f3wKf9/Ly0n333afQ0FAHRgUAcGWc/wKuj2YJ3N59991X6I/t+vn5qVu3bg6MCADgah588MEC7y3v5eWlnj17KigoyMFRAQBcVWBgoHr06FFgIz4rK0sPPvigg6MCALgyzn8B10ezBG7Pz89PPXv2zPeDiLe3t3r37q2AgAALIgMAuIpu3bopMDAw3+c4oQUAKIkHH3xQGRkZ+T7n7++vLl26ODgiAIAr4/wXcH00SwBJ/fv3z/eDSEZGhvr3729BRAAAV+Lr66vo6Gj5+PjkeS4oKEgdO3a0ICoAgCvr3LmzQkJC8iz39vZWTEyM/Pz8LIgKAODKOP8FFI5mCSCpY8eO+f6AVVhYmO655x4LIgIAuJr+/fsrPT091zJvb2/169cv3yYKAACF8fb2Vt++ffN8A5gTWgCAkuL8F1A4miWA/rif/LUns7y9vdW/f/9Cf7AXAIAr2rdvr0qVKuVaxgktAEBp5PcN4IoVK6pdu3YWRQQAcGWc/wIKR7ME+D8PPPBArm8EZ2Rk6IEHHrAwIgCAK/Hw8FD//v1zffCoXLmy2rRpY2FUAABXdvfdd6tKlSo5//bx8dGAAQPk6elpYVQAAFfG+S+gYDRLgP/TunVr3XDDDTn/rlatmlq1amVhRAAAV3P1Bw8fHx899NBDnNACAJSYh4eHBgwYkNOIT09P54QWAKBUOP8FFIxmCfB/bDZbzgcRb29vPfTQQ7LZbFaHBQBwIc2aNVPNmjUl/XFCq1+/fhZHBABwdVc34iMiItS0aVOLIwIAuDLOfwEFo1kCXOXKBxHuMQ8AKAmbzaaHHnpIkhQZGak777zT4ogAAK7uzjvvVO3atSVJAwcO5IQWAKDUOP8F5M+rqCsmJSXptddes2csgFMICgqSJL300ksWRwLY36hRo9SiRQu7bJu6AXeVmpoqSQoMDFSfPn0sjgZwvBYtWmjUqFF22z55BXfk7+8vSfruu+/IAbgd6gpgH5z/grtbsGBBnmVFvrLkwIEDWrhwYZkGBDijyMhIRUZGFnn9DRs2aMOGDXaMCLCPhQsX6sCBA3bbPnUD7iokJEShoaGKiIgo8TYOHjxI/sAlbdiwQUlJSXYdY+HChTp48KBdxwCcTc2aNRUaGqqQkJASvZ66AldFXQHsp7jnv/JD/sAVFXZcVOQrS67Ir+MClCe7d++WJNWtW7dI61/5Fgq5AVfjqFs4kBtwR1988YU6depU4tcnJiYqJiaG/IHLcdS3cx9//HH17dvXIWMBzqI0tYW6AldFXQHsp7jnv/Jjs9nIH7icK8dF+Sl2swQo70pTJAAAkFSqRgkAAPmhtgAAyhLnv4C8+IF3AAAAAAAAAADg1miWAAAAAAAAAAAAt0azBAAAAAAAAAAAuDWaJQAAAAAAAAAAwK3RLAEAAAAAAAAAAG6NZgkAAAAAAAAAAHBrNEsAAAAAAAAAAIBbo1kCAAAAAAAAAADcGs0SAAAAAAAAAADg1miWAAAAAAAAAAAAt0azBAAAAAAAAAAAuDWaJQAAAAAAAAAAwK3RLAEAAAAAAAAAAG7Nbs2Su+66S56enrrtttvsNUSBHn74Yfn5+clms+nSpUsOH98ZxcfHq0qVKrLZbJo1a1bO8s8//1yhoaH67LPP7Dq+o8YpioyMDD3//POqU6eOfHx8VKNGDY0ePVppaWkOGf/jjz9WnTp1ZLPZcj28vLxUqVIl3XPPPVq0aJHd4yhqnlwb79/+9rc863Ts2FHBwcHy9PRUw4YN9cMPP9gz9FIjH5wTdcO5kCd5ZWdna8qUKWrZsmWB66xbt06tWrVSQECAqlevrtjYWF2+fNnusVFbrEfOOCdqi3MhT/IqSm0pyjpljbpiPfLFOVFXnAt5ktf1asa4cePUoEEDhYSEyNfXV/Xq1dNTTz2l8+fP2z02aov1yJnrs1uzZNOmTWrXrp29Nl+ouXPnavTo0ZaM7axGjx6t9evX51lujHHI+I4apyhGjhypyZMna8KECTp16pQ++OADzZkzR4MGDXLI+L1799aePXtUt25dhYaGyhgjY4xOnDihhIQEHTp0SL1791ZCQoJd4yhqnlwdb8WKFTVv3jwtW7Ys1zorV67UggULdO+992rbtm1q0qSJvcIuE+SDc6JuOBfyJLedO3fqr3/9q0aNGqWLFy/mu862bdvUsWNHtW/fXidOnNCiRYv0n//8R0OGDLF7fNQW65Ezzona4lzIk9yKUluKso49UFesR744J+qKcyFPcitKzVizZo2GDRumvXv36uTJk5owYYKmTp2qPn362D0+aov1yJnrs/ttuGw2W6m3kZaW5tBv0biTbt266ezZs7r33nvLbJv5vV/2GKck9uzZo1mzZumhhx5Sv379FBwcrLZt22r48OH68MMP9csvv1gWW3h4uNq3b69p06ZJkhITE4v1ekfkyb///W95eHjoscce09mzZ+06lhXcLR+cFXXDubljnvz8888aM2aMhgwZUui3CMePH69q1arpxRdfVGBgoFq0aKHY2Fi98847+vXXXx0Y8Z+oLdZzx5xxRtQW5+aOeVKU2lLU+uNI1BXruWO+OCPqinNzxzwpas0ICgrSY489pgoVKig4OFh9+/ZVz549tWLFCh04cMCBEf+J2mI9d8yZgti9WeLt7V3qbbz99ts6fvx4iV5bFgUMxVOa98veNm3apOzsbDVr1izX8s6dO0uSvvjiCyvCyqVWrVqSpJSUlGK9zhF50rJlS40cOVKHDh3iGy1F5Mz54KyoG+7H2fPk1ltv1ccff6wHH3xQvr6++a6TmZmpZcuW6e677871f6hLly4yxmjJkiWOCjdf1JbyxdlzxhlRW9yPs+dJUWpLUdaxCnWlfHH2fHFG1BX34+x5UtSasXTpUnl6euZaVqlSJUly6BWM+aG2lC/OnjMFsXuzZNeuXYqKilJgYKD8/f3Vpk0brVu3Ltc63377rRo0aKDQ0FD5+fmpcePGOSetR44cqSeeeEK7d++WzWZTvXr1cl73/vvv684775Sfn58CAwNVq1YtjR8//s8/zsNDy5YtU5cuXRQaGqrq1avrP//5T7H/htdff12BgYEKCAjQkiVL1KVLF4WEhCgiIkIfffRRrnWNMXrttdf0l7/8Rb6+vgoPD9f999+f6xulkyZNUkBAgIKDg3X8+HE98cQTqlGjhoYMGaLAwEB5eHjojjvuUNWqVeXt7a3AwEA1adJEbdq0Uc2aNeXn56ewsDA99dRTRd6P+Vm3bp1uvPFG2Ww2zZgxQ9If79e19w688vjyyy9L9H7lN05R91Vx9n1ReHj88V/e398/1/L69etLkqVXllyxZcsWSdLdd9+da7mz5MlLL72km266SW+99ZZWrVpV6N9CPjh3Pjgr6gZ54op5smfPHp0/f1433nhjruV169aV9OfcbhVqCznjbDnjaNQW8oQ8KVvUFfLF3fOFukKelKc8OXTokPz9/VW7dm2Hj301ags54xQ5Y4ooISHBFGN1Y4wx7du3N3Xq1DG///67ycjIMFu3bjXNmjUzfn5+ZseOHTnrLViwwIwdO9acPn3anDp1yjRv3txUrFgx5/nevXubunXr5tr2lClTjCTzyiuvmFOnTpnTp0+bN9980zz44IPGGGOeeeYZI8msXr3apKSkmNOnT5uuXbsaX19fc+HChWL9Hddu7+zZs+b48eOmTZs2JjAw0KSnp+es9/zzzxsfHx/z/vvvm5SUFLNlyxbTpEkTU6lSJXP06NE82xsxYoSZPn266dWrl/nll1/MCy+8YCSZjRs3mgsXLpiTJ0+azp07G0lm2bJl5sSJE+bChQtm+PDhRpL56aefirwfd+7caSSZN954I2fZgQMHjCQzffr0nHXGjBmTs4+OHDliwsPDTcuWLU1WVlaJ369rxynJvrrevi+KLVu2GEnmueeey7U8MzPTSDI9e/Ys1vaMMSY6OtpER0cX+3V169Y1oaGhOf++ePGiWb58uYmMjDQdO3Y058+fz7W+1XlSt25d8/vvvxtjjFm/fr3x8PAwtWrVyolz+fLlpkePHrleQz44dz5IMgkJCcV6TXFQN6gb5SFPrtWsWTNz66235lm+du1aI8lMnjw5z3P+/v6mffv2xRqnJPljDLWFnLE+Z0p6XFQcxa1f1BbypKBxSrKvHFlbirtOYagr1BVXzRfqCnWFPCm+4tSMCxcumODgYDN8+PASjVWS8wrUFnLG6pwp5Lgo0e7NkmuT88rJ6tGjRxf4ugkTJhhJ5vjx48aYvDs3PT3dhIWFmXbt2uV6XWZmppk6daox5s8dmJaWlvP8e++9ZySZrVu3FuvvKGh7M2fONJLMrl27jDF/JHdQUJDp169frtd+9913RpIZN25codszxuQkw7lz53KWvfvuu0aSSU5OzrPN+fPnFxjztfuxKMlwrZ49exo/Pz/z66+/FnmcoiRDaffVtfu+ODp37mwqVKhgVq9ebdLS0syRI0dMYmKisdlspnv37sXeXmmaJZLyPBo3bmzeffddc/ny5UJf7+g8ubo4GGPME088YSSZYcOGGWPyFgfywfnzwVmbJdQN8iS/caysG1cr6IPHypUrjSTz2muv5XkuJCTEtGzZsljjlOakFrXFFBiHMeSMvXPGWU9qUVvIk/zGcfbaUtx1CkNdoa4UNo4z5wt1hbpyLfLk+opTM5555hlz0003mdTU1BKNVZLzCtQWcsbqnCmsWWL323Bdq3HjxgoNDS30dhRX7v2YlZWV7/NbtmxRSkqKOnXqlGu5p6enRowYcd3tZmRkFDfsfPn4+OTa3rZt23T+/Hndeeeduda766675OPjo40bN5ZqnMzMzJxlRflbrrcfrycxMVGffPKJXnzxRd18881lOk5p99W1+7445s+frz59+uihhx5ShQoV1KpVK33yyScyxqhixYrF3l5phIaGyhgjY4wyMjJ08OBBPf744xo+fLhuueUWnTx5ssDXWp0nL730km6++WbNnDkzz+XGEvngKvngCqgbJR+HPPmTvfPEz89PUu59fkV6enqe2z/aE7Wl+MiZvKgt1udDUVFbSj4OeVI01JXiI1/yKu/5Ql0p+TjkyZ8cnSeLFi1SYmKivvjiCwUHBztkzCuoLcVHzuRlj5xxeLNE+mPnXf1HLFu2TG3btlXlypXl6+ub515r10pNTZUkhYWF2TXO4rryA0RBQUF5ngsLC9O5c+fsOn5x92NhTp06pX/+85+666679MQTT5T5OFbuq9DQUM2aNUsHDx7UxYsXtXv3br366quSpBtuuMFu416Pl5eXatSooYcffljx8fH67bff9Morr+Q872x54ufnp7lz58pms+nvf/+70tLScj1PPhSd1fvKFVA37IM8KTvVqlWT9Of/tSsuXryoS5cuqXr16laERW0pY+RM+UJtsQ/ypHyjrpQt8qV8oa7YB3liH/Pnz9fEiRP19ddf5/ywulWoLWWLnCkdhzdLMjMzdfr06ZwfQN2/f7969uypatWqaePGjTp79qzi4uIK3caVE9qFdRmtcCUJ83sjU1JSFBERYbexS7IfCzNixAilpKRo7ty58vT0LPNxrNxX+dm0aZMkqV27dg4dtyCNGzeWJG3fvl2S8+ZJixYtNGrUKO3cuTPXj2RJ5ENxOFs+OBvqhn2QJ2Wrdu3aCg4O1r59+3It37VrlyTplltusSKsXKgtpUPOlC/UFvsgT9wLdaV0yJfyhbpiH+SJfUyfPl3z5s3TmjVrLP3ScH6oLaVDzpSew5slX331lbKzs9WkSRNJUnJysjIyMjR06FDVqVNHfn5+stlshW6jVq1aqlChglauXOmIkIusUaNGCgoK0ubNm3Mt37hxo9LT03XHHXfYbeyS7MeCLFu2TB988IGee+45NWzYMGf5k08+WWbjWLmv8jNnzhzVrl1bd999t0PHLcj3338vSTmXtzlznowfP15RUVH68ccfcy0nH4rO2fLB2VA37IM8KVteXl7q2rWrvvnmG2VnZ+csX758uWw2m+677z4Lo/sDtaV0yJnyhdpiH+SJe6GulA75Ur5QV+yDPClbxhjFxsYqOTlZixcvzvfb/FajtpQOOVN6dm+WpKen6+zZs8rMzNQPP/yg4cOHKzIyUgMHDpSknK77qlWrdOnSJe3cuTPP/cgqVKigw4cPa+/evTp37pw8PDz09NNP65tvvtHw4cN16NAhZWdn69y5czmdRyv4+fnpiSee0KJFizRv3jylpqYqOTlZQ4YMUfXq1fXYY4/Zbeyi7MeiSE1N1eDBg3XbbbdpzJgxkqRLly5p8+bN+umnn0r0fuV33zgr91XTpk21b98+ZWZmau/evRo9erRWrVqlt99+O+ded46Ulpam7OxsGWN0+PBhzZ07V88++6wqVaqkxx9/XJJz58mVyw+v7jBfWU4+OH8+OCPqBnniqnny3HPP6dixY3rhhRd04cIFJSUlafLkyRo4cGCh93a1B2pL2SNnXBu1hTwhT0qHulL2yBfXRl0hT1wxT7Zv365JkyZpzpw58vb2ls1my/WIj493aDzUlrJHzpSBMviV+ALNnTvXtGvXzlSpUsV4eXmZihUrmgceeMDs27cv13qxsbGmQoUKJiwszPTp08fMmDHDSDJ169Y1+/fvNz/88IOJjIw0/v7+pnXr1ubo0aPGGGNmzJhhGjdubPz8/Iyfn5+5/fbbzcyZM01cXJzx9/c3kkz9+vXN7t27zbx580x4eLiRZCIiIszWrVuL/HfMnDnTBAQE5Nre7NmzTUhIiJFkIiMjzY4dO4wxxmRnZ5vJkyeb+vXrG29vbxMeHm569uxpfvvtt5ztXR1fzZo1zfvvv2+MMWYWGuKfAAAgAElEQVTq1Kk549SqVct8++23ZuLEiSY0NNRIMlWrVjUffPCBmT9/vqlataqRZMLDw81HH3103f04cuTInNcEBgaaXr16menTp5tq1aoZSSYgIMDcd999Jj4+3kjK99G1a9cSvV/PPvtsnnGKuq+Ks++LqkOHDiYsLMx4eXmZ8PBw061bN7Np06ZibeNq0dHRJjo6usjrL1q0yNStWzfffezr62vq169vhg4davbv35/rdVblydXxVqpUyQwbNizfv+vJJ580PXr0yLWMfHDufJBkEhISirx+cVE3qBvlIU+MMSYpKcm0atXKVK9ePedvq1atmmnZsqVZu3ZtrnXXrl1rmjZtanx9fU316tXNk08+aS5dulSs8Ywpfv5QW8gZZ8mZ4h4XlURx6xe1hTxxtjwxpmi1pTj153qoK3+grrhevlBXqCvkSdEUpWYkJycXuB8kmcmTJxdrTGOKlz/UFnLGWXKmkOOiRJsxxqgIEhMTFRMToyKuDriNPn36SJIWLFhgcSRA8dhsNiUkJKhv37522T51Ayg58geuyhHHRfauX0B5RF2Bq6KuAM6N/IErKuS4aIHDf7MEAAAAAAAAAADAmbhts+TXX3/Nc2++/B79+vWzOlRcB+8lAEdgrik/eC8BOAvmo/KD9xKAM2AuKj94LwFreFkdgFWioqK4BLmc4L0E4AjMNeUH7yUAZ8F8VH7wXgJwBsxF5QfvJWANt72yBAAAAAAAAAAAQKJZAgAAAAAAAAAA3BzNEgAAAAAAAAAA4NZolgAAAAAAAAAAALdGswQAAAAAAAAAALg1miUAAAAAAAAAAMCt0SwBAAAAAAAAAABujWYJAAAAAAAAAABwazRLAAAAAAAAAACAW6NZAgAAAAAAAAAA3BrNEgAAAAAAAAAA4NZolgAAAAAAAAAAALdGswQAAAAAAAAAALg1miUAAAAAAAAAAMCteRX3BX369LFHHIDL2rBhg6SS5ca5c+cUEBAgT0/Psg4LcBrUDaDoLl++LF9fXx08eFAS+QPXs2HDBjVv3tzu40yZMkULFiyw+ziAPVyZ6x2JugJXRV2Bu0lJSVFYWJjVYRQL+QNXc+W4KD+eY8eOHVuUjaSmpurs2bNlFRNQbkRERCgiIqLYrzPGaO3atTp48KBq1KhBwwQO16BBA3Xu3Fk1a9a0y/apG0DxpKSkaOXKlapWrZqqVq2qBg0aWB0SUGwRERFq0aKFWrRoYbcxtm3bppCQELttH7CnM2fOaOXKlapevbr8/PwcNm5ISAh1BS6JugJ3sm3bNm3atEkREREOb6qXVIMGDcgfuJwrx0V9+/a99qntNmOMsSIoANKvv/6qTp06KSgoSCtWrLDbSWsAgGto06aNsrOztW7dOtlsNqvDAQCUsbvvvlvp6elav3498zwAQJKUmZmpoUOHau7cuXr99df16KOPWh0S4K4W8JslgIWioqK0YcMGeXl5qU2bNvrtt9+sDgkAYKH4+HglJSVp8eLFVocCAChjixYt0rfffqv4+HgaJQAASdKFCxfUo0cPffjhh/r0009plAAW48oSwAmcOXNG9957r3755RctXbrUrpcYAwCcW//+/bVx40Zt377dZS6/BwAULj09XY0aNdJdd92lDz74wOpwAABO4NixY+rWrZsOHTqkpUuX6o477rA6JMDdcWUJ4AzCw8O1cuVKNW/eXB06dNCKFSusDgkAYJFJkybp6NGjev31160OBQBQRmbMmKEDBw5owoQJVocCAHACu3fvVps2bZSSkqJvvvmGRgngJGiWAE4iICBAS5YsUUxMjHr06KH58+dbHRIAwAIREREaPny4xo8fr1OnTlkdDgCglM6cOaMJEybo8ccfV2RkpNXhAAAs9t1336lFixYKDw9XUlKS6tevb3VIAP4PzRLAiXh5eemtt97SiBEj1L9/f7322mtWhwQAsMDTTz8tX19fvfTSS1aHAgAopRdffFGenp6KjY21OhQAgMU+++wztWvXTs2bN9dXX32lypUrWx0SgKvQLAGcjM1m06RJkzRlyhSNHj1aY8aMsTokAICDBQcH64UXXtDMmTO1Y8cOq8MBAJTQ7t279cYbb2jcuHEKDQ21OhwAgIXmzp2rXr16KSYmRosWLVJAQIDVIQG4Bj/wDjix9957T4888ogGDBigOXPmyMvLy+qQAAAOkpWVpdtuu0316tXTJ598YnU4AIASuP/++7Vjxw5t2bKFY3kAcGNxcXEaM2aMYmNjNXHiRKvDAZC/BRytAU7soYceUnh4uGJiYnTmzBl99NFH8vf3tzosAIADeHp6atKkSeratatWrVqle+65x+qQAADF8PXXX2vJkiVavnw5jRIAcFNZWVkaOnSo3n77bb355pv63//9X6tDAlAIriwBXMCGDRvUvXt3NW7cWIsXL+YSfgBwI507d9axY8f0/fffy8ODO6gCgCvIzs5W06ZNFRYWplWrVlkdDgDAAhcuXFBMTIy+/vprJSQkqFu3blaHBKBwC/jEDbiA5s2ba+3atdq1a5fatGmjw4cPWx0SAMBBpkyZoq1bt+r999+3OhQAQBG99957+umnnzRlyhSrQwEAWODUqVPq2LGjNmzYoC+//JJGCeAiuLIEcCF79+5Vp06dlJGRoZUrV6pevXpWhwQAcIDBgwdr6dKl+u233xQYGGh1OACAQqSlpenmm29Wt27d9MYbb1gdDgDAwfbs2aMuXbooMzNTy5cv10033WR1SACKhitLAFdSq1YtffPNNwoPD1ebNm30008/WR0SAMABxo0bp3Pnzik+Pt7qUAAA1xEXF6eUlBS98MILVocCAHCwTZs2qUWLFgoNDVVSUhKNEsDF0CwBXEzVqlW1du1a3XLLLWrXrp2++eYbq0MCANhZlSpVFBsbq7i4OB04cMDqcAAABTh8+LDi4+P1r3/9S9WqVbM6HACAA3355Zdq3769br31Vq1evVpVqlSxOiQAxUSzBHBBQUFB+uyzz9SxY0d17NhRCxcutDokAICdjRo1SlWqVNHYsWOtDgUAUIBnn31W4eHhGjFihNWhAAAc6J133lG3bt3Uu3dvLVu2TMHBwVaHBKAEaJYALsrHx0cffvihHn74YfXr10+zZ8+2OiQAgB35+flpwoQJeuedd/T9999bHQ4A4Bo///yz3n33XU2aNEkBAQFWhwMAcJC4uDj9/e9/16hRo/Sf//xH3t7eVocEoIT4gXegHIiLi9O//vUvPf/883zjGADKMWOMWrduLR8fH3311VdWhwMAuEqHDh2UmpqqDRs2yGazWR0OAMDOsrKyNGzYMM2ZM0czZszQ4MGDrQ4JQOks8LI6AgClFxsbq+DgYP3zn//U6dOnNXXqVHl4cOEYAJQ3NptN8fHxatWqlT799FPdd999VocEAJC0ZMkSrVq1St9++y2NEgBwAxcvXlRMTIzWrFmjxYsXq3v37laHBKAMcGUJUI588skn6t+/v3r16qV33nmHSz8BoJzq27evtmzZouTkZOZ6ALBYZmambr31VjVq1EgJCQlWhwMAsLPTp0/rvvvu0y+//KJPP/1UrVq1sjokAGVjAV89B8qRnj176vPPP9fSpUvVpUsXnTt3zuqQAAB2EBcXp71792rWrFlWhwIAbu/111/Xrl279PLLL1sdCgDAzn7//Xe1bNlShw8f1vr162mUAOUMzRKgnGnXrp3WrFmj5ORktW/fXidPnrQ6JABAGatdu7aGDx+uF154QadPn7Y6HABwWykpKRo/frxGjhypevXqWR0OAMCONm/erBYtWig4OFhJSUm6+eabrQ4JQBmjWQKUQ3fccYeSkpJ0+vRp/fWvf9X+/futDgkAUMaee+45+fj4aMKECVaHAgBua/z48ZKkp59+2uJIAAD2tGrVKrVv316NGzfW6tWrVbVqVatDAmAHNEuAcqpOnTr69ttv5ePjoxYtWig5OdnqkAAAZSg4OFjPPvuspk+frp07d1odDgC4nT179mjmzJkaO3asQkNDrQ4HAGAn7733nrp27ar7779fn3/+uUJCQqwOCYCd8APvQDmXkpKie++9V9u2bdPSpUvVsmVLq0MCAJSRzMxM3XbbbYqKitLChQutDgcA3Erv3r21fft2bdmyRd7e3laHAwCwg2nTpunxxx/XP//5T02dOlU2m83qkADYDz/wDpR3YWFhWrVqldq1a6eOHTtq+fLlVocEACgjXl5emjhxoj7++GN9++23VocDAG4jKSlJn3zyieLj42mUAEA5lJWVpaFDh+qJJ57QzJkzNW3aNBolgBvgyhLATWRlZWnw4MF65513NHv2bD388MNWhwQAKCOdOnXSiRMntHnzZnl48F0YALAnY4yaNWum4OBgrV692upwAABl7PLly/rb3/6mzz77TO+//76io6OtDgmAYyzwsjoCAI7h6emp2bNnq2LFinrkkUd06tQpjR492uqwAABlYPLkyWrSpIk+/PBDDRgwwOpwAKBcmzdvnr7//ntt2rTJ6lAAAGXs9OnT6tGjh7Zv364vv/xSrVu3tjokAA7ElSWAG5o2bZpGjRqlYcOGcc9NACgnBg0apBUrVmjHjh0KCAiwOhwAKJfS0tIUFRWljh07as6cOVaHAwAoQ3v37lWXLl106dIlLV++XFFRUVaHBMCx+M0SwB2NGDFC7777rt544w09/PDDyszMtDokAEApvfzyyzp37pymTJlidSgAUG69+uqrOn36tMaNG2d1KACAMpScnKzWrVvL29tb69ato1ECuCmaJYCbGjBggBYtWqQFCxaod+/eSktLszokAEApVK1aVaNHj9bEiRN15MgRq8MBgHLn+PHjmjx5smJjY1W9enWrwwEAlJHVq1erdevWioqK0rp161SjRg2rQwJgEW7DBbi5jRs3qnv37mrYsKGWLFmi0NBQq0MCAJTQldvDdOrUSbNnz7Y6HAAoVx599FEtX76c2x0CQDny/vvv65FHHlG/fv309ttvy9vb2+qQAFiH23AB7q5Zs2Zau3atdu/erdatW+vQoUNWhwQAKCF/f3+NHz9eb7/9tn744QerwwGAcmPLli2aO3euXnnlFRolAFBOTJs2TQMHDtSQIUP0zjvv0CgBwJUlAP6wb98+derUSenp6friiy9Uv359q0MCAJSAMUbNmjVTcHCwVq9ebXU4AFAudOrUSSdOnNDmzZvl4cF3DgHAlWVlZWnEiBGaNWuWpk2bpn/84x9WhwTAOXBlCYA/REZGav369apWrZratGnDN5IBwEXZbDZNnTpVX331lT7//PNcz50+fVpxcXEWRQYAzi8uLk6nT5/OtWzZsmVauXKlpk6dSqMEAFzc5cuX1b9/f7311lv68MMPaZQAyIUrSwDkcuHCBUVHR2vdunVatGiROnTokO96R48eVbVq1RwcHQCgqHr37q3t27dry5YtMsZo5syZGjt2rM6fP6/U1FQFBgZaHSIAOJULFy4oJCREQUFBGjt2rP7xj3/I09NTt956q6KiorRw4UKr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9gDcidX55kyPc+fOadasWXYfJzo6WtHR0Zb/vc70uFKPgGuV5+NDZ31cycdz585ZHoszPQB3w/zr+EdJP59v3Lgx57dKyuMDgLW8rr8KABRP5cqVVblyZavDAAAUIigoSI899pjVYQCAUwgKCrI6BABAETRt2tTqEACUY1xZAgAAAAAAAAAA3BrNEgAAAAAAAAAA4NZolgAAAAAAAAAAALdGswQAAAAAAAAAALg1miUAAAAAAAAAAMCt0SwBAAAAAAAAAABujWYJAAAAAAAAAABwazRLAAAAAAAAAACAW6NZAgAAAAAAAAAA3BrNEgAAAAAAAAAA4NZolgAAAAAAAAAAALdGswQAAAAAAAAAALg1miUAAAAAAAAAAMCt0SwBXNCgQYMUHBwsm82mn376yepwSmTcuHFq0KCBQkJC5Ovrq3r16umpp57S+fPn810/OztbU6ZMUcuWLR0W48cff6w6derIZrPlevj4+KhKlSpq27atJk+erDNnzjgsJgDWcae5Ny4uTlFRUfL391dgYKCioqL03HPPKTU11e4xMvcCJeNOc5QkZWRkaMKECapXr558fHwUFhamRo0aae/evXaNkTkKwLXcaf7NyMjQ888/rzp16sjHx0c1atTQ6NGjlZaWZvcYmX8BOALNEsAFvfXWW5ozZ47VYZTKmjVrNGzYMO3du1cnT57UhAkTNHXqVPXp0yfPujt37tRf//pXjRo1ShcvXnRYjL1799aePXtUt25dhYaGyhij7OxsHT9+XImJiapdu7ZiY2PVsGFDbd682WFxAbCGO8293377rR599FHt379fx44d0/jx4xUXF6fo6Gi7x8jcC5SMO81RkhQTE6P33ntPH3zwgS5evKhffvlFdevWLfCLN2WFOQrAtdxp/h05cqQmT56sCRMm6NSpU/rggw80Z84cDRo0yO4xMv8CcASaJQAsERQUpMcee0wVKlRQcHCw+vbtq549e2rFihU6cOBAzno///yzxowZoyFDhui2226zMOI/2Gw2hYWFqW3btpo7d64SExN17NgxdevWTWfPnrU6PAAoVFHnXh8fH/3jH/9Q5cqVFRQUpD59+uj+++/Xl19+qSNHjjg8buZewD0UdY6aP3++Fi9erAULFqhZs2by8vJS9erVtWTJEjVq1MjhcTNHAXB1RZl/9+zZo1mzZumhhx5Sv379FBwc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WlxZAgAlZMqUKbrjjjsUFhamgwcPWh0HACzn6uqqvn37sm4JgCI5fPiwDhw4wHolACqs5ORkhYSE6MCBA1q/fj1FCQBYjLIEAEqIi4uL5s6dq2bNmunvf/+7zp49a3UkALBcaGioNmzYoIsXL1odBUA5s3LlSnl7eysoKMjqKABQ4nbv3q0uXbooOztbW7ZsUdu2ba2OBABOj7IEAEqQl5eXlixZotTUVA0aNEiZmZlWRwIAS4WGhio7O1vR0dFWRwFQzqxevVohISHy9PS0OgoAlKj169crODhYzZo1U0xMjBo0aGB1JACAKEsAoMQFBATo66+/1o8//qhx48ZZHQcALOXn56cOHTpwKy4AhZKTk6N169ZxCy4AFc6iRYsUGhqqXr16afny5apWrZrVkQAA/4uyBABKQfv27RUREaHZs2fr7bfftjoOAFgqNDRUS5cutToGgHJk69at+v3339WvXz+rowBAiZk+fbrCw8M1duxYRUVFqVKlSlZHAgBcgbIEAEpJ//79NWXKFI0fP15LliyxOg4AWCY0NFSJiYnavXu31VEAlBMrV65U/fr1ddNNN1kdBQCKzRij5557Tk8++aRefPFFTZ8+XS4unJIDAEfjZnUAAKjInn76aR06dEgjRozQhg0b1KlTJ6sjAUCZCwwMVO3atbVs2TK1atXK6jgAyoHVq1frtttuszoGABRbZmamRo0apa+++kpz587VXXfdZXUkAMA1UGMDQCl79913FRwcrIEDByoxMdHqOABQ5lxcXNS3b1/WLQFQICkpKYqLi2O9EgDl3oULF/T3v/9d3333nb799luKEgBwcJQlAFDK3NzctHDhQtWoUUP/+Mc/lJqaanUkAChzoaGhiomJ0fnz562OAsDBrVmzRjk5OerVq5fVUQCgyI4dO6bu3btr165d2rhxI2swAUA5QFkCAGXA19dX3377rX777TcNGzZMOTk5VkcCgDIVGhqq3NxcrV271uooABzc6tWr1bFjR/n5+VkdBQCKZM+ePerSpYsyMzO1ZcsWtWvXzupIAIACoCwBgDLSuHFjLV68WGvXrtX//M//WB0HAMpUjRo11KlTJ27FBeAvrVq1ir/ABlBubd68Wd27d1e9evW0YcMGNWzY0OpIAIACoiwBgDLUtWtXff7553rzzTf14YcfWh0HAMpUaGioli5dKmOM1VEAOKiDBw8qISGB9UoAlEuLFy9W79691b17d61du1a1atWyOhIAoBAoSwCgjA0dOlQvvfSSHn/8ca1Zs8bqOABQZvr3769jx45p586dVkcB4KBWrlypKlWq6NZbb7U6CgAUyrvvvquwsDCNGTNGCxculJeXl9WRAACFRFkCABb497//rWHDhmnIkCH6+eefrY4DAGWiQ4cOqlOnDrfiAnBNq1evVs+ePeXu7m51FAAoEGOMXn75ZT3xxBN68cUX9e6778rFhdNtAFAeMb0BwAI2m00ff/yxWrdurQEDBujkyZNWRwKAUmez2XT77bfnK0vOnj2rZcuWWZQKgBXS09O1atUqpaen29+XnZ2t9evXcwsuAOVGZmamRo4cqddee01ffvmlXn75ZasjAQCKwWa4aTQAWObMmTPq0qWL6tSpo7Vr18rT0zPPx5cvX66mTZuqefPmFiUEgJIVERGhu+++W2vXrtX333+vb775RnFxcWrUqJEOHTpkdTwAZSQ9PV2VK1eWh4eHgoODFRoaqlq1aum+++7T/v37deONN1odEQCu6+LFiwoLC1NsbKyioqJ0++23Wx0JAFA8UZQlAGCxvXv3qmvXrrrttts0f/582Ww2SdKMGTP0xBNP6Omnn9Ybb7xhcUoAKJ6UlBStXr1aS5Ys0aJFi5SWliYPDw9lZ2crNzdXrVu31q5du6yOCaAMeXp6KjMzUzabTa6ursrOzpaXl5eGDBmi2267TX379lWdOnWsjgnASR05ckQzZ87UpEmT8n3s2LFjuuOOO3T8+HEtXbpU7du3tyAhAKCERXEbLgCw2E033aTFixdr8eLF+u9//6ucnBw99thj+te//qXc3Fx9+umnysrKsjomABTJF198oW7duqlGjRoKDw9XZGSk0tLSJP1x64rc3FxJUvXq1a2MCcACvr6+kv643392drakP644WbBgge69914FBASodevWioqKsjImACf13HPPafLkyZo2bVqe9+/du1e33nqrLl26pM2bN1OUAEAFQlkCAA4gJCRE7777rv7973+rS5cuev/993X5wr/ff/+dxZABlFv16tVTbGyscnJyZIxRZmbmVbejLAGcz7WO+8tXnEnS0aNH1bVr17KMBQCKi4tTRESEJOnpp5+2/3vLli3q3r27AgICtHHjRjVq1MjKmACAEkZZAgAO4s4771S9evW0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oUOHZvz48bnqqquyZs2aTu9lS31czw0AANieda92AwAAUEY/+MEPsmTJko9d7b/7u79bb2znnXdOkqxatapTav62b33rW1m7dm2+/e1vp3v3Df+6c9xxx+W4447r9F621Mf13AAAgO2ZO0sAAPjY+OEPf5hDDz009fX1aWxszJAhQ3LNNdckSYqiyHe/+9184hOfSF1dXfr165eTTz45c+fObV//lltuSWNjY3r27Jn7778/xx9/fPr06ZOBAwfmrrvu2qx6jz/+eD75yU+mb9++qa+vz8iRI/Pwww8nSS688MJcfPHFefHFF1OpVLL33nsnSdauXZurrroqe+65ZxoaGnLAAQektbV1s3vb1rW31quvvpqGhobstdde22R7H2bNmjX52c9+lp122imf/vSnN3k950b1zg0AANhuFAAAsJ1paWkpWlpaNmudadOmFUmKb3/728Wbb75ZvPXWW8X/+l//qzjttNOKoiiKq666qujRo0fxwx/+sFi6dGnxzDPPFIccckix8847F6+//nr7dr7xjW8USYqf/exnxbJly4olS5YURxxxRNHY2FisWbNmk+vNmDGjuPrqq4u33nqrePPNN4vPfOYzxU477dS+/pgxY4phw4Z1+BkuueSSoq6urrjnnnuKt99+u/j6179edOvWrfi3f/u3zeqtM2pvqZUrVxa9e/cuLrjggi1aP0nR2tq6SXOff/75Iknxmc98ZrNqODc6/9xobW0t/PoJAMB2bLr/rQIAsN3Z3LBkzZo1RVNTU3H00Ud3GH///feLG264oVi1alXRq1evYsKECR2W/+u//muRpPjmN7/ZPvbBl86rV69uH7v55puLJMULL7ywSfU2ZMqUKUWSYsmSJUVRrP+l9OrVq4uePXt26HHVqlVFXV1dcd55521yb51Ve0t94xvfKPbdd99i+fLlW7T+5oQls2bNKpIUn//85zd5+86Nrjk3hCUAAGznpnsMFwAAO7xnnnkmS5cuXe89FDU1Nfna176WOXPmZMWKFTn00EM7LD/ssMPSo0ePPPnkkxvdfo8ePZIkbW1tm1RvQ2pra5P8xyONNuS5557LqlWrsv/++7ePNTQ0ZLfdduvwOKiP6q0ra3+U++67L9OnT8/DDz+c3r17b/F2NlWvXr2SbN67UZwb1Tk3AABgeyMsAQBgh7d8+fIkSVNT0waXL126NMl/fZn+25qamvLOO+9s03pJ8uCDD+aoo45Kc3Nz6urqctlll210mytXrkySXHHFFalUKu2fl19+ebNfjF7N2h+4++67853vfCf/+I//mCFDhmzRNjbXkCFDUl9fn+eff36T13FudP25AQAA2yNhCQAAO7zdd989SfLGG29scPkHX1xv6IvvpUuXZuDAgdu03oIFCzJ69OjstttuefLJJ7Ns2bJMnTp1o9tsbm5OkkybNi1FUXT4PPHEE5vcWzVrf+DGG2/MnXfemZkzZ7bvq65QV1eX4447Lm+88Ub++Z//+UPnvfXWW/nyl7+cxLnR1ecGAABsr4QlAADs8IYMGZL+/fvnkUce2eDy/fffP7169cqsWbM6jD/55JNZs2ZNPvWpT23TerNnz05bW1vOO++8DB06NPX19alUKhvd5qBBg1JfX5+nn356s3rZnmoXRZHJkydn9uzZ+Zu/+ZsN3q3R2a6++urU1dVl0qRJWb169Qbn/PrXv0737t2TODe6qjYAAGzvhCUAAOzw6urq8vWvfz0///nPc8EFF+TVV1/NunXr8s477+TZZ59NfX19Lr744tx333258847s3z58syePTvnnntuBgwYkIkTJ27TenvuuWeS5NFHH827776befPmrffui/79+2fRokWZP39+3nnnndTU1OTss8/OXXfdlVtuuSXLly/P2rVrs3Dhwrz22mub3Fs1az/77LO59tprc9ttt6W2trbDY5sqlUquv/76Td7WljrooIPyox/9KL/+9a9zxBFH5O///u+zbNmytLW15Te/+U1uu+22/PEf/3H7uzqcG11TGwAAtntd/k55AAD4CC0tLUVLS8tmr3fTTTcVI0eOLOrr64v6+vri4IMPLm6++eaiKIpi3bp1xXXXXVfss88+RW1tbdGvX79i9OjRxXPPPde+/s0331z07NmzSFLss88+xYsvvljceuutRZ8+fYokxeDBg4vnn39+k+pNnjy56N+/f9HU1FSMHTu2uOmmm4okxbBhw4oFCxYUv/zlL4vBgwcXDQ0NxeGHH168/vrrxXvvvVdMnjy52HPPPYvu3bsXzc3NxZgxY4o5c+ZsVm/buvammj17dpHkQz/XXXfdZh/TJEVra+tmr7dgwYLikksuKUaOHFn06tWrqKmpKZqamoqDDz64+OM//uPin//5n9vnOjc6/9xobW0t/PoJAMB2bHqlKIqiS9MZAAD4CGPHjk2SzJgxo8qdUG2VSiWtra0ZN25ctVthK0yfPj3jx4+PXz8BANhOzfAYLgAAAAAAoNSEJQAAwIeaO3fueu8e2dBnwoQJ1W4VAABgi3WvdgMAAMD2a/jw4R6dBAAAfOy5swQAAAAAACg1YQkAAAAAAFBqwhIAAAAAAKDUhCUAAAAAAECpCUsAAAAAAIBSE5YAAAAAAAClJiwBAAAAAABKTVgCAAAAAACUmrAEAAAAAAAoNWEJAAAAAABQasISAAAAAACg1IQlAAAAAABAqQlLAAAAAACAUhOWAAAAAAAApda92g0AAMCG/OIXv8jYsWOr3QbbgWnTpmXGjBnVboOtsHDhwmq3AAAAGyUsAQBgu/PZz3622i3QRf72b/82hx56aHbfffcNLm9paenijugMAwcOdCwBANiuVYqiKKrdBAAAUE6VSiWtra0ZN25ctVsBAADKa4Z3lgAAAAAAAKUmLAEAAAAAAEpNWAIAAAAAAJSasAQAAAAAACg1YQkAAAAAAFBqwhIAAAAAAKDUhCUAAAAAAECpCUsAAAAAAIBSE5YAAAAAAAClJiwBAAAAAABKTVgCAAAAAACUmrAEAAAAAAAoNWEJAAAAAABQasISAAAAAACg1IQlAAAAAABAqQlLAAAAAACAUhOWAAAAAAAApSYsAQAAAAAASk1YAgAAAAAAlJqwBAAAAAAAKDVhCQAAAAAAUGrCEgAAAAAAoNSEJQAAAAAAQKkJSwAAAAAAgFITlgAAAAAAAKUmLAEAAAAAAEpNWAIAAAAAAJSasAQAAAAAACg1YQkAAAAAAFBqwhIAAAAAAKDUhCUAAAAAAECpCUsAAAAAAIBSE5YAAAAAAAClVimKoqh2EwAAwMffGWeckaeffrrD2Pz589Pc3JzGxsb2sdra2jzwwAPZY489urpFAACgnGZ0r3YHAABAOey3336588471xtfsWJFh38PHz5cUAIAAHQpj+ECAAC6xCmnnJJKpbLRObW1tTnrrLO6piEAAID/JCwBAAC6xLBhw3LwwQenW7cP/zXk/fffz/jx47uwKwAAAGEJAADQhc4888wPDUsqlUo+/elPZ8iQIV3bFAAAUHrCEgAAoMuMHz8+69at2+Cybt265cwzz+zijgAAAIQlAABAF9ptt91yxBFHpKamZoPLx4wZ08UdAQAACEsAAIAudsYZZ6w31q1btxx99NHZddddq9ARAABQdsISAACgS40dO3aD7y3ZUIgCAADQFYQlAABAl+rTp0/+4A/+IN27d28fq6mpyRe+8IUqdgUAAJSZsAQAAOhyp59+etauXZsk6d69e0466aT07du3yl0BAABlJSwBAAC63EknnZSGhoYkydq1a3PaaadVuSMAAKDMhCUAAECXq6+vzxe/+MUkSc+ePXP88cdXuSMAAKDMun/0FAAA4HdNnz692i3s8AYNGpQkOeyww/K3f/u3Ve5mxzdq1KgMHDiw2m0AAMAOqVIURVHtJgAAYEdTqVSq3QJ00NramnHjxlW7DQAA2BHN8BguAADYQq2trSmKwmcrPn/2Z3+Wtra2TZ7f2tqaJFXve3v7AAAAW0dYAgAAVM0VV1yR7t09HRgAAKguYQkAAFA1ghIAAGB7ICwBAAAAAABKTVgCAAAAAACUmrAEAAAAAAAoNWEJAAAAAABQasISAAAAAACg1IQlAAAAAABAqQlLAAAAAACAUhOWAAAAAAAApSYsAQAAAAAASk1YAgAAAAAAlJqwBAAAAAAAKDVhCQAAAAAAUGrCEgAAqIIvf/nL6d27dyqVSp5++ulqt7NFpk6dmuHDh6ehoSGNjY0ZPnx4rrzyyixfvnyD89etW5dp06Zl1KhRXdbjvffem6FDh6ZSqXT49OjRI7vsskuOOuqoXHfddXn77be7rCcAAGD7IywBAIAq+P73v5/bbrut2m1slccffzznnHNOFixYkMWLF+eaa67J1KlT09LSst7cefPm5cgjj8ykSZOyatWqLutxzJgxeemllzJs2LD07ds3RVFk3bp1WbJkSaZPn5699torkydPzogRIzJr1qwu6wsAANi+CEsAAIAt0qNHj3z1q19Nc3NzevXqlbFjx+bkk0/OT3/607z22mvt8371q1/l8ssvz7nnnpuDDjqoih3/h0qlkqamphx11FG5/fbbM3369CxevDgnnHBCli1bVu32AACAKhCWAABAlVQqlWq3sFXuu+++1NfXdxjbY489kiQrVqxoHzvwwANz77335rTTTktdXV2X9rgpWlpactZZZ2XJkiX53ve+V+12AACAKhCWAABAFyiKItddd13222+/1NXVpW/fvrn00kvXm7d27dpcddVV2XPPPdPQ0JADDjggra2tSZJbbrkljY2N6dmzZ+6///4cf/zx6dOnTwYOHJi77rqrw3Yee+yxfPrTn07Pnj3Tp0+fjBw5sv1dIhursbXmzZuXpqamDB48eJtsr6ucddZZSZKf/OQn7WM7+rEAAAA2nbAEAAC6wJVXXpnJkydn4sSJWbx4cV5//fVcfvnl6827/PLLc+2112batGl57bXXcuKJJ+bUU0/NrFmzct555+Wiiy7K6tWr07t377S2tubFF1/M0KFDc84556StrS1JsnLlypx00klpaWnJW2+9lXnz5mXffffNmjVrPrLGlmhra8urr76am266KY8++mhuvPHG9OjRY8t3VhV88Hiwl156qX1sRzwWAADAlhGWAABAJ1u9enWmTZuWz3/+85k0aVKamprS0NCQ/v37d5j37rvv5pZbbsno0aMzZsyYNDU15YorrkhtbW1uv/32DnNHjRqVPn36pLm5ORMmTMjKlSuzYMGCJMn8+fOzfPnyjBgxIvX19dl1111z7733Zuedd96sGptq0KBBGThwYK6++upce+21GT9+/JbtqCrq3bt3KpVK3nnnnSQ77rEAAAC2jLAEAAA62QsvvJBVq1blmGOO2ei85557LqtWrcr+++/fPtbQ0JDddtstc+fO/dD1PriL44O7GYYOHZpddtklp59+eq6++urMnz9/q2tszCuvvJIlS5bkxz/+ce64444cfPDBWbJkyRZtq1pWrlyZoijSp0+fJDvusQAAALaMsAQAADrZwoULkyTNzc0bnbdy5cokyRVXXJFKpdL+efnll7Nq1apNrtfQ0JCZM2fm8MMPz1/8xV9k6NChmTBhQlavXr3Navy22traNDc359hjj83dd9+dOXPmZMqUKVu0rWp5/vnnkyTDhw9PsuMeCwAAYMsISwAAoJPV19cnSd57772NzvsgTJk2bVqKoujweeKJJzar5ogRI/LAAw9k0aJFmTx5clpbW3P99ddv0xobsvfee6empiZz5szZ6m11pYceeihJcvzxxyf5eBwLAABg0wlLAACgk+2///7p1q1bHnvssY3OGzRoUOrr6/P0009vVb1Fixbl2WefTfIfX/p/+9vfziGHHJJnn312m9V48803c+qpp643Pm/evKxduzaDBg3aqu13pddffz3Tpk3LwIED80d/9EdJdqxjAQAAbD1hCQAAdLLm5uaMGTMm99xzT37wgx9k+fLl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SaVSyfe+97328b//+79P375988ADD3Rq/a6qsznWrVuXadOmZdSoURtcPnXq1AwfPjwNDQ1pbGzM8OHDc+WVV2b58uWd3tu9996boUOHplKpdPh07949O++8cz7/+c/nvvvu6/Q+NvVa+t1+zzjjjPXmHHvssendu3dqamoyYsSI/PKXv+zM1reaawYAgO2RsAQAYAfzb//2bzn66KOrUvv222/PJZdcUpXa26tLLrkk//Iv/7LeeFEUXVK/q+psqnnz5uXII4/MpEmTsmrVqg3Oefzxx3POOedkwYIFWbx4ca655ppMnTo1LS0tnd7fmDFj8tJLL2XYsGHp27dviqJIURT593//97S2tubVV1/NmDFj0tra2ql9bOq19Nv97rTTTrnzzjvz4IMPdpjzyCOPZMaMGTnxxBMzZ86cHHLIIZ3V9jbhmgEAYHskLAEA2EFVKpWt3sbq1as/9K//2TonnHBCli1blhNPPHGbbXNDx6sz6mypX/3qV7n88stz7rnnbvTOpx49euSrX/1qmpub06tXr4wdOzYnn3xyfvrTn+a1117rwo7/S79+/XLMMcfkL//yL5Mk06dP36z1u+Ja+p//83+mW7dumThxYpYtW9aptaqhjNcMAADbD2EJAMAOqra2dqu38YMf/CBLlizZonW3RVjD5tma49UVDjzwwNx777057bTTUldX96Hz7rvvvtTX13cY22OPPZIkK1as6NQeP8qQIUOSJEuXLt2s9briWho1alQuvPDCvPrqq+7w2kTb+zUDAMD2Q1gCALCDeuGFFzJ8+PA0NjamoaEhRxxxRP7pn/6pw5zHH388n/zkJ9O3b9/U19dn5MiRefjhh5MkF154YS6++OK8+OKLqVQq2XvvvdvX++EPf5hDDz009fX1aWxszJAhQ3LNNde0L+/WrVsefPDBHH/88enbt28GDBiQv/7rv97sn+GWW25JY2Njevbsmfvvvz/HH398+vTpk4EDB+auu+7qMLcoinz3u9/NJz7xidTV1aVfv345+eSTM3fu3PY51157bXr27JnevXtnyZIlufjii7PHHnvk3HPPTWNjY7p165ZPfepT2XXXXVNbW5vGxsYccsghOeKIIzJo0KDU19enqakpl1122Sbvxw35p3/6p+y5556pVCq56aabkvzH8frd92R88PnpT3+6RcdrQ3U2dV9tzr7vCvPmzUtTU1MGDx7c5bV/2zPPPJMk+W//7b91GN9erqVvfetb2XffffP9738/jz766EZ/FtfMx/uaAQBg2xKWAADsoPr165eHHnooy5Yty6xZs9LW1pbf//3fz7x589rnLF68OOPHj8/8+fOzaNGi9OrVK6eddlqS5IYbbsiJJ56YYcOGpSiKvPDCC+3jZ555ZlpaWrJo0aIsXLgwX//61/Pcc8+1b3fdunVpamrK3Xffnfnz5+eQQw7Jeeed96HvqPgw5513Xi666KKsXr06vXv3Tmtra1588cUMHTo055xzTtra2trnXn311fnTP/3TfOMb38iSJUvy85//PK+88kqOOOKILF68OEly2WWXZdKkSVmxYkWmTJmSvfbaK5/5zGfyta99LZdeemmKoshf/dVf5Te/+U1ef/31HHnkkXnqqafyp3/6p3nqqafy1ltv5Utf+lKuu+66/OpXv9qk/bghhx9++AbfyXD55Zdn5cqVKYoir732Wvr165dRo0blmGOO2aLj9WF1NmVfbc6+7yxtbW159dVXc9NNN+XRRx/NjTfemB49enR63Q1ZvXp1HnrooVxyySU59thjc/HFF3dYvr1cSw0NDfnf//t/p1u3bjnnnHOycuXKD/2ZXDMfv2sGAIBOVAAAUFWtra3F5v637JhjjikOPPDADmPPPPNMkaS45JJLPnS9KVOmFEmKJUuWFEVRFGPGjCmGDRvWvnzNmjVFU1NTcfTRR3dY7/333y9uuOGGoiiK4hvf+EaRpFi9enX78v/zf/5PkaT49a9/vVk/x4dt7+abby6SFC+88EJRFEWxatWqolevXsWECRM6rPuv//qvRZLim9/85ka3VxRF8Wd/9mdFkuKdd95pH7vjjjuKJMXs2bPX2+bdd9/9oT3/7n6cN29ekaT4q7/6q/Y5r7zySpGkuPHGGze4jdGjRxf19fXF3LlzN7nO7x6vDdXZ2n31u/t+S/3e7/3eeufo79p1112LJMVOO+1U/OVf/mWxZs2aza6zJddPURTFsGHDilqHKgcAABSUSURBVCTrfUaOHFnccccdxXvvvbfR9bv6Who2bFjxm9/8pv3fF198cZGkOP/884uiKIqf/OQnxRe+8IX25a6Z7f+aaWlpKVpaWjZrHQAAOs10d5YAAHxMjBw5Mn379m1/jNCGfPCek7Vr125w+TPPPJOlS5fmuOOO6zBeU1OTr33tax+53W31l9Uf3F3wwfbmzJmTFStW5NBDD+0w77DDDkuPHj3y5JNPblWd999/v31sU36Wj9qPH2X69On5v//3/+bP//zPs99++23TOlu7r35333emV155JUuWLMmPf/zj3HHHHTn44IO79P0Sffv2TVEUKYoibW1tWbhwYS666KJccMEFOeCAA/LGG2986LrVvpa+9a1vZb/99svNN9+83uP3EtfMx/WaAQCg8whLAAA+Rmprazt8Yffggw/mqKOOSnNzc+rq6tZ7r8DvWr58eZKkqampU/vcXB+8bLtXr17rLWtqaso777zTqfU3dz9uzJtvvpk/+ZM/yWGHHbbeo562RZ1q76vNUVtbm+bm5hx77LG5++67M2fOnEyZMqUqvXTv3j177LFHzj777Fx//fV57rnn8u1vf7t9+fZ2LdXX1+f2229PpVLJH/3RH2X16tUdllf7PHDNAACwoxGWAAB8TLz//vt56623sueeeyZJFixYkNGjR2e33XbLk08+mWXLlmXq1Kkb3cbuu++eJBv9i/pq+OAL5w19abl06dIMHDiw02pvyX7cmK997WtZunRpbr/99tTU1GzzOtXcV1tj7733Tk1NTebMmVPtVjJy5MgkybPPPptk+72WPvvZz2bSpEmZN29eh5fGJ66ZzbGjXjMAAGxbwhIAgI+Jf/iHf8i6detyyCGHJElmz56dtra2nHfeeRk6dGjq6+tTqVQ2uo0hQ4akf//+eeSRR7qi5U22//77p1evXpk1a1aH8SeffDJr1qzJpz71qU6rvSX78cM8+OCD+dGPfpQrr7wyI0aMaB+/9NJLt1mdau6rTfHmm2/m1FNPXW983rx5Wbt2bQYNGlSFrjr6f//v/yVJ++Oetudr6Zprrsnw4cPz1FNPdRh3zWy67f2aAQCgawhLAAB2UGvWrMmyZcvy/vvv55e//GUuuOCCDB48OGeddVaStN9h8uijj+bdd9/NvHnz1nv2fv/+/bNo0aLMnz8/77zzTrp165avf/3r+fnPf54LLrggr776atatW5d33nmn/a/sq6G+vj4XX3xx7rvvvtx5551Zvnx5Zs+enXPPPTcDBgzIxIkTO632puzHTbF8+fJ85StfyUEHHZTLL788SfLuu+9m1qxZefrpp7foeG3oHQnV3FeborGxMY888khmzpyZ5cuXp62tLU899VS+9KUvpbGxMZMmTerSflavXp1169alKIosWrQot99+e6644orsvPPOueiii5Js39fSB4/j+u07Lj4Yd818PK4ZAAC6SJXfMA8AUHqtra3F5v637Pbbby+OPvroYpdddim6d+9e7LTTTsUpp5xSvPzyyx3mTZ48uejfv3/R1NRUjB07trjpppuKJMWwYcOKBQsWFL/85S+LwYMHFw0NDcXhhx9evP7660VRFMVNN91UjBw5sqivry/q6+uLgw8+uLj55puLqVOnFg0NDUWSYp999ilefPHF4s477yz69etXJCkGDhxY/PrXv97kn+Pmm28uevbs2WF7t956a9GnT58iSTF48ODi+eefL4qiKNatW1dcd911xT777FPU1tYW/fr1K0aPHl0899xz7dv77f4GDRpU/PCHPyyKoihuuOGG9jpDhgwpHn/88eI73/lO0bdv3yJJseuuuxY/+tGPirvvvrvYddddiyRFv379irvuuusj9+OFF17Yvk5jY2PxxS9+sbjxxhuL3XbbrUhS9OzZszjppJOK66+/vkiywc9//+//fYuO1xVXXLFenU3dV5uz7zfVE088UXzuc58rBgwY0P6z7bbbbsWoUaOKxx57rH3eSSedVOy1115Fr169irq6umLYsGHFhAkTitmzZ29WvaLY/OvnvvvuK4YNG7bB41BXV1fss88+xXnnnVcsWLCgw3rVupZ+u9+dd965OP/88zf4c1166aXFF77whQ5jrpnt+5ppaWkpWlpaNnk+AACdanqlKIpi28YvAABsjunTp2f8+PHx3zLYfK4fdlRjx45NksyYMaPKnQAAkGSGx3ABAAAAAAClJiwBAGCbmjt3biqVykd+JkyYUO1W+QiOJQAAUBbdq90AAAAfL8OHD/dIpI8JxxIAACgLd5YAAAAAAAClJiwBAAAAAABKTVgCAAAAAACUmrAEAAAAAAAoNWEJAAAAAABQasISAAAAAACg1IQlAAAAAABAqQlLAAAAAACAUhOWAAAAAAAApSYsAQAAAAAASk1YAgAAAAAAlJqwBAAAAAAAKDVhCQAAAAAAUGrCEgAAAAAAoNS6V7sBAAD+Q6VSqXYLsMNy/bAjamlpqXYLAAD8J2EJAECVjRo1Kq2trdVuA6pi/PjxufDCC/PZz3622q1Alxs0aFC1WwAA4D9ViqIoqt0EAABQ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\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":52}],"source":["#모델 설계 구조 \n","import tensorflow \n","tensorflow.keras.utils.plot_model(phase3_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":404,"status":"ok","timestamp":1642488655415,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"YadbAFv9c0_-","outputId":"84dfe56e-d7a2-45d6-957e-55b2576f22dc"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_3\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," input_10 (InputLayer)          [(None, 294, 9)]     0           []                               \n","                                                                                                  \n"," input_11 (InputLayer)          [(None, 224, 224, 3  0           []                               \n","                                )]                                                                \n","                                                                                                  \n"," bidirectional_2 (Bidirectional  (None, 256)         141312      ['input_10[0][0]']               \n"," )                                                                                                \n","                                                                                                  \n"," efficientnetb0 (Functional)    (None, 7, 7, 1280)   4049571     ['input_11[0][0]']               \n","                                                                                                  \n"," input_12 (InputLayer)          [(None, 1)]          0           []                               \n","                                                                                                  \n"," input_13 (InputLayer)          [(None, 1)]          0           []                               \n","                                                                                                  \n"," flatten_5 (Flatten)            (None, 256)          0           ['bidirectional_2[0][0]']        \n","                                                                                                  \n"," flatten_6 (Flatten)            (None, 62720)        0           ['efficientnetb0[0][0]']         \n","                                                                                                  \n"," dense_25 (Dense)               (None, 32)           64          ['input_12[0][0]']               \n","                                                                                                  \n"," dense_28 (Dense)               (None, 32)           64          ['input_13[0][0]']               \n","                                                                                                  \n"," batch_normalization_9 (BatchNo  (None, 256)         1024        ['flatten_5[0][0]']              \n"," rmalization)                                                                                     \n","                                                                                                  \n"," batch_normalization_10 (BatchN  (None, 62720)       250880      ['flatten_6[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," batch_normalization_11 (BatchN  (None, 32)          128         ['dense_25[0][0]']               \n"," ormalization)                                                                                    \n","                                                                                                  \n"," batch_normalization_12 (BatchN  (None, 32)          128         ['dense_28[0][0]']               \n"," ormalization)                                                                                    \n","                                                                                                  \n"," dense_21 (Dense)               (None, 32)           8224        ['batch_normalization_9[0][0]']  \n","                                                                                                  \n"," dense_23 (Dense)               (None, 32)           2007072     ['batch_normalization_10[0][0]'] \n","                                                                                                  \n"," dense_26 (Dense)               (None, 32)           1056        ['batch_normalization_11[0][0]'] \n","                                                                                                  \n"," dense_29 (Dense)               (None, 32)           1056        ['batch_normalization_12[0][0]'] \n","                                                                                                  \n"," dense_22 (Dense)               (None, 10)           330         ['dense_21[0][0]']               \n","                                                                                                  \n"," dense_24 (Dense)               (None, 10)           330         ['dense_23[0][0]']               \n","                                                                                                  \n"," dense_27 (Dense)               (None, 10)           330         ['dense_26[0][0]']               \n","                                                                                                  \n"," dense_30 (Dense)               (None, 10)           330         ['dense_29[0][0]']               \n","                                                                                                  \n"," concatenate_2 (Concatenate)    (None, 40)           0           ['dense_22[0][0]',               \n","                                                                  'dense_24[0][0]',               \n","                                                                  'dense_27[0][0]',               \n","                                                                  'dense_30[0][0]']               \n","                                                                                                  \n"," dense_31 (Dense)               (None, 32)           1312        ['concatenate_2[0][0]']          \n","                                                                                                  \n"," batch_normalization_13 (BatchN  (None, 32)          128         ['dense_31[0][0]']               \n"," ormalization)                                                                                    \n","                                                                                                  \n"," dense_32 (Dense)               (None, 4)            132         ['batch_normalization_13[0][0]'] \n","                                                                                                  \n","==================================================================================================\n","Total params: 6,463,471\n","Trainable params: 2,287,756\n","Non-trainable params: 4,175,715\n","__________________________________________________________________________________________________\n"]}],"source":["#학습 방식은 동일 \n","phase3_model.compile(optimizer=\"adam\", loss=\"sparse_categorical_crossentropy\",metrics = ['accuracy'])\n","phase3_model.summary() "]},{"cell_type":"markdown","metadata":{"id":"5yjVMfNWcpTe"},"source":["## 학습"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":317},"executionInfo":{"elapsed":233778,"status":"ok","timestamp":1642488892254,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"ecoMnVG3cuQP","outputId":"56950928-26e4-4252-ecdb-9fe8cfa081c5"},"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["loss =  0.0018848659237846732 , val_loss =  0.12537768483161926\n","\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r15/15 [==============================] - 5s 369ms/step - loss: 0.0019 - accuracy: 1.0000 - val_loss: 0.1254 - val_accuracy: 0.9632\n","Epoch 00040: early stopping\n"]}],"source":["history = phase3_model.fit([train_envs,train_imgs,train_crops,train_diseases],train_risks, epochs=50, verbose=1, batch_size=256, validation_split=0.2,callbacks=callbacks)"]},{"cell_type":"markdown","metadata":{"id":"S1y3SFFwdpV5"},"source":["## 예측"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":854,"status":"ok","timestamp":1642488907227,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"QbcHij_hdqGw","outputId":"3a6a8406-f10c-4782-f596-16fe9970208e"},"outputs":[{"output_type":"stream","name":"stdout","text":["0.9601386481802426\n"]}],"source":["y_ = phase3_model.predict([test_envs,test_imgs,test_crops,test_risks])\n","predicted = np.argmax(y_,axis=1)\n","error = test_risks - predicted\n","print(len(error[error==0])/len(error))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":413,"status":"ok","timestamp":1642488909258,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"tCl2oVCneqOR","outputId":"202d3d53-7753-466b-ca80-1aa334dacdc3"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[767   5   1   0]\n"," [  3 260   9   1]\n"," [  7  10  75   1]\n"," [  0   5   4   6]]\n"]}],"source":["from sklearn.metrics import classification_report\n","from sklearn.metrics import confusion_matrix\n","\n","cm = confusion_matrix(test_risks, predicted)\n","print(cm)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1642488911234,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"T_UBaVcyetkX","outputId":"ecb30392-c7bf-45b1-b712-97829d4c984b"},"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.99      0.99      0.99       773\n","           1       0.93      0.95      0.94       273\n","           2       0.84      0.81      0.82        93\n","           3       0.75      0.40      0.52        15\n","\n","    accuracy                           0.96      1154\n","   macro avg       0.88      0.79      0.82      1154\n","weighted avg       0.96      0.96      0.96      1154\n","\n"]}],"source":["print(classification_report(test_risks, predicted, target_names=['0','1','2','3']))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1950,"status":"ok","timestamp":1642488915403,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"99B05y_amEOu","outputId":"cd1942b9-2e7a-48e1-9f4c-7e4c96dc0074"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/keras/engine/functional.py:1410: CustomMaskWarning: Custom mask layers require a config and must override get_config. When loading, the custom mask layer must be passed to the custom_objects argument.\n","  layer_config = serialize_layer_fn(layer)\n"]}],"source":["phase1_model.save('phase1.h5')\n","phase2_model.save('phase2.h5')\n","phase3_model.save('phase3.h5')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VlGVyJqXmucM"},"outputs":[],"source":["!cp 'phase1.h5' /content/drive/MyDrive/모델\n","!cp 'phase2.h5' /tent/drive/MyDrive/모델\n","!cp 'phase3.h5' /content/drive/MyDrive/모델"]},{"cell_type":"markdown","metadata":{"id":"GuVLESWBCvfq"},"source":["# Phase 4 test"]},{"cell_type":"markdown","metadata":{"id":"von-9jBqlVBV"},"source":["## 서브미션 데이터 로드 "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JLo93tBplXtx"},"outputs":[],"source":["!unzip test.zip"]},{"cell_type":"markdown","metadata":{"id":"O9EHZV3gl6Kg"},"source":["### 디렉토리 로드"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"45lPYpH4l95X"},"outputs":[],"source":["test_csv = sorted(glob('test/*/*.csv'))\n","test_jpg = sorted(glob('test/*/*.jpg'))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1067,"status":"ok","timestamp":1642490014191,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"S6qJMVlDnDqS","outputId":"9ab87be9-9c6e-4c0f-a171-c25bef3681ad"},"outputs":[{"output_type":"stream","name":"stdout","text":["51906 51906\n"]}],"source":["print(len(test_csv),len(test_jpg))"]},{"cell_type":"code","source":["test_csv_1 = test_csv[:10381]\n","test_jpg_1 = test_jpg[:10381]"],"metadata":{"id":"M013d70mB1S5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"FsRzfvkhmcxX"},"source":["### csv 파일 로드 "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RtSTfTWnmi4s"},"outputs":[],"source":["csv_features = ['내부 온도 1 평균', '내부 온도 1 최고', '내부 온도 1 최저', '내부 습도 1 평균', '내부 습도 1 최고', \n","                '내부 습도 1 최저', '내부 이슬점 평균', '내부 이슬점 최고', '내부 이슬점 최저']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"REz_8XdPnKWK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1642490155151,"user_tz":-540,"elapsed":97340,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"e6084e04-77e7-45ee-8902-d6b7357713b2"},"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 10381/10381 [01:36<00:00, 107.16it/s]\n"]}],"source":["def csv_load(path):\n","    temp = pd.read_csv(path)\n","    temp = np.array(temp[csv_features])\n","    try:\n","      temp = temp.astype(float)\n","    except:\n","      temp[temp=='-']=0.\n","      temp = temp.astype(float)\n","    temp = cv2.resize(temp, dsize = (9,294))\n","    return temp\n","\n","test_csvs = [csv_load(k) for k in tqdm(test_csv_1)]\n","test_csvs = np.array(test_csvs)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A6qy_bbApZGf"},"outputs":[],"source":["test_csvs = np.array(test_csvs)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":396,"status":"ok","timestamp":1642490699049,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"CoruIg0HpcMO","outputId":"c8ce26a2-54d9-4b9a-f65e-dedbd2eadb0a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10381, 294, 9)"]},"metadata":{},"execution_count":87}],"source":["test_csvs.shape"]},{"cell_type":"markdown","metadata":{"id":"9Bm7f9rcpcPA"},"source":["###이미지 데이터 로드 "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2IAuLIHQplkb"},"outputs":[],"source":["def img_load(path):\n","    img = cv2.imread(path)[:,:,::-1]\n","    img = cv2.resize(img, (224, 224))\n","    return img\n","\n","test_jpgs = [img_load(k) for k in tqdm(test_jpg_1)]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qIX6TI27pcR0"},"outputs":[],"source":["test_jpgs = np.array(test_jpgs)"]},{"cell_type":"markdown","source":["## 전처리"],"metadata":{"id":"nCHqhTPErpzY"}},{"cell_type":"code","source":["test_jpgs = efficientnet.preprocess_input(test_jpgs)"],"metadata":{"id":"uRKV87uLrqjv"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Phase1 모델 학습 "],"metadata":{"id":"FJWIxMoIrmcE"}},{"cell_type":"code","source":["test_jpgs.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"su5e0pHdEPU-","executionInfo":{"status":"ok","timestamp":1642490594763,"user_tz":-540,"elapsed":577,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"219ffb71-bd93-461b-fa60-19865c386a55"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10381, 224, 224, 3)"]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["y_1 = phase1_model.predict(test_jpgs)"],"metadata":{"id":"04du_aW3ropX"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 학습 후 처리"],"metadata":{"id":"OW7GzqX1CwzM"}},{"cell_type":"code","source":["y_1.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3do1ghVnEc5i","executionInfo":{"status":"ok","timestamp":1642490617777,"user_tz":-540,"elapsed":440,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"ce6d2c19-0f9f-4eff-972c-a8a6e9f99b70"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10381, 6)"]},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["predicted_crop = np.argmax(y_1,axis=1)"],"metadata":{"id":"Wwf4x9YdEdtN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Phase2 모델 학습"],"metadata":{"id":"QGDlv5upDwDM"}},{"cell_type":"code","source":["set(predicted_crop)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CkiiJka_Eiqg","executionInfo":{"status":"ok","timestamp":1642490641525,"user_tz":-540,"elapsed":433,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"ce4f6856-5b78-4e5f-851f-fde74971ce28"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{0, 1, 2, 3, 4, 5}"]},"metadata":{},"execution_count":86}]},{"cell_type":"code","source":["print(test_csvs.shape,test_jpgs.shape,predicted_crop.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wNZlewNgEz7T","executionInfo":{"status":"ok","timestamp":1642490749218,"user_tz":-540,"elapsed":419,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"26a8d586-412e-4e36-9746-8c07e967042f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(10381, 294, 9) (10381, 224, 224, 3) (10381,)\n"]}]},{"cell_type":"code","source":["# y_ = phase2_model.predict([test_envs,test_imgs,test_crops])\n","y_2 = phase2_model.predict([test_csvs,test_jpgs,predicted_crop])"],"metadata":{"id":"TpaTU09yEkwz"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 학습 후 처리"],"metadata":{"id":"So2gO7F1D0wk"}},{"cell_type":"code","source":["predicted_diseases = np.argmax(y_2,axis=1)"],"metadata":{"id":"ZC83wu6tFDrR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["predicted_diseases.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CJ5qD0k8FG5b","executionInfo":{"status":"ok","timestamp":1642490792256,"user_tz":-540,"elapsed":436,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"d4b0a1f3-924f-47cb-95e2-e40db5e449b0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10381,)"]},"metadata":{},"execution_count":94}]},{"cell_type":"markdown","source":["## Phase3 모델 학습"],"metadata":{"id":"rGTxesHQD2pj"}},{"cell_type":"code","source":["y_3 = phase3_model.predict([test_csvs,test_jpgs,predicted_crop,predicted_diseases])"],"metadata":{"id":"nGyiHWtpFK68"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 학습 후 처리"],"metadata":{"id":"Y-47QIvPD2pj"}},{"cell_type":"code","source":["predicted_risk = np.argmax(y_3,axis=1)"],"metadata":{"id":"9NePHZ7_FPKB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["predicted_risk.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H9MzqPg3FVOr","executionInfo":{"status":"ok","timestamp":1642490854129,"user_tz":-540,"elapsed":398,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"2b2d512d-371e-4e54-bf50-8f7fe7164a15"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10381,)"]},"metadata":{},"execution_count":97}]},{"cell_type":"markdown","source":["## 학습 된 데이터 통합"],"metadata":{"id":"lmnshJT8FY6l"}},{"cell_type":"code","source":["df1 = pd.DataFrame([predicted_crop,predicted_diseases,predicted_risk]).T\n","df1.columns = ['crop','disease','risk']"],"metadata":{"id":"bIQjWMktFb5U"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ZcGoWTMnFryN","executionInfo":{"status":"ok","timestamp":1642490961863,"user_tz":-540,"elapsed":823,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"5ceb9e4f-d175-456e-dd77-7e0ea8435193"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-1cf67356-38a1-479c-a293-d6ab6a09c5c9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>crop</th>\n","      <th>disease</th>\n","      <th>risk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>11</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1cf67356-38a1-479c-a293-d6ab6a09c5c9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1cf67356-38a1-479c-a293-d6ab6a09c5c9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1cf67356-38a1-479c-a293-d6ab6a09c5c9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   crop  disease  risk\n","0     6        0     0\n","1     5        9     1\n","2     4        0     0\n","3     3        0     0\n","4     3       11     1"]},"metadata":{},"execution_count":104}]},{"cell_type":"markdown","source":["## risk, crop 타입변경"],"metadata":{"id":"jAb3pBOmHg5r"}},{"cell_type":"code","source":["df1['crop'] = df1['crop'].apply(lambda x:str(x))\n","df1['risk'] = df1['risk'].apply(lambda x:str(x))"],"metadata":{"id":"33Qsn5pnHhrw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"kbOd12UhHtE7"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### crop range 변경 "],"metadata":{"id":"hHurg4n5Bk8_"}},{"cell_type":"code","source":["df1['crop'] = df1['crop'].apply(lambda x:x+1) #crop 1~6을 0~5로 바꿧던거 원복 "],"metadata":{"id":"I8YxnyyABrHG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### disease 디코딩"],"metadata":{"id":"svgJvJGeBnDd"}},{"cell_type":"code","source":["disease_decoding = {value:key for key,value in zip(disease_unique, range(len(disease_unique)))}"],"metadata":{"id":"2M9TRzu4F4zn"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ozUtdN5MEI-C"},"outputs":[],"source":["df1['decoded_disease'] = df1['disease'].apply(lambda x: disease_decoding[x])\n","df1['label'] = df1['crop'] +'_'+ df1['decoded_disease'] +'_'+ df1['risk']"]},{"cell_type":"code","source":[""],"metadata":{"id":"rUZWgDFvGxHX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"f485XBwqHxhs","executionInfo":{"status":"ok","timestamp":1642491487359,"user_tz":-540,"elapsed":435,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"3d4ae114-b152-4e83-dd8e-3416fc4e79c5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-40d1062c-3d46-4f0a-b16b-21dbda6f20cc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>crop</th>\n","      <th>disease</th>\n","      <th>risk</th>\n","      <th>decoded_disease</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>00</td>\n","      <td>6_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>b6</td>\n","      <td>5_b6_1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>00</td>\n","      <td>4_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>00</td>\n","      <td>3_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>b8</td>\n","      <td>3_b8_1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40d1062c-3d46-4f0a-b16b-21dbda6f20cc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-40d1062c-3d46-4f0a-b16b-21dbda6f20cc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-40d1062c-3d46-4f0a-b16b-21dbda6f20cc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["  crop  disease risk decoded_disease   label\n","0    6        0    0              00  6_00_0\n","1    5        9    1              b6  5_b6_1\n","2    4        0    0              00  4_00_0\n","3    3        0    0              00  3_00_0\n","4    3       11    1              b8  3_b8_1"]},"metadata":{},"execution_count":137}]},{"cell_type":"markdown","source":["# Phase 5 - Phase 4 통합 "],"metadata":{"id":"ciklASJWIFCU"}},{"cell_type":"code","source":["test_csv = sorted(glob('test/*/*.csv'))\n","test_jpg = sorted(glob('test/*/*.jpg'))"],"metadata":{"id":"tY_2ayckIHA4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["i = 10381\n","pred_csv_1 = np.array(test_csv[:i])\n","pred_jpg_1 = np.array(test_jpg[:i])\n","\n","pred_csv_2 = np.array(test_csv[i:i*2])\n","pred_jpg_2 = np.array(test_jpg[i:i*2])\n","\n","pred_csv_3 = np.array(test_csv[i*2:i*3])\n","pred_jpg_3 = np.array(test_jpg[i*2:i*3])\n","\n","pred_csv_4 = np.array(test_csv[i*3:i*4])\n","pred_jpg_4 = np.array(test_jpg[i*3:i*4])\n","\n","pred_csv_5 = np.array(test_csv[i*4:])\n","pred_jpg_5 = np.array(test_jpg[i*4:])"],"metadata":{"id":"UdvAAtkeILyk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(pred_csv_1.shape,pred_csv_2.shape,pred_csv_3.shape,pred_csv_4.shape,pred_csv_5.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xsZMKJjzIl5D","executionInfo":{"status":"ok","timestamp":1642494473050,"user_tz":-540,"elapsed":399,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"f9d506bd-a510-4f44-8dba-d80ad1a94a55"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(10381,) (10381,) (10381,) (10381,) (10382,)\n"]}]},{"cell_type":"markdown","source":["사전 설정"],"metadata":{"id":"_h5DkGsLJGhX"}},{"cell_type":"code","source":["csv_features = ['내부 온도 1 평균', '내부 온도 1 최고', '내부 온도 1 최저', '내부 습도 1 평균', '내부 습도 1 최고', \n","                '내부 습도 1 최저', '내부 이슬점 평균', '내부 이슬점 최고', '내부 이슬점 최저']"],"metadata":{"id":"qyRiMBOmJH2F"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["disease_decoding"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hcMsWQ9kJKE1","executionInfo":{"status":"ok","timestamp":1642491855521,"user_tz":-540,"elapsed":445,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"9d49d231-1e69-4b53-8647-fce586efa751"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{0: '00',\n"," 1: 'a11',\n"," 2: 'a12',\n"," 3: 'a5',\n"," 4: 'a7',\n"," 5: 'a9',\n"," 6: 'b3',\n"," 7: 'b4',\n"," 8: 'b5',\n"," 9: 'b6',\n"," 10: 'b7',\n"," 11: 'b8'}"]},"metadata":{},"execution_count":145}]},{"cell_type":"code","source":["i=1\n","exec(f'jpg_source = pred_csv_{i}')"],"metadata":{"id":"LKLwY2J6NI5d"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["len(jpg_source)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LdX60CXNNN5D","executionInfo":{"status":"ok","timestamp":1642493033089,"user_tz":-540,"elapsed":585,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"1f579ac6-ee14-425c-fffa-f70187843d9f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10381"]},"metadata":{},"execution_count":163}]},{"cell_type":"code","source":["#이미지 파일 로드 \n","for i in range(1,6):\n","  exec(f'jpg_source = pred_jpg_{i}')\n","  exec(f'csv_source = pred_csv_{i}')\n","\n","  def img_load(path):\n","      img = cv2.imread(path)[:,:,::-1]\n","      img = cv2.resize(img, (224, 224))\n","      return img\n","\n","  pred_jpgs = [img_load(k) for k in tqdm(jpg_source)]\n","  pred_jpgs = np.array(pred_jpgs)\n","  pred_jpgs = efficientnet.preprocess_input(pred_jpgs)\n","\n","  #csv 파일 로드 \n","\n","  def csv_load(path):\n","      temp = pd.read_csv(path)\n","      temp = np.array(temp[csv_features])\n","      try:\n","        temp = temp.astype(float)\n","      except:\n","        temp[temp=='-']=0.\n","        temp = temp.astype(float)\n","      temp = cv2.resize(temp, dsize = (9,294))\n","      return temp\n","\n","  pred_csvs = [csv_load(k) for k in tqdm(csv_source)]\n","  pred_csvs = np.array(pred_csvs)\n","\n","  #학습 \n","\n","  y_1 = phase1_model.predict(pred_jpgs)\n","  predicted_crop = np.argmax(y_1,axis=1)\n","\n","  y_2 = phase2_model.predict([pred_csvs,pred_jpgs,predicted_crop])\n","  predicted_diseases = np.argmax(y_2,axis=1)\n","\n","  y_3 = phase3_model.predict([pred_csvs,pred_jpgs,predicted_crop,predicted_diseases])\n","  predicted_risk = np.argmax(y_3,axis=1)\n","\n","  #df 통합 \n","  temp_df = pd.DataFrame([predicted_crop,predicted_diseases,predicted_risk]).T\n","  temp_df.columns = ['crop','disease','risk']\n","\n","  #통합 후 처리 \n","  ## crop, risk 타입 변경 \n","  temp_df['crop'] = temp_df['crop'].apply(lambda x:str(x))\n","  temp_df['risk'] = temp_df['risk'].apply(lambda x:str(x))\n","\n","\n","  #disease 디코딩 \n","  temp_df['decoded_disease'] = temp_df['disease'].apply(lambda x: disease_decoding[x])\n","  temp_df['label'] = temp_df['crop'] +'_'+ temp_df['decoded_disease'] +'_'+ temp_df['risk']\n","\n","  exec(f'df{i} = temp_df')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_Y7zPxrWI6Df","executionInfo":{"status":"ok","timestamp":1642495644162,"user_tz":-540,"elapsed":239017,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"3b9981e2-f038-4234-8482-97530efe6582"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 10381/10381 [01:14<00:00, 140.03it/s]\n","100%|██████████| 10381/10381 [01:33<00:00, 111.47it/s]\n"," 15%|█▌        | 1608/10381 [44:39<4:03:39,  1.67s/it]\n","100%|██████████| 10381/10381 [01:12<00:00, 143.87it/s]\n","100%|██████████| 10381/10381 [01:31<00:00, 112.95it/s]\n","100%|██████████| 10381/10381 [01:11<00:00, 145.78it/s]\n","100%|██████████| 10381/10381 [01:31<00:00, 113.82it/s]\n","100%|██████████| 10381/10381 [01:12<00:00, 143.33it/s]\n","100%|██████████| 10381/10381 [01:30<00:00, 114.84it/s]\n","100%|██████████| 10382/10382 [01:12<00:00, 143.34it/s]\n","100%|██████████| 10382/10382 [01:32<00:00, 112.10it/s]\n"]}]},{"cell_type":"code","source":["print(len(df1),len(df2),len(df3),len(df4),len(df5))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QgO30e4QM_wu","executionInfo":{"status":"ok","timestamp":1642495748243,"user_tz":-540,"elapsed":421,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"47e8453f-4432-4af7-b3f8-43d38e9806d4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10381 10381 10381 10381 10382\n"]}]},{"cell_type":"code","source":["df1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"u21jDxyNSvY7","executionInfo":{"status":"ok","timestamp":1642495753280,"user_tz":-540,"elapsed":521,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"bb914365-afef-4752-9f6d-87d4c4a35df7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-8d6074df-df8d-4ef7-80ef-849bc46a614b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>crop</th>\n","      <th>disease</th>\n","      <th>risk</th>\n","      <th>decoded_disease</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>00</td>\n","      <td>5_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>b6</td>\n","      <td>4_b6_1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>00</td>\n","      <td>3_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>00</td>\n","      <td>2_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>b8</td>\n","      <td>2_b8_1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8d6074df-df8d-4ef7-80ef-849bc46a614b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8d6074df-df8d-4ef7-80ef-849bc46a614b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8d6074df-df8d-4ef7-80ef-849bc46a614b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["  crop  disease risk decoded_disease   label\n","0    5        0    0              00  5_00_0\n","1    4        9    1              b6  4_b6_1\n","2    3        0    0              00  3_00_0\n","3    2        0    0              00  2_00_0\n","4    2       11    1              b8  2_b8_1"]},"metadata":{},"execution_count":189}]},{"cell_type":"code","source":["df2.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"yTHFDaCpSvyl","executionInfo":{"status":"ok","timestamp":1642495761057,"user_tz":-540,"elapsed":405,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"7937e902-ddb7-401a-b417-0e8784e10ddf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-648ee59c-7dd7-4c63-80b8-79665b91e65d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>crop</th>\n","      <th>disease</th>\n","      <th>risk</th>\n","      <th>decoded_disease</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>00</td>\n","      <td>0_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>00</td>\n","      <td>2_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>00</td>\n","      <td>2_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>00</td>\n","      <td>2_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>a5</td>\n","      <td>1_a5_2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-648ee59c-7dd7-4c63-80b8-79665b91e65d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-648ee59c-7dd7-4c63-80b8-79665b91e65d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-648ee59c-7dd7-4c63-80b8-79665b91e65d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["  crop  disease risk decoded_disease   label\n","0    0        0    0              00  0_00_0\n","1    2        0    0              00  2_00_0\n","2    2        0    0              00  2_00_0\n","3    2        0    0              00  2_00_0\n","4    1        3    2              a5  1_a5_2"]},"metadata":{},"execution_count":190}]},{"cell_type":"code","source":["df3.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"e_-URhdpTTGk","executionInfo":{"status":"ok","timestamp":1642495764241,"user_tz":-540,"elapsed":3,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"1ea80df0-d929-48d2-b1c0-f88b75d745c9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-f3c79768-fd40-4538-9cfd-2bbaf050c238\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>crop</th>\n","      <th>disease</th>\n","      <th>risk</th>\n","      <th>decoded_disease</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>b8</td>\n","      <td>4_b8_1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>00</td>\n","      <td>5_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>00</td>\n","      <td>2_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>00</td>\n","      <td>5_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>b6</td>\n","      <td>2_b6_1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3c79768-fd40-4538-9cfd-2bbaf050c238')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f3c79768-fd40-4538-9cfd-2bbaf050c238 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f3c79768-fd40-4538-9cfd-2bbaf050c238');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["  crop  disease risk decoded_disease   label\n","0    4       11    1              b8  4_b8_1\n","1    5        0    0              00  5_00_0\n","2    2        0    0              00  2_00_0\n","3    5        0    0              00  5_00_0\n","4    2        9    1              b6  2_b6_1"]},"metadata":{},"execution_count":191}]},{"cell_type":"markdown","source":["## submission"],"metadata":{"id":"JQv08PrPYJEQ"}},{"cell_type":"code","source":["submission = pd.read_csv('/content/sample_submission.csv')"],"metadata":{"id":"RXgG83CDYJsg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["i = 10381\n","submission[:10381]['label'] = df1['label']\n","submission[10381:10381*2]['label'] = df2['label']\n","submission[10381*2:10381*3]['label'] = df3['label']\n","submission[10381*3:10381*4]['label'] = df4['label']\n","submission[10381*4:]['label'] = df5['label']\n"],"metadata":{"id":"qlWctwP5YMWH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["submission['label'][:i] =df1['label']\n","submission['label'][i:i*2] = df2['label']\n","submission['label'][i*2:i*3] = df3['label']\n","submission['label'][i*3:i*4] = df4['label']\n","submission['label'][i*4:] = df5['label']"],"metadata":{"id":"aCpKNs6mYYCQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["submission.to_csv('submissionl.csv')"],"metadata":{"id":"Mpjdj-uQYtmV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.hist(submission['label'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":166},"id":"11_H-K5iaDDt","executionInfo":{"status":"error","timestamp":1642496579665,"user_tz":-540,"elapsed":415,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"61277124-44e2-421c-da22-6128cc803c9e"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-9a2d3d4cc28b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msubmission\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'label'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'plt' is not defined"]}]}]}