{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"22.01.24_Ver1_작물병해_csv사이즈_144","provenance":[{"file_id":"1DZXpP0vDhbmiOtNQ2HdGAbRcj-Ktt5fw","timestamp":1642995953705},{"file_id":"1IwQ_PgYuzU-0uJguU1z3CQgG7mDo01-K","timestamp":1642642447462}],"collapsed_sections":[],"machine_shape":"hm","mount_file_id":"1DZXpP0vDhbmiOtNQ2HdGAbRcj-Ktt5fw","authorship_tag":"ABX9TyPw8BN8Rl1wEAXRf1hruL4p"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["# 사전 준비 "],"metadata":{"id":"ETxqJYy-l0gL"}},{"cell_type":"markdown","metadata":{"id":"Ab8zJIYh-fgL"},"source":["##데이터 호출 "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":148403,"status":"ok","timestamp":1642990637486,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"fJThLClH-hr9","outputId":"aee480bc-201b-460f-a4bf-6a7ec9ed21a1"},"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  /content/drive/MyDrive/DataSet/작물병해/data.zip\n","  inflating: sample_submission.csv   \n","  inflating: test.zip                \n","  inflating: train.csv               \n","  inflating: train.zip               \n"]}],"source":["!unzip /content/drive/MyDrive/DataSet/작물병해/data.zip"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1-0ubyia_1Nu"},"outputs":[],"source":["!unzip train.zip"]},{"cell_type":"markdown","metadata":{"id":"Zo0y4tau_V4E"},"source":["## 모듈 임포트"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dRznw7f2_XCs"},"outputs":[],"source":["import pandas as pd \n","import numpy as np \n","import matplotlib.pyplot as plt \n","import os\n","import cv2 \n","from glob import glob\n","from tqdm import tqdm\n","import json"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"820F_6HCb9-1"},"outputs":[],"source":["from tensorflow.keras import Sequential\n","from tensorflow.keras import optimizers\n","from tensorflow.keras.layers import BatchNormalization\n","from tensorflow.keras.layers import Conv2D\n","from tensorflow.keras.layers import MaxPooling2D\n","from tensorflow.keras.layers import Activation\n","from tensorflow.keras.layers import Dropout\n","from tensorflow.keras.layers import Dense\n","from tensorflow.keras.layers import Flatten\n","from tensorflow.keras.layers import Input\n","from tensorflow.keras import Model\n","from tensorflow.keras.layers import concatenate\n","from tensorflow.keras.applications import resnet50, efficientnet\n","from tensorflow.keras.applications import ResNet50, EfficientNetB0\n","from tensorflow.keras.layers import Bidirectional, LSTM, GRU"]},{"cell_type":"markdown","metadata":{"id":"MM2kasZcgPEq"},"source":["# 데이터 로드"]},{"cell_type":"markdown","metadata":{"id":"1fg7KDK2gRuo"},"source":["## 디렉토리 로드"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lfYFmBZyHZEh"},"outputs":[],"source":["train_csv = sorted(glob('train/*/*.csv'))\n","train_jpg = sorted(glob('train/*/*.jpg'))\n","train_json = sorted(glob('train/*/*.json'))"]},{"cell_type":"markdown","metadata":{"id":"28xaif_JgT0P"},"source":["## json 파일 로드"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hQmRd8iLH6GH"},"outputs":[],"source":["crops = []\n","diseases = []\n","risks = []\n","labels = []\n","\n","for i in range(len(train_json)):\n","    with open(train_json[i], 'r') as f:\n","        sample = json.load(f)\n","        crop = sample['annotations']['crop']\n","        disease = sample['annotations']['disease']\n","        risk = sample['annotations']['risk']\n","        label=f\"{crop}_{disease}_{risk}\"\n","    \n","        crops.append(crop)\n","        diseases.append(disease)\n","        risks.append(risk)\n","        labels.append(label)\n","        \n","label_unique = sorted(np.unique(labels))\n","label_unique = {key:value for key,value in zip(label_unique, range(len(label_unique)))}\n","\n","labels = [label_unique[k] for k in labels]"]},{"cell_type":"code","source":["plt.subplot(2,1,1)\n","plt.hist(diseases)\n","plt.subplot(2,1,2)\n","plt.hist(labels)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"jLgMwRZcEUbH","executionInfo":{"status":"ok","timestamp":1642991430409,"user_tz":-540,"elapsed":670,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"a2ad0365-6bc7-40e6-87c5-09bd01946f09"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["len(set(labels))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xRBw91zKQavt","executionInfo":{"status":"ok","timestamp":1642991432747,"user_tz":-540,"elapsed":373,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"607665cb-2952-4fff-c9a6-39e1cb63e2a6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["25"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","metadata":{"id":"e2knImhRgc6n"},"source":["## 이미지 로드 "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":30534,"status":"ok","timestamp":1642991464308,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"JWCW1qcEgdyK","outputId":"ae1d820b-e7fd-4f9e-e076-44cf956fc44e"},"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 5767/5767 [00:30<00:00, 189.33it/s]\n"]}],"source":["def img_load(path):\n","    img = cv2.imread(path)\n","    img = cv2.resize(img, (224, 224))\n","    return img\n","\n","imgs = [img_load(k) for k in tqdm(train_jpg)]"]},{"cell_type":"markdown","source":["## CSV 로드"],"metadata":{"id":"qdm0AliZ6TZK"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"155mYE2Rs0hq"},"outputs":[],"source":["csv_features = ['내부 온도 1 평균', '내부 온도 1 최고', '내부 온도 1 최저', '내부 습도 1 평균', '내부 습도 1 최고', \n","               '내부 습도 1 최저', '내부 이슬점 평균', '내부 이슬점 최고', '내부 이슬점 최저']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mYKt9__jtFDC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1642991522914,"user_tz":-540,"elapsed":51077,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"92ecf76e-abc6-4c82-a2df-a182d47c05b4"},"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 5767/5767 [00:50<00:00, 113.10it/s]\n"]}],"source":["def csv_load(path):\n","    temp = pd.read_csv(path)\n","    temp = np.array(temp[csv_features])\n","    try:\n","      temp = temp.astype(float)\n","    except:\n","      temp[temp=='-']=0.\n","      temp = temp.astype(float)\n","    temp = cv2.resize(temp, dsize = (9,144))\n","    return temp\n","\n","csvs = [csv_load(k) for k in tqdm(train_csv)]\n","csvs = np.array(csvs)"]},{"cell_type":"code","source":["csvs.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"umlFY5f_YrHL","executionInfo":{"status":"ok","timestamp":1642991532755,"user_tz":-540,"elapsed":254,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"2ec2efcc-b74a-4929-aa7a-be3348d6a0c4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5767, 144, 9)"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","metadata":{"id":"xnyaO2aVB5o7"},"source":["# 전처리 "]},{"cell_type":"markdown","source":["## Augmentation"],"metadata":{"id":"ql54OSOEkUN5"}},{"cell_type":"markdown","source":["이미지"],"metadata":{"id":"7wEIHCaxkWaB"}},{"cell_type":"code","source":["def rotate_img(img, degree):\n","  if degree == 90:\n","    return_img = cv2.rotate(img,cv2.ROTATE_90_CLOCKWISE)\n","  if degree == 180:\n","    return_img = cv2.rotate(img, cv2.ROTATE_180)\n","  if degree == 270:\n","    return_img = cv2.rotate(img, cv2.ROTATE_90_COUNTERCLOCKWISE)\n","  return return_img"],"metadata":{"id":"vW-hVckAlKpJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["imgs_90 = [rotate_img(k,90) for k in tqdm(imgs)]\n","imgs_180 = [rotate_img(k,180) for k in tqdm(imgs)]\n","imgs_270 = [rotate_img(k,270) for k in tqdm(imgs)]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ke36B8nYlouT","executionInfo":{"status":"ok","timestamp":1642991540195,"user_tz":-540,"elapsed":3536,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"8290a65f-260f-4a6c-d1c4-465c24aa0e02"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 5767/5767 [00:01<00:00, 3722.39it/s]\n","100%|██████████| 5767/5767 [00:01<00:00, 4926.05it/s]\n","100%|██████████| 5767/5767 [00:01<00:00, 5740.90it/s]\n"]}]},{"cell_type":"code","source":["augmented_imgs = np.concatenate([imgs,imgs_90,imgs_180,imgs_270])\n","augmented_csvs = np.concatenate([csvs,csvs,csvs,csvs])\n","augmented_labels = np.concatenate([labels,labels,labels,labels])"],"metadata":{"id":"pzolO5VumANQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(augmented_imgs.shape,augmented_csvs.shape,augmented_labels.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LW1nWbxwmjHf","executionInfo":{"status":"ok","timestamp":1642991544141,"user_tz":-540,"elapsed":4,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"8f1060f4-cd05-451a-bdab-eca8b7a55f16"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(23068, 224, 224, 3) (23068, 144, 9) (23068,)\n"]}]},{"cell_type":"code","source":["del imgs, imgs_180, imgs_270, imgs_90, csvs, labels #메모리 관리 "],"metadata":{"id":"QiyZo1PM-0O-"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 믹싱"],"metadata":{"id":"acZdrHKl5HEc"}},{"cell_type":"code","source":["index = np.arange(len(augmented_imgs))\n","np.random.shuffle(index)"],"metadata":{"id":"ZP6P8geBmeG3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["augmented_labels = augmented_labels[index]\n","augmented_csvs = augmented_csvs[index]\n","augmented_imgs = augmented_imgs[index]"],"metadata":{"id":"ThPx8mjnmoU_"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X37B66Jaf4lc"},"outputs":[],"source":["augmented_imgs = efficientnet.preprocess_input(augmented_imgs)"]},{"cell_type":"code","source":["print(augmented_imgs.shape,augmented_csvs.shape,augmented_labels.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RDgoiDGqpK5-","executionInfo":{"status":"ok","timestamp":1642991561026,"user_tz":-540,"elapsed":4,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"000bec9f-646b-4efd-85dc-a5cadeeefd14"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(23068, 224, 224, 3) (23068, 144, 9) (23068,)\n"]}]},{"cell_type":"markdown","source":["## 트레인 - 테스트 분할"],"metadata":{"id":"1UjzrSTEgpyU"}},{"cell_type":"code","source":["index = int(len(augmented_csvs)*0.8)\n","train_imgs = augmented_imgs[:index]\n","test_imgs = augmented_imgs[index:]\n","\n","train_csvs = augmented_csvs[:index]\n","test_csvs = augmented_csvs[index:]\n","\n","train_labels = augmented_labels[:index]\n","test_labels = augmented_labels[index:]"],"metadata":{"id":"6H6dgkHogrt5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(train_imgs.shape, train_csvs.shape, train_labels.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XWOB89p8hBJh","executionInfo":{"status":"ok","timestamp":1642991566391,"user_tz":-540,"elapsed":3,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"9a0c40bc-fd9b-4123-c015-89eb63508cb3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(18454, 224, 224, 3) (18454, 144, 9) (18454,)\n"]}]},{"cell_type":"markdown","source":["# 모델링"],"metadata":{"id":"rTyk92b5P2WW"}},{"cell_type":"markdown","source":["## 모델 "],"metadata":{"id":"W3XLNj8uRL1N"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"2Ujo-_ObRSrv"},"outputs":[],"source":["conv_layers = EfficientNetB0(weights='imagenet', include_top=False, input_shape=(224, 224, 3))\n","conv_layers.trainable = False"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fqwYWJadRSrv"},"outputs":[],"source":["#Env 데이터 파트 \n","Env_input = Input((144,9)) #<---- shape \n","x = Bidirectional(LSTM(128,return_sequences= True))(Env_input) #bidirec\n","x = Bidirectional(LSTM(128))(x)\n","x = Flatten()(x)\n","x = BatchNormalization()(x)\n","x = Dense(64, activation ='relu')(x)\n","x = BatchNormalization()(x)\n","x = Dense(32, activation ='relu')(x)\n","x = BatchNormalization()(x)\n","Env_output = Dense(10 ,activation='linear')(x)\n","\n","#iamge 데이터 파트 \n","image_input = Input((224,224,3))\n","x = conv_layers(image_input)\n","x = Flatten()(x)\n","x = BatchNormalization()(x)\n","x = Dense(64, activation='relu')(x)\n","x = BatchNormalization()(x)\n","x = Dense(32, activation='relu')(x)\n","x = BatchNormalization()(x)\n","image_output = Dense(10, activation='linear')(x)\n","\n","#헤드 결합 \n","combined_input = concatenate([Env_output,image_output])\n","x= Dense(64, activation = 'relu')(combined_input) #<--- Dense \n","x = BatchNormalization()(x)\n","x= Dense(32, activation = 'relu')(x) #<--- Dense \n","x = BatchNormalization()(x)\n","output = Dense(25,activation = 'softmax')(x)\n","\n","label_model = Model([Env_input,image_input],output)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":965,"status":"ok","timestamp":1642991580701,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"outputId":"db61d547-5da0-49f9-e921-632cf9b24354","id":"xcCEc1EfRSrv"},"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":25}],"source":["#모델 설계 구조 \n","import tensorflow \n","tensorflow.keras.utils.plot_model(label_model)"]},{"cell_type":"code","source":["#optimizer leraning rate 조절 \n","adam = optimizers.Adam(learning_rate = 0.0005)"],"metadata":{"id":"adBroCJict_C"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"k_HX9oN1RSrw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1642991606943,"user_tz":-540,"elapsed":3,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"cdd5c3e9-b198-49b7-8fa5-f6e63c46fe13"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_1\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," input_4 (InputLayer)           [(None, 144, 9)]     0           []                               \n","                                                                                                  \n"," bidirectional_2 (Bidirectional  (None, 144, 256)    141312      ['input_4[0][0]']                \n"," )                                                                                                \n","                                                                                                  \n"," input_5 (InputLayer)           [(None, 224, 224, 3  0           []                               \n","                                )]                                                                \n","                                                                                                  \n"," bidirectional_3 (Bidirectional  (None, 256)         394240      ['bidirectional_2[0][0]']        \n"," )                                                                                                \n","                                                                                                  \n"," efficientnetb0 (Functional)    (None, 7, 7, 1280)   4049571     ['input_5[0][0]']                \n","                                                                                                  \n"," flatten_2 (Flatten)            (None, 256)          0           ['bidirectional_3[0][0]']        \n","                                                                                                  \n"," flatten_3 (Flatten)            (None, 62720)        0           ['efficientnetb0[1][0]']         \n","                                                                                                  \n"," batch_normalization_8 (BatchNo  (None, 256)         1024        ['flatten_2[0][0]']              \n"," rmalization)                                                                                     \n","                                                                                                  \n"," batch_normalization_11 (BatchN  (None, 62720)       250880      ['flatten_3[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," dense_9 (Dense)                (None, 64)           16448       ['batch_normalization_8[0][0]']  \n","                                                                                                  \n"," dense_12 (Dense)               (None, 64)           4014144     ['batch_normalization_11[0][0]'] \n","                                                                                                  \n"," batch_normalization_9 (BatchNo  (None, 64)          256         ['dense_9[0][0]']                \n"," rmalization)                                                                                     \n","                                                                                                  \n"," batch_normalization_12 (BatchN  (None, 64)          256         ['dense_12[0][0]']               \n"," ormalization)                                                                                    \n","                                                                                                  \n"," dense_10 (Dense)               (None, 32)           2080        ['batch_normalization_9[0][0]']  \n","                                                                                                  \n"," dense_13 (Dense)               (None, 32)           2080        ['batch_normalization_12[0][0]'] \n","                                                                                                  \n"," batch_normalization_10 (BatchN  (None, 32)          128         ['dense_10[0][0]']               \n"," ormalization)                                                                                    \n","                                                                                                  \n"," batch_normalization_13 (BatchN  (None, 32)          128         ['dense_13[0][0]']               \n"," ormalization)                                                                                    \n","                                                                                                  \n"," dense_11 (Dense)               (None, 10)           330         ['batch_normalization_10[0][0]'] \n","                                                                                                  \n"," dense_14 (Dense)               (None, 10)           330         ['batch_normalization_13[0][0]'] \n","                                                                                                  \n"," concatenate_1 (Concatenate)    (None, 20)           0           ['dense_11[0][0]',               \n","                                                                  'dense_14[0][0]']               \n","                                                                                                  \n"," dense_15 (Dense)               (None, 64)           1344        ['concatenate_1[0][0]']          \n","                                                                                                  \n"," batch_normalization_14 (BatchN  (None, 64)          256         ['dense_15[0][0]']               \n"," ormalization)                                                                                    \n","                                                                                                  \n"," dense_16 (Dense)               (None, 32)           2080        ['batch_normalization_14[0][0]'] \n","                                                                                                  \n"," batch_normalization_15 (BatchN  (None, 32)          128         ['dense_16[0][0]']               \n"," ormalization)                                                                                    \n","                                                                                                  \n"," dense_17 (Dense)               (None, 25)           825         ['batch_normalization_15[0][0]'] \n","                                                                                                  \n","==================================================================================================\n","Total params: 8,877,840\n","Trainable params: 4,701,741\n","Non-trainable params: 4,176,099\n","__________________________________________________________________________________________________\n"]}],"source":["#학습 방식은 동일 \n","label_model.compile(optimizer=adam, loss=\"sparse_categorical_crossentropy\",metrics = ['accuracy'],)\n","label_model.summary() #optimizer tuning"]},{"cell_type":"code","source":["# copy from https://gist.github.com/stared/dfb4dfaf6d9a8501cd1cc8b8cb806d2e\n","# loss 실시간 출력 \n","from IPython.display import clear_output\n","from tensorflow.keras.callbacks import Callback\n","\n","class PlotLosses(Callback):\n","\n","  def on_train_begin(self, logs={}):\n","    self.epochs = []\n","    self.losses = []\n","    self.val_losses = []\n","    self.logs = []\n","    self.fig = plt.figure()\n","\n","\n","  def on_epoch_end(self, epoch, logs={}):\n","\n","    self.epochs.append(epoch)\n","    self.losses.append(logs.get('loss'))\n","    self.val_losses.append(logs.get('val_loss'))\n","\n","    clear_output(wait=True)\n","    plt.plot(self.epochs, self.losses, label=\"loss\")\n","    plt.plot(self.epochs, self.val_losses, label=\"val_loss\")\n","    plt.legend()\n","    plt.show();\n","    print(\"loss = \", self.losses[-1], \", val_loss = \", self.val_losses[-1])\n","\n","#call backs 선언\n","plot_losses = PlotLosses()\n","\n","from tensorflow.keras.callbacks import ModelCheckpoint #<- model 저장 객체, best_model.h5라는 모델 이 저장 됨 \n","model_check_point = ModelCheckpoint(\n","    'best_model.h5', \n","    monitor='val_loss', \n","    verbose=1, \n","    save_best_only=True)\n","\n","\n","from tensorflow.keras.callbacks import EarlyStopping\n","early_stopping = EarlyStopping(\n","    monitor='val_loss',  # 모니터링 대상, 이걸 기준으로 멈춤 \n","    verbose=1,\n","    patience=50)         # 중지까지의 여유분\n","\n","from tensorflow.keras.callbacks import ReduceLROnPlateau\n","reduce_lr = ReduceLROnPlateau(\n","    monitor='val_loss', # 모니터링 대상\n","    patience=25,        # 대상ㅃ 기간동안 유지\n","    factor=0.2,         # 줄이는 양                              \n","    min_learning_rate=0.00001)     # 최소 학습율\n","\n","callbacks = [model_check_point, plot_losses, early_stopping, reduce_lr]"],"metadata":{"id":"36CSb5x4pcC1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"uzz5d579RSrw"},"source":["## 학습"]},{"cell_type":"markdown","source":["adam lr 0.0005 + lstm stacked 로 한 경우 18"],"metadata":{"id":"vatQuhPxhaQM"}},{"cell_type":"code","source":["history = label_model.fit([train_csvs,train_imgs],train_labels, epochs=50, verbose=1, batch_size=256, validation_split=0.2,callbacks=callbacks)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"4RkkhNNThZ11","executionInfo":{"status":"ok","timestamp":1642992738750,"user_tz":-540,"elapsed":1128955,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"0e740de1-afb0-42a8-a21d-413a043e132a"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["loss =  0.0020179986022412777 , val_loss =  0.16926750540733337\n","\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r58/58 [==============================] - 22s 378ms/step - loss: 0.0020 - accuracy: 1.0000 - val_loss: 0.1693 - val_accuracy: 0.9548 - lr: 1.0000e-04\n"]}]},{"cell_type":"markdown","source":["## 자체 예측 스코어"],"metadata":{"id":"ph5792w5f7sg"}},{"cell_type":"markdown","source":["adam lr 0.0005로 조정한 경우"],"metadata":{"id":"xq5cffDXf9HB"}},{"cell_type":"code","source":["y_ = label_model.predict([test_csvs,test_imgs])\n","predicted = np.argmax(y_,axis=1)\n","predicted - test_labels"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pga7n5fplxia","executionInfo":{"status":"ok","timestamp":1642993585165,"user_tz":-540,"elapsed":12527,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"040e8ead-f9f6-4ea4-f98f-92004fed93fe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, ..., 0, 0, 0])"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","from sklearn.metrics import confusion_matrix\n","\n","cm = confusion_matrix(test_labels, predicted)\n","print(cm)"],"metadata":{"id":"u3OmGV25mSw5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(classification_report(test_labels, predicted, target_names=['0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24']))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gjCb_zZOmU8R","executionInfo":{"status":"ok","timestamp":1642583480164,"user_tz":-540,"elapsed":264,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"6302f559-cde3-48ab-e38d-d6ddd57997c7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00       636\n","           1       0.99      1.00      1.00       112\n","           2       1.00      0.99      1.00       158\n","           3       1.00      1.00      1.00       924\n","           4       0.59      0.69      0.64       119\n","           5       0.52      0.55      0.53       100\n","           6       0.29      0.10      0.15        39\n","           7       1.00      0.92      0.96       130\n","           8       0.80      0.81      0.81       118\n","           9       1.00      0.99      1.00       125\n","          10       0.81      0.89      0.85       106\n","          11       1.00      1.00      1.00       764\n","          12       1.00      1.00      1.00        45\n","          13       1.00      1.00      1.00        73\n","          14       0.92      0.94      0.93       143\n","          15       1.00      1.00      1.00       106\n","          16       0.89      0.87      0.88       123\n","          17       1.00      1.00      1.00       666\n","          18       0.97      0.97      0.97        34\n","          19       1.00      1.00      1.00        13\n","          20       1.00      1.00      1.00        16\n","          21       1.00      0.95      0.97        20\n","          22       1.00      1.00      1.00        13\n","          23       1.00      1.00      1.00         9\n","          24       0.95      0.95      0.95        22\n","\n","    accuracy                           0.96      4614\n","   macro avg       0.91      0.91      0.91      4614\n","weighted avg       0.96      0.96      0.96      4614\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"GuVLESWBCvfq"},"source":["# submission "]},{"cell_type":"markdown","source":["## 데이터 로드 및 학습 "],"metadata":{"id":"a_E3e1a0eTk7"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"JLo93tBplXtx"},"outputs":[],"source":["!unzip test.zip"]},{"cell_type":"code","source":["label_model = keras.models.load_model('/content/best_model.h5')"],"metadata":{"id":"k4eKPyPMDPBn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_csv = sorted(glob('test/*/*.csv'))\n","test_jpg = sorted(glob('test/*/*.jpg'))"],"metadata":{"id":"tY_2ayckIHA4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["i = 10381\n","pred_csv_1 = np.array(test_csv[:i])\n","pred_jpg_1 = np.array(test_jpg[:i])\n","\n","pred_csv_2 = np.array(test_csv[i:i*2])\n","pred_jpg_2 = np.array(test_jpg[i:i*2])\n","\n","pred_csv_3 = np.array(test_csv[i*2:i*3])\n","pred_jpg_3 = np.array(test_jpg[i*2:i*3])\n","\n","pred_csv_4 = np.array(test_csv[i*3:i*4])\n","pred_jpg_4 = np.array(test_jpg[i*3:i*4])\n","\n","pred_csv_5 = np.array(test_csv[i*4:])\n","pred_jpg_5 = np.array(test_jpg[i*4:])"],"metadata":{"id":"UdvAAtkeILyk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(pred_csv_1.shape,pred_csv_2.shape,pred_csv_3.shape,pred_csv_4.shape,pred_csv_5.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xsZMKJjzIl5D","executionInfo":{"status":"ok","timestamp":1642993664367,"user_tz":-540,"elapsed":269,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"aebcb27b-daa9-4029-8e02-cdce9aab6243"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(10381,) (10381,) (10381,) (10381,) (10382,)\n"]}]},{"cell_type":"markdown","source":["사전 설정"],"metadata":{"id":"_h5DkGsLJGhX"}},{"cell_type":"code","source":["csv_features"],"metadata":{"id":"qyRiMBOmJH2F","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1642993666493,"user_tz":-540,"elapsed":256,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"3e9356d4-a0bf-42f2-83e0-311dbe4b6720"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['내부 온도 1 평균',\n"," '내부 온도 1 최고',\n"," '내부 온도 1 최저',\n"," '내부 습도 1 평균',\n"," '내부 습도 1 최고',\n"," '내부 습도 1 최저',\n"," '내부 이슬점 평균',\n"," '내부 이슬점 최고',\n"," '내부 이슬점 최저']"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["#이미지 파일 로드 \n","for i in range(1,6):\n","  exec(f'jpg_source = pred_jpg_{i}')\n","  exec(f'csv_source = pred_csv_{i}')\n","\n","  def img_load(path):\n","      img = cv2.imread(path)[:,:,::-1]\n","      img = cv2.resize(img, (224, 224))\n","      return img\n","\n","  pred_jpgs = [img_load(k) for k in tqdm(jpg_source)]\n","  pred_jpgs = np.array(pred_jpgs)\n","  pred_jpgs = efficientnet.preprocess_input(pred_jpgs)\n","\n","  #csv 파일 로드 \n","\n","  def csv_load(path):\n","      temp = pd.read_csv(path)\n","      temp = np.array(temp[csv_features])\n","      try:\n","        temp = temp.astype(float)\n","      except:\n","        temp[temp=='-']=0.\n","        temp = temp.astype(float)\n","      temp = cv2.resize(temp, dsize = (9,144))\n","      return temp\n","\n","  pred_csvs = [csv_load(k) for k in tqdm(csv_source)]\n","  pred_csvs = np.array(pred_csvs)\n","\n","  #학습 \n","\n","  y_1 = label_model.predict([pred_csvs,pred_jpgs])\n","  predicted_label = np.argmax(y_1,axis=1)\n","\n","  print(i)\n","  exec(f'a_{i} = predicted_label')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_Y7zPxrWI6Df","executionInfo":{"status":"ok","timestamp":1642994626733,"user_tz":-540,"elapsed":944463,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"4ac16d02-b857-4bc3-9250-de4cb2622f4c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 10381/10381 [01:26<00:00, 119.33it/s]\n","100%|██████████| 10381/10381 [01:32<00:00, 111.89it/s]\n"]},{"output_type":"stream","name":"stdout","text":["1\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 10381/10381 [01:15<00:00, 137.62it/s]\n","100%|██████████| 10381/10381 [01:31<00:00, 113.19it/s]\n"]},{"output_type":"stream","name":"stdout","text":["2\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 10381/10381 [01:15<00:00, 137.04it/s]\n","100%|██████████| 10381/10381 [01:32<00:00, 112.15it/s]\n"]},{"output_type":"stream","name":"stdout","text":["3\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 10381/10381 [01:18<00:00, 132.50it/s]\n","100%|██████████| 10381/10381 [01:31<00:00, 113.36it/s]\n"]},{"output_type":"stream","name":"stdout","text":["4\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 10382/10382 [01:14<00:00, 140.09it/s]\n","100%|██████████| 10382/10382 [01:32<00:00, 112.25it/s]\n"]},{"output_type":"stream","name":"stdout","text":["5\n"]}]},{"cell_type":"code","source":["pred_csvs.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v6ArEFUoLis1","executionInfo":{"status":"ok","timestamp":1642559587417,"user_tz":-540,"elapsed":282,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"9a8562cf-92f1-473e-8df0-0bec9c6beddb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10381, 294, 9)"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["print(a_1.shape,a_2.shape,a_3.shape,a_4.shape,a_5.shape)"],"metadata":{"id":"UASiftdxXuLY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 라벨 디코더 "],"metadata":{"id":"uOGPqB-rcTIG"}},{"cell_type":"code","source":["crops = []\n","diseases = []\n","risks = []\n","labels = []\n","\n","for i in range(len(train_json)):\n","    with open(train_json[i], 'r') as f:\n","        sample = json.load(f)\n","        crop = sample['annotations']['crop']\n","        disease = sample['annotations']['disease']\n","        risk = sample['annotations']['risk']\n","        label=f\"{crop}_{disease}_{risk}\"\n","    \n","        crops.append(crop)\n","        diseases.append(disease)\n","        risks.append(risk)\n","        labels.append(label)\n","        \n","label_decoding = sorted(np.unique(labels))\n","label_decoding = {value:key for key,value in zip(label_decoding, range(len(label_decoding)))}"],"metadata":{"id":"JOH_cYdbcYZ-"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## submission"],"metadata":{"id":"JQv08PrPYJEQ"}},{"cell_type":"code","source":["submission = pd.read_csv('/content/sample_submission.csv')"],"metadata":{"id":"RXgG83CDYJsg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["i=10381\n","submission['label'][:i] =a_1\n","submission['label'][i:i*2] = a_2\n","submission['label'][i*2:i*3] = a_3\n","submission['label'][i*3:i*4] = a_4\n","submission['label'][i*4:] = a_5"],"metadata":{"id":"aCpKNs6mYYCQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1642994631126,"user_tz":-540,"elapsed":5,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"9198d884-b0ad-4fc6-e444-5abe56edb410"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  This is separate from the ipykernel package so we can avoid doing imports until\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  after removing the cwd from sys.path.\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n"]}]},{"cell_type":"code","source":["submission['label'] = submission['label'].apply(lambda x:label_decoding[x])"],"metadata":{"id":"MWfsTjk8dIIt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["submission.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":205},"id":"bRRY1BF0de1O","executionInfo":{"status":"ok","timestamp":1642546141490,"user_tz":-540,"elapsed":522,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"8f737dd1-a1d1-4cf3-9ef8-5b619ebfc268"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-d5b134b9-d5c4-4197-af3d-9c8022d1a42b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>image</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10000</td>\n","      <td>6_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10001</td>\n","      <td>5_b6_1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10002</td>\n","      <td>4_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10003</td>\n","      <td>3_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10004</td>\n","      <td>3_b8_1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5b134b9-d5c4-4197-af3d-9c8022d1a42b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d5b134b9-d5c4-4197-af3d-9c8022d1a42b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d5b134b9-d5c4-4197-af3d-9c8022d1a42b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   image   label\n","0  10000  6_00_0\n","1  10001  5_b6_1\n","2  10002  4_00_0\n","3  10003  3_00_0\n","4  10004  3_b8_1"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","source":["submission.to_csv('submission4.csv',index=False)"],"metadata":{"id":"kQj9wuEodf-M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!cp submission4.csv /content/drive/MyDrive"],"metadata":{"id":"g8gvEwEd02Mg"},"execution_count":null,"outputs":[]}]}