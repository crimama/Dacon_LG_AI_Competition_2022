{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"22.01.24_Ver2_작물병해_3Head_crop","provenance":[{"file_id":"1DZXpP0vDhbmiOtNQ2HdGAbRcj-Ktt5fw","timestamp":1643004730667},{"file_id":"1IwQ_PgYuzU-0uJguU1z3CQgG7mDo01-K","timestamp":1642642447462}],"collapsed_sections":[],"machine_shape":"hm","mount_file_id":"1DZXpP0vDhbmiOtNQ2HdGAbRcj-Ktt5fw","authorship_tag":"ABX9TyPwupnNjFViyHt0vwCuW2tt"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["# 사전 준비 "],"metadata":{"id":"ETxqJYy-l0gL"}},{"cell_type":"markdown","metadata":{"id":"Ab8zJIYh-fgL"},"source":["##데이터 호출 "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":148403,"status":"ok","timestamp":1642990637486,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"fJThLClH-hr9","outputId":"aee480bc-201b-460f-a4bf-6a7ec9ed21a1"},"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  /content/drive/MyDrive/DataSet/작물병해/data.zip\n","  inflating: sample_submission.csv   \n","  inflating: test.zip                \n","  inflating: train.csv               \n","  inflating: train.zip               \n"]}],"source":["!unzip /content/drive/MyDrive/DataSet/작물병해/data.zip"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1-0ubyia_1Nu"},"outputs":[],"source":["!unzip train.zip"]},{"cell_type":"markdown","metadata":{"id":"Zo0y4tau_V4E"},"source":["## 모듈 임포트"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dRznw7f2_XCs"},"outputs":[],"source":["import pandas as pd \n","import numpy as np \n","import matplotlib.pyplot as plt \n","import os\n","import cv2 \n","from glob import glob\n","from tqdm import tqdm\n","import json"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"820F_6HCb9-1"},"outputs":[],"source":["from tensorflow.keras import Sequential\n","from tensorflow.keras import optimizers\n","from tensorflow.keras.layers import BatchNormalization\n","from tensorflow.keras.layers import Conv2D\n","from tensorflow.keras.layers import MaxPooling2D\n","from tensorflow.keras.layers import Activation\n","from tensorflow.keras.layers import Dropout\n","from tensorflow.keras.layers import Dense\n","from tensorflow.keras.layers import Flatten\n","from tensorflow.keras.layers import Input\n","from tensorflow.keras import Model\n","from tensorflow.keras.layers import concatenate\n","from tensorflow.keras.applications import resnet50, efficientnet\n","from tensorflow.keras.applications import ResNet50, EfficientNetB0\n","from tensorflow.keras.layers import Bidirectional, LSTM, GRU"]},{"cell_type":"markdown","metadata":{"id":"MM2kasZcgPEq"},"source":["# 데이터 로드"]},{"cell_type":"markdown","metadata":{"id":"1fg7KDK2gRuo"},"source":["## 디렉토리 로드"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lfYFmBZyHZEh"},"outputs":[],"source":["train_csv = sorted(glob('train/*/*.csv'))\n","train_jpg = sorted(glob('train/*/*.jpg'))\n","train_json = sorted(glob('train/*/*.json'))"]},{"cell_type":"markdown","metadata":{"id":"28xaif_JgT0P"},"source":["## json 파일 로드"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hQmRd8iLH6GH"},"outputs":[],"source":["crops = []\n","diseases = []\n","risks = []\n","labels = []\n","\n","for i in range(len(train_json)):\n","    with open(train_json[i], 'r') as f:\n","        sample = json.load(f)\n","        crop = sample['annotations']['crop']\n","        disease = sample['annotations']['disease']\n","        risk = sample['annotations']['risk']\n","        label=f\"{crop}_{disease}_{risk}\"\n","    \n","        crops.append(crop)\n","        diseases.append(disease)\n","        risks.append(risk)\n","        labels.append(label)\n","        \n","label_unique = sorted(np.unique(labels))\n","label_unique = {key:value for key,value in zip(label_unique, range(len(label_unique)))}\n","label_decoding = {value:key for key,value in zip(label_unique, range(len(label_unique)))}\n","\n","labels = [label_unique[k] for k in labels]"]},{"cell_type":"code","source":["len(set(labels))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xRBw91zKQavt","executionInfo":{"status":"ok","timestamp":1643001377436,"user_tz":-540,"elapsed":307,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"0d238edf-2cf6-4aab-979d-99dfd5c604be"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["25"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["set(crops)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vdb9bYzqg308","executionInfo":{"status":"ok","timestamp":1643001384448,"user_tz":-540,"elapsed":280,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"4c632c73-d8de-4349-8bea-8908ff70546e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{1, 2, 3, 4, 5, 6}"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","metadata":{"id":"e2knImhRgc6n"},"source":["## 이미지 로드 "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":30858,"status":"ok","timestamp":1643001417175,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"id":"JWCW1qcEgdyK","outputId":"8782ecb7-79c4-4d2f-8b2a-eaa5c1499fbd"},"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 5767/5767 [00:30<00:00, 188.10it/s]\n"]}],"source":["def img_load(path):\n","    img = cv2.imread(path)\n","    img = cv2.resize(img, (224, 224))\n","    return img\n","\n","imgs = [img_load(k) for k in tqdm(train_jpg)]"]},{"cell_type":"markdown","source":["## CSV 로드"],"metadata":{"id":"qdm0AliZ6TZK"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"155mYE2Rs0hq"},"outputs":[],"source":["csv_features = ['내부 온도 1 평균', '내부 온도 1 최고', '내부 온도 1 최저', '내부 습도 1 평균', '내부 습도 1 최고', \n","               '내부 습도 1 최저', '내부 이슬점 평균', '내부 이슬점 최고', '내부 이슬점 최저']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mYKt9__jtFDC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643001471857,"user_tz":-540,"elapsed":51710,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"94854589-ff01-457b-a155-01cbbba31aba"},"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 5767/5767 [00:51<00:00, 112.30it/s]\n"]}],"source":["def csv_load(path):\n","    temp = pd.read_csv(path)\n","    temp = np.array(temp[csv_features])\n","    try:\n","      temp = temp.astype(float)\n","    except:\n","      temp[temp=='-']=0.\n","      temp = temp.astype(float)\n","    temp = cv2.resize(temp, dsize = (9,144))\n","    return temp\n","\n","csvs = [csv_load(k) for k in tqdm(train_csv)]\n","csvs = np.array(csvs)"]},{"cell_type":"code","source":["csvs.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"umlFY5f_YrHL","executionInfo":{"status":"ok","timestamp":1643001483629,"user_tz":-540,"elapsed":313,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"461aef71-1705-48ac-c2fc-e8c8523c0411"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5767, 144, 9)"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"xnyaO2aVB5o7"},"source":["# 전처리 "]},{"cell_type":"markdown","source":["## crops 인코딩"],"metadata":{"id":"RTDH9wikf1Sv"}},{"cell_type":"code","source":["set(crops)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4srj6H23f2eU","executionInfo":{"status":"ok","timestamp":1643001484544,"user_tz":-540,"elapsed":2,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"e1501ae0-427e-4a71-cee9-87867f3c4b80"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{1, 2, 3, 4, 5, 6}"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["for i in range(0,6):\n","  crops[crops==i+1]=i"],"metadata":{"id":"J9JSHkOtf4F3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(set(crops),len(crops))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PvcoBKcxgAPb","executionInfo":{"status":"ok","timestamp":1643001487856,"user_tz":-540,"elapsed":324,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"7e6e60b9-0d84-4f40-a36f-823e7e3cbd31"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{1, 2, 3, 4, 5, 6} 5767\n"]}]},{"cell_type":"markdown","source":["## Augmentation"],"metadata":{"id":"ql54OSOEkUN5"}},{"cell_type":"markdown","source":["이미지"],"metadata":{"id":"7wEIHCaxkWaB"}},{"cell_type":"code","source":["def rotate_img(img, degree):\n","  if degree == 90:\n","    return_img = cv2.rotate(img,cv2.ROTATE_90_CLOCKWISE)\n","  if degree == 180:\n","    return_img = cv2.rotate(img, cv2.ROTATE_180)\n","  if degree == 270:\n","    return_img = cv2.rotate(img, cv2.ROTATE_90_COUNTERCLOCKWISE)\n","  return return_img"],"metadata":{"id":"vW-hVckAlKpJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["imgs_90 = [rotate_img(k,90) for k in tqdm(imgs)]\n","imgs_180 = [rotate_img(k,180) for k in tqdm(imgs)]\n","imgs_270 = [rotate_img(k,270) for k in tqdm(imgs)]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ke36B8nYlouT","executionInfo":{"status":"ok","timestamp":1643001494413,"user_tz":-540,"elapsed":3922,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"10753cca-c58d-4e9f-b9b5-1ab8865c4948"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 5767/5767 [00:01<00:00, 3583.90it/s]\n","100%|██████████| 5767/5767 [00:01<00:00, 4735.42it/s]\n","100%|██████████| 5767/5767 [00:01<00:00, 5293.27it/s]\n"]}]},{"cell_type":"code","source":["augmented_imgs = np.concatenate([imgs,imgs_90,imgs_180,imgs_270])\n","augmented_crops = np.concatenate([crops,crops,crops,crops])\n","augmented_csvs = np.concatenate([csvs,csvs,csvs,csvs])\n","augmented_labels = np.concatenate([labels,labels,labels,labels])"],"metadata":{"id":"pzolO5VumANQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(augmented_imgs.shape,augmented_csvs.shape,augmented_labels.shape,augmented_crops.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LW1nWbxwmjHf","executionInfo":{"status":"ok","timestamp":1643001504363,"user_tz":-540,"elapsed":313,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"8592b2b9-4a5d-4afd-f9e8-8372dc7bcad2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(23068, 224, 224, 3) (23068, 144, 9) (23068,) (23068,)\n"]}]},{"cell_type":"code","source":["del imgs, imgs_180, imgs_270, imgs_90, csvs, labels,crops,diseases,risks #메모리 관리 "],"metadata":{"id":"QiyZo1PM-0O-"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 믹싱"],"metadata":{"id":"acZdrHKl5HEc"}},{"cell_type":"code","source":["index = np.arange(len(augmented_imgs))\n","np.random.shuffle(index)"],"metadata":{"id":"ZP6P8geBmeG3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["augmented_labels = augmented_labels[index]\n","augmented_crops = augmented_crops[index]\n","augmented_csvs = augmented_csvs[index]\n","augmented_imgs = augmented_imgs[index]"],"metadata":{"id":"ThPx8mjnmoU_"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X37B66Jaf4lc"},"outputs":[],"source":["augmented_imgs = efficientnet.preprocess_input(augmented_imgs)"]},{"cell_type":"code","source":["print(augmented_imgs.shape,augmented_csvs.shape,augmented_labels.shape,augmented_crops.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RDgoiDGqpK5-","executionInfo":{"status":"ok","timestamp":1643001542356,"user_tz":-540,"elapsed":2,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"d12f6e27-0af5-4f1e-b609-d605b48bd0a8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(23068, 224, 224, 3) (23068, 144, 9) (23068,) (23068,)\n"]}]},{"cell_type":"markdown","source":["## 트레인 - 테스트 분할"],"metadata":{"id":"1UjzrSTEgpyU"}},{"cell_type":"code","source":["index = int(len(augmented_csvs)*0.8)\n","train_imgs = augmented_imgs[:index]\n","test_imgs = augmented_imgs[index:]\n","\n","train_csvs = augmented_csvs[:index]\n","test_csvs = augmented_csvs[index:]\n","\n","train_labels = augmented_labels[:index]\n","test_labels = augmented_labels[index:]\n","\n","train_crops = augmented_crops[:index]\n","test_crops = augmented_crops[index:]"],"metadata":{"id":"6H6dgkHogrt5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(train_imgs.shape, train_csvs.shape, train_labels.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XWOB89p8hBJh","executionInfo":{"status":"ok","timestamp":1643001552949,"user_tz":-540,"elapsed":404,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"68b003f7-661f-4afb-8fec-0567d18f3e18"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(18454, 224, 224, 3) (18454, 144, 9) (18454,)\n"]}]},{"cell_type":"markdown","source":["# 모델링"],"metadata":{"id":"rTyk92b5P2WW"}},{"cell_type":"markdown","source":["## 모델링 사전 설정"],"metadata":{"id":"2SAQF2q_ZZdM"}},{"cell_type":"code","source":["# copy from https://gist.github.com/stared/dfb4dfaf6d9a8501cd1cc8b8cb806d2e\n","# loss 실시간 출력 \n","from IPython.display import clear_output\n","from tensorflow.keras.callbacks import Callback\n","\n","class PlotLosses(Callback):\n","\n","  def on_train_begin(self, logs={}):\n","    self.epochs = []\n","    self.losses = []\n","    self.val_losses = []\n","    self.logs = []\n","    self.fig = plt.figure()\n","\n","\n","  def on_epoch_end(self, epoch, logs={}):\n","\n","    self.epochs.append(epoch)\n","    self.losses.append(logs.get('loss'))\n","    self.val_losses.append(logs.get('val_loss'))\n","\n","    clear_output(wait=True)\n","    plt.plot(self.epochs, self.losses, label=\"loss\")\n","    plt.plot(self.epochs, self.val_losses, label=\"val_loss\")\n","    plt.legend()\n","    plt.show();\n","    print(\"loss = \", self.losses[-1], \", val_loss = \", self.val_losses[-1])\n","\n","#call backs 선언\n","plot_losses = PlotLosses()\n","\n","from tensorflow.keras.callbacks import ModelCheckpoint #<- model 저장 객체, best_model.h5라는 모델 이 저장 됨 \n","model_check_point = ModelCheckpoint(\n","    'best_model.h5', \n","    monitor='val_loss', \n","    verbose=1, \n","    save_best_only=True)\n","\n","\n","from tensorflow.keras.callbacks import EarlyStopping\n","early_stopping = EarlyStopping(\n","    monitor='val_loss',  # 모니터링 대상, 이걸 기준으로 멈춤 \n","    verbose=1,\n","    patience=50)         # 중지까지의 여유분\n","\n","from tensorflow.keras.callbacks import ReduceLROnPlateau\n","reduce_lr = ReduceLROnPlateau(\n","    monitor='val_loss', # 모니터링 대상\n","    patience=25,        # 대상ㅃ 기간동안 유지\n","    factor=0.2,         # 줄이는 양                              \n","    min_learning_rate=0.00001)     # 최소 학습율\n","\n","callbacks = [model_check_point, plot_losses, early_stopping, reduce_lr]"],"metadata":{"id":"uNzsLummUNjO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#optimizer leraning rate 조절 \n","adam = optimizers.Adam(learning_rate = 0.0005)"],"metadata":{"id":"xlfQ8gAbZdNx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["conv_layers = EfficientNetB0(weights='imagenet', include_top=False, input_shape=(224, 224, 3))\n","conv_layers.trainable = False"],"metadata":{"id":"eML94XRiUcem"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Phase1"],"metadata":{"id":"1C0suXatT7KK"}},{"cell_type":"markdown","source":["## 데이터 확인"],"metadata":{"id":"jvTjLbk-UD7y"}},{"cell_type":"code","source":["print(train_imgs.shape,test_imgs.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SBGNR4vkUEq4","executionInfo":{"status":"ok","timestamp":1643001672596,"user_tz":-540,"elapsed":305,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"f78bfb80-5a36-4844-e87e-8b81504a91cd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(18454, 224, 224, 3) (4614, 224, 224, 3)\n"]}]},{"cell_type":"code","source":["print(train_crops.shape,test_crops.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QW0ZQMKHUE7F","executionInfo":{"status":"ok","timestamp":1643001673511,"user_tz":-540,"elapsed":4,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"9c263440-616f-4278-b030-bc46da42277c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(18454,) (4614,)\n"]}]},{"cell_type":"markdown","source":["## 모델"],"metadata":{"id":"FP3YWiGwUTAf"}},{"cell_type":"code","source":["set(train_crops)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7vmFpvMpisdR","executionInfo":{"status":"ok","timestamp":1643001862308,"user_tz":-540,"elapsed":311,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"27b21a35-0833-4e92-877d-70c01b8dbed7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{0, 1, 2, 3, 4, 5}"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["model = Sequential()\n","model.add(Input((224,224,3)))\n","model.add(conv_layers)\n","model.add(Flatten())\n","model.add(Dense(32,activation = 'relu'))\n","model.add(BatchNormalization())\n","model.add(Dense(32,activation = 'relu'))\n","model.add(Dense(6,activation = 'softmax'))\n","\n","model.compile(optimizer=adam,loss='sparse_categorical_crossentropy',metrics=['accuracy'])\n","model.fit(train_imgs,train_crops, epochs=10, verbose=1, batch_size=256, validation_split=0.2,callbacks=callbacks)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":317},"id":"39i5m9USYrfB","executionInfo":{"status":"ok","timestamp":1643002071834,"user_tz":-540,"elapsed":190278,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"b9dfa37c-3eb4-4208-b930-2214dc65905b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["loss =  0.0029281151946634054 , val_loss =  0.04297664761543274\n","\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r58/58 [==============================] - 18s 303ms/step - loss: 0.0029 - accuracy: 0.9997 - val_loss: 0.0430 - val_accuracy: 0.9870 - lr: 5.0000e-04\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f9b1f5fcd50>"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["model.save('crop_model.h5')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cs6Y_La6jhyi","executionInfo":{"status":"ok","timestamp":1643002082855,"user_tz":-540,"elapsed":696,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"f201e544-b04e-4c56-937d-6a1f93507c50"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/keras/engine/functional.py:1410: CustomMaskWarning: Custom mask layers require a config and must override get_config. When loading, the custom mask layer must be passed to the custom_objects argument.\n","  layer_config = serialize_layer_fn(layer)\n"]}]},{"cell_type":"code","source":["y_ = model.predict(test_imgs)\n","predicted = np.argmax(y_,axis=1)"],"metadata":{"id":"8Z1a7-eljrS6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0caEe67Oj1bv","executionInfo":{"status":"ok","timestamp":1643002198604,"user_tz":-540,"elapsed":315,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"95f02207-1f67-4444-c21f-983755e7cf43"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2, 3, 4, 5])"]},"metadata":{},"execution_count":45}]},{"cell_type":"markdown","source":["# Phase 2 - label classification"],"metadata":{"id":"0bF4zktGT77l"}},{"cell_type":"markdown","source":["## 모델 "],"metadata":{"id":"W3XLNj8uRL1N"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"2Ujo-_ObRSrv"},"outputs":[],"source":["conv_layers = EfficientNetB0(weights='imagenet', include_top=False, input_shape=(224, 224, 3))\n","conv_layers.trainable = False"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fqwYWJadRSrv"},"outputs":[],"source":["#Env 데이터 파트 \n","Env_input = Input((144,9)) #<---- shape \n","x = Bidirectional(LSTM(128,return_sequences= True))(Env_input) #bidirec\n","x = Bidirectional(LSTM(128))(x)\n","x = Flatten()(x)\n","x = BatchNormalization()(x)\n","x = Dense(64, activation ='relu')(x)\n","x = BatchNormalization()(x)\n","x = Dense(32, activation ='relu')(x)\n","x = BatchNormalization()(x)\n","Env_output = Dense(10 ,activation='linear')(x)\n","\n","#iamge 데이터 파트 \n","image_input = Input((224,224,3))\n","x = conv_layers(image_input)\n","x = Flatten()(x)\n","x = BatchNormalization()(x)\n","x = Dense(64, activation='relu')(x)\n","x = BatchNormalization()(x)\n","x = Dense(32, activation='relu')(x)\n","x = BatchNormalization()(x)\n","image_output = Dense(10, activation='linear')(x)\n","\n","crops_input = Input(1)\n","x = Dense(32, activation = 'relu')(crops_input)\n","x = BatchNormalization()(x)\n","x = Dense(32, activation = 'relu')(x)\n","x = BatchNormalization()(x)\n","crops_output = Dense(10, activation = 'linear')(x)\n","\n","#헤드 결합 \n","combined_input = concatenate([Env_output,image_output,crops_output])\n","x= Dense(64, activation = 'relu')(combined_input) #<--- Dense \n","x = BatchNormalization()(x)\n","x= Dense(32, activation = 'relu')(x) #<--- Dense \n","x = BatchNormalization()(x)\n","output = Dense(25,activation = 'softmax')(x)\n","\n","label_model = Model([Env_input,image_input,crops_input],output)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":1039,"status":"ok","timestamp":1643002210086,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"},"user_tz":-540},"outputId":"de97c0df-4d97-4153-f97b-ee7b2025aecf","id":"xcCEc1EfRSrv"},"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":47}],"source":["#모델 설계 구조 \n","import tensorflow \n","tensorflow.keras.utils.plot_model(label_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"k_HX9oN1RSrw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643002213031,"user_tz":-540,"elapsed":332,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"7ff08df5-05fb-4e52-d365-59eb2873d334"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," input_6 (InputLayer)           [(None, 144, 9)]     0           []                               \n","                                                                                                  \n"," bidirectional (Bidirectional)  (None, 144, 256)     141312      ['input_6[0][0]']                \n","                                                                                                  \n"," input_7 (InputLayer)           [(None, 224, 224, 3  0           []                               \n","                                )]                                                                \n","                                                                                                  \n"," bidirectional_1 (Bidirectional  (None, 256)         394240      ['bidirectional[0][0]']          \n"," )                                                                                                \n","                                                                                                  \n"," efficientnetb0 (Functional)    (None, 7, 7, 1280)   4049571     ['input_7[0][0]']                \n","                                                                                                  \n"," flatten_4 (Flatten)            (None, 256)          0           ['bidirectional_1[0][0]']        \n","                                                                                                  \n"," flatten_5 (Flatten)            (None, 62720)        0           ['efficientnetb0[4][0]']         \n","                                                                                                  \n"," batch_normalization_4 (BatchNo  (None, 256)         1024        ['flatten_4[0][0]']              \n"," rmalization)                                                                                     \n","                                                                                                  \n"," batch_normalization_7 (BatchNo  (None, 62720)       250880      ['flatten_5[0][0]']              \n"," rmalization)                                                                                     \n","                                                                                                  \n"," input_8 (InputLayer)           [(None, 1)]          0           []                               \n","                                                                                                  \n"," dense_12 (Dense)               (None, 64)           16448       ['batch_normalization_4[0][0]']  \n","                                                                                                  \n"," dense_15 (Dense)               (None, 64)           4014144     ['batch_normalization_7[0][0]']  \n","                                                                                                  \n"," dense_18 (Dense)               (None, 32)           64          ['input_8[0][0]']                \n","                                                                                                  \n"," batch_normalization_5 (BatchNo  (None, 64)          256         ['dense_12[0][0]']               \n"," rmalization)                                                                                     \n","                                                                                                  \n"," batch_normalization_8 (BatchNo  (None, 64)          256         ['dense_15[0][0]']               \n"," rmalization)                                                                                     \n","                                                                                                  \n"," batch_normalization_10 (BatchN  (None, 32)          128         ['dense_18[0][0]']               \n"," ormalization)                                                                                    \n","                                                                                                  \n"," dense_13 (Dense)               (None, 32)           2080        ['batch_normalization_5[0][0]']  \n","                                                                                                  \n"," dense_16 (Dense)               (None, 32)           2080        ['batch_normalization_8[0][0]']  \n","                                                                                                  \n"," dense_19 (Dense)               (None, 32)           1056        ['batch_normalization_10[0][0]'] \n","                                                                                                  \n"," batch_normalization_6 (BatchNo  (None, 32)          128         ['dense_13[0][0]']               \n"," rmalization)                                                                                     \n","                                                                                                  \n"," batch_normalization_9 (BatchNo  (None, 32)          128         ['dense_16[0][0]']               \n"," rmalization)                                                                                     \n","                                                                                                  \n"," batch_normalization_11 (BatchN  (None, 32)          128         ['dense_19[0][0]']               \n"," ormalization)                                                                                    \n","                                                                                                  \n"," dense_14 (Dense)               (None, 10)           330         ['batch_normalization_6[0][0]']  \n","                                                                                                  \n"," dense_17 (Dense)               (None, 10)           330         ['batch_normalization_9[0][0]']  \n","                                                                                                  \n"," dense_20 (Dense)               (None, 10)           330         ['batch_normalization_11[0][0]'] \n","                                                                                                  \n"," concatenate (Concatenate)      (None, 30)           0           ['dense_14[0][0]',               \n","                                                                  'dense_17[0][0]',               \n","                                                                  'dense_20[0][0]']               \n","                                                                                                  \n"," dense_21 (Dense)               (None, 64)           1984        ['concatenate[0][0]']            \n","                                                                                                  \n"," batch_normalization_12 (BatchN  (None, 64)          256         ['dense_21[0][0]']               \n"," ormalization)                                                                                    \n","                                                                                                  \n"," dense_22 (Dense)               (None, 32)           2080        ['batch_normalization_12[0][0]'] \n","                                                                                                  \n"," batch_normalization_13 (BatchN  (None, 32)          128         ['dense_22[0][0]']               \n"," ormalization)                                                                                    \n","                                                                                                  \n"," dense_23 (Dense)               (None, 25)           825         ['batch_normalization_13[0][0]'] \n","                                                                                                  \n","==================================================================================================\n","Total params: 8,880,186\n","Trainable params: 4,703,959\n","Non-trainable params: 4,176,227\n","__________________________________________________________________________________________________\n"]}],"source":["#학습 방식은 동일 \n","label_model.compile(optimizer=adam, loss=\"sparse_categorical_crossentropy\",metrics = ['accuracy'],)\n","label_model.summary() #optimizer tuning"]},{"cell_type":"markdown","metadata":{"id":"uzz5d579RSrw"},"source":["## 학습"]},{"cell_type":"markdown","source":["adam lr 0.0005 + lstm stacked 로 한 경우 18"],"metadata":{"id":"vatQuhPxhaQM"}},{"cell_type":"code","source":["history = label_model.fit([train_csvs,train_imgs,train_crops],train_labels, epochs=50, verbose=1, batch_size=256, validation_split=0.2,callbacks=callbacks)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"4RkkhNNThZ11","executionInfo":{"status":"ok","timestamp":1643003335848,"user_tz":-540,"elapsed":1119030,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"feee86dd-a94c-4dcd-b92a-41587edc55b0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["loss =  0.0008912243065424263 , val_loss =  0.14571376144886017\n","\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r58/58 [==============================] - 22s 378ms/step - loss: 8.9122e-04 - accuracy: 1.0000 - val_loss: 0.1457 - val_accuracy: 0.9640 - lr: 1.0000e-04\n"]}]},{"cell_type":"code","source":["label_model.save('label_mode.h5')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UPmIR3oHggon","executionInfo":{"status":"ok","timestamp":1643003376861,"user_tz":-540,"elapsed":1078,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"8f0a806a-d337-4298-c9e7-27ebfb5090ea"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/keras/engine/functional.py:1410: CustomMaskWarning: Custom mask layers require a config and must override get_config. When loading, the custom mask layer must be passed to the custom_objects argument.\n","  layer_config = serialize_layer_fn(layer)\n"]}]},{"cell_type":"markdown","source":["## 자체 예측 스코어"],"metadata":{"id":"ph5792w5f7sg"}},{"cell_type":"markdown","source":["adam lr 0.0005로 조정한 경우"],"metadata":{"id":"xq5cffDXf9HB"}},{"cell_type":"code","source":["y_ = label_model.predict([test_csvs,test_imgs])\n","predicted = np.argmax(y_,axis=1)\n","predicted - test_labels"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pga7n5fplxia","executionInfo":{"status":"ok","timestamp":1642993585165,"user_tz":-540,"elapsed":12527,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"040e8ead-f9f6-4ea4-f98f-92004fed93fe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, ..., 0, 0, 0])"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","from sklearn.metrics import confusion_matrix\n","\n","cm = confusion_matrix(test_labels, predicted)\n","print(cm)"],"metadata":{"id":"u3OmGV25mSw5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(classification_report(test_labels, predicted, target_names=['0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24']))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gjCb_zZOmU8R","executionInfo":{"status":"ok","timestamp":1642583480164,"user_tz":-540,"elapsed":264,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"6302f559-cde3-48ab-e38d-d6ddd57997c7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00       636\n","           1       0.99      1.00      1.00       112\n","           2       1.00      0.99      1.00       158\n","           3       1.00      1.00      1.00       924\n","           4       0.59      0.69      0.64       119\n","           5       0.52      0.55      0.53       100\n","           6       0.29      0.10      0.15        39\n","           7       1.00      0.92      0.96       130\n","           8       0.80      0.81      0.81       118\n","           9       1.00      0.99      1.00       125\n","          10       0.81      0.89      0.85       106\n","          11       1.00      1.00      1.00       764\n","          12       1.00      1.00      1.00        45\n","          13       1.00      1.00      1.00        73\n","          14       0.92      0.94      0.93       143\n","          15       1.00      1.00      1.00       106\n","          16       0.89      0.87      0.88       123\n","          17       1.00      1.00      1.00       666\n","          18       0.97      0.97      0.97        34\n","          19       1.00      1.00      1.00        13\n","          20       1.00      1.00      1.00        16\n","          21       1.00      0.95      0.97        20\n","          22       1.00      1.00      1.00        13\n","          23       1.00      1.00      1.00         9\n","          24       0.95      0.95      0.95        22\n","\n","    accuracy                           0.96      4614\n","   macro avg       0.91      0.91      0.91      4614\n","weighted avg       0.96      0.96      0.96      4614\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"GuVLESWBCvfq"},"source":["# submission "]},{"cell_type":"markdown","source":["## 데이터 로드 및 학습 "],"metadata":{"id":"a_E3e1a0eTk7"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"JLo93tBplXtx"},"outputs":[],"source":["!unzip test.zip"]},{"cell_type":"code","source":["from tensorflow import keras\n","label_model = keras.models.load_model('/content/label_model.h5')\n","crop_model = keras.models.load_model('/content/crop_model.h5')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k4eKPyPMDPBn","executionInfo":{"status":"ok","timestamp":1643003504933,"user_tz":-540,"elapsed":8708,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"3774b0f6-dd29-4f6a-a139-9fe6d4dc325e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["WARNING:tensorflow:Error in loading the saved optimizer state. As a result, your model is starting with a freshly initialized optimizer.\n","WARNING:tensorflow:Error in loading the saved optimizer state. As a result, your model is starting with a freshly initialized optimizer.\n"]}]},{"cell_type":"code","source":["test_csv = sorted(glob('test/*/*.csv'))\n","test_jpg = sorted(glob('test/*/*.jpg'))"],"metadata":{"id":"tY_2ayckIHA4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["i = 10381\n","pred_csv_1 = np.array(test_csv[:i])\n","pred_jpg_1 = np.array(test_jpg[:i])\n","\n","pred_csv_2 = np.array(test_csv[i:i*2])\n","pred_jpg_2 = np.array(test_jpg[i:i*2])\n","\n","pred_csv_3 = np.array(test_csv[i*2:i*3])\n","pred_jpg_3 = np.array(test_jpg[i*2:i*3])\n","\n","pred_csv_4 = np.array(test_csv[i*3:i*4])\n","pred_jpg_4 = np.array(test_jpg[i*3:i*4])\n","\n","pred_csv_5 = np.array(test_csv[i*4:])\n","pred_jpg_5 = np.array(test_jpg[i*4:])"],"metadata":{"id":"UdvAAtkeILyk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(pred_csv_1.shape,pred_csv_2.shape,pred_csv_3.shape,pred_csv_4.shape,pred_csv_5.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xsZMKJjzIl5D","executionInfo":{"status":"ok","timestamp":1643003516418,"user_tz":-540,"elapsed":289,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"4dee6733-7c69-4dc7-c7e8-e5d7a3114896"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(10381,) (10381,) (10381,) (10381,) (10382,)\n"]}]},{"cell_type":"markdown","source":["사전 설정"],"metadata":{"id":"_h5DkGsLJGhX"}},{"cell_type":"code","source":["csv_features"],"metadata":{"id":"qyRiMBOmJH2F","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643003400687,"user_tz":-540,"elapsed":340,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"6e2b56f0-ebef-49fe-848d-d2df74bb0d90"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['내부 온도 1 평균',\n"," '내부 온도 1 최고',\n"," '내부 온도 1 최저',\n"," '내부 습도 1 평균',\n"," '내부 습도 1 최고',\n"," '내부 습도 1 최저',\n"," '내부 이슬점 평균',\n"," '내부 이슬점 최고',\n"," '내부 이슬점 최저']"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["#이미지 파일 로드 \n","for i in range(1,6):\n","  exec(f'jpg_source = pred_jpg_{i}')\n","  exec(f'csv_source = pred_csv_{i}')\n","\n","  def img_load(path):\n","      img = cv2.imread(path)\n","      img = cv2.resize(img, (224, 224))\n","      return img\n","\n","  pred_jpgs = [img_load(k) for k in tqdm(jpg_source)]\n","  pred_jpgs = np.array(pred_jpgs)\n","  pred_jpgs = efficientnet.preprocess_input(pred_jpgs)\n","\n","  #csv 파일 로드 \n","\n","  def csv_load(path):\n","      temp = pd.read_csv(path)\n","      temp = np.array(temp[csv_features])\n","      try:\n","        temp = temp.astype(float)\n","      except:\n","        temp[temp=='-']=0.\n","        temp = temp.astype(float)\n","      temp = cv2.resize(temp, dsize = (9,144))\n","      return temp\n","\n","  pred_csvs = [csv_load(k) for k in tqdm(csv_source)]\n","  pred_csvs = np.array(pred_csvs)\n","\n","  #학습 \n","\n","  y_0 = crop_model.predict([pred_jpgs])\n","  pred_crops = np.argmax(y_0,axis=1)\n","\n","  y_1 = label_model.predict([pred_csvs,pred_jpgs,pred_crops])\n","  predicted_label = np.argmax(y_1,axis=1)\n","\n","  print(i)\n","  exec(f'a_{i} = predicted_label')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":641},"id":"_Y7zPxrWI6Df","executionInfo":{"status":"error","timestamp":1643004483176,"user_tz":-540,"elapsed":908820,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"221ba8d4-72bb-4143-ffa9-0d4a35f67a3b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 10381/10381 [00:57<00:00, 181.66it/s]\n","100%|██████████| 10381/10381 [01:32<00:00, 112.15it/s]\n"]},{"output_type":"stream","name":"stdout","text":["1\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 10381/10381 [01:02<00:00, 165.44it/s]\n","100%|██████████| 10381/10381 [01:35<00:00, 108.88it/s]\n"]},{"output_type":"stream","name":"stdout","text":["2\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 10381/10381 [00:58<00:00, 176.48it/s]\n","100%|██████████| 10381/10381 [01:34<00:00, 109.65it/s]\n"]},{"output_type":"stream","name":"stdout","text":["3\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 10381/10381 [01:02<00:00, 167.04it/s]\n","100%|██████████| 10381/10381 [01:29<00:00, 115.85it/s]\n"]},{"output_type":"stream","name":"stdout","text":["4\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 10382/10382 [00:58<00:00, 176.04it/s]\n","100%|██████████| 10382/10382 [01:34<00:00, 109.94it/s]\n"]},{"output_type":"error","ename":"InternalError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mInternalError\u001b[0m                             Traceback (most recent call last)","\u001b[0;32m<ipython-input-14-68635c61109b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     31\u001b[0m   \u001b[0;31m#학습\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     32\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 33\u001b[0;31m   \u001b[0my_0\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcrop_model\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mpred_jpgs\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     34\u001b[0m   \u001b[0mpred_crops\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     35\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 67\u001b[0;31m       \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     68\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m       \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/constant_op.py\u001b[0m in \u001b[0;36mconvert_to_eager_tensor\u001b[0;34m(value, ctx, dtype)\u001b[0m\n\u001b[1;32m    104\u001b[0m       \u001b[0mdtype\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdtypes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_datatype_enum\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    105\u001b[0m   \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 106\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mEagerTensor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdevice_name\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    107\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    108\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mInternalError\u001b[0m: Failed copying input tensor from /job:localhost/replica:0/task:0/device:CPU:0 to /job:localhost/replica:0/task:0/device:GPU:0 in order to run _EagerConst: Dst tensor is not initialized."]}]},{"cell_type":"code","source":["y_0 = crop_model.predict([pred_jpgs])\n","pred_crops = np.argmax(y_0,axis=1)\n","\n","y_1 = label_model.predict([pred_csvs,pred_jpgs,pred_crops])\n","predicted_label = np.argmax(y_1,axis=1)"],"metadata":{"id":"v6ArEFUoLis1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a_5 = predicted_label"],"metadata":{"id":"d7hYqNG5tG08"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(a_1.shape,a_2.shape,a_3.shape,a_4.shape,a_5.shape)"],"metadata":{"id":"UASiftdxXuLY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643004595354,"user_tz":-540,"elapsed":288,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"c879f7c5-568c-41cd-84cf-c8154bfb5ac8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(10381,) (10381,) (10381,) (10381,) (10382,)\n"]}]},{"cell_type":"markdown","source":["## 라벨 디코더 "],"metadata":{"id":"uOGPqB-rcTIG"}},{"cell_type":"markdown","source":["## submission"],"metadata":{"id":"JQv08PrPYJEQ"}},{"cell_type":"code","source":["submission = pd.read_csv('/content/sample_submission.csv')"],"metadata":{"id":"RXgG83CDYJsg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["i=10381\n","submission['label'][:i] =a_1\n","submission['label'][i:i*2] = a_2\n","submission['label'][i*2:i*3] = a_3\n","submission['label'][i*3:i*4] = a_4\n","submission['label'][i*4:] = a_5"],"metadata":{"id":"aCpKNs6mYYCQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["submission['label'] = submission['label'].apply(lambda x:label_decoding[x])"],"metadata":{"id":"MWfsTjk8dIIt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["submission.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"bRRY1BF0de1O","executionInfo":{"status":"ok","timestamp":1643004606663,"user_tz":-540,"elapsed":262,"user":{"displayName":"Hun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVHZSSFgcflbXyuTjHb3XRMHAe4x_B6Mr4f6XvzA=s64","userId":"07972583068794560208"}},"outputId":"a78de00d-a5b8-475c-b923-3ddd25131323"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-02766a94-1c9c-4adf-925c-8048c94edf7a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>image</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10000</td>\n","      <td>6_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10001</td>\n","      <td>5_b6_1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10002</td>\n","      <td>4_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10003</td>\n","      <td>3_00_0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10004</td>\n","      <td>3_b8_1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02766a94-1c9c-4adf-925c-8048c94edf7a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-02766a94-1c9c-4adf-925c-8048c94edf7a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-02766a94-1c9c-4adf-925c-8048c94edf7a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   image   label\n","0  10000  6_00_0\n","1  10001  5_b6_1\n","2  10002  4_00_0\n","3  10003  3_00_0\n","4  10004  3_b8_1"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["submission.to_csv('submission5.csv',index=False)"],"metadata":{"id":"kQj9wuEodf-M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!cp submission4.csv /content/drive/MyDrive"],"metadata":{"id":"g8gvEwEd02Mg"},"execution_count":null,"outputs":[]}]}